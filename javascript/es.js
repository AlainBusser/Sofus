// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.fr');

goog.require('Blockly.Msg');

Blockly.Msg.ADD_COMMENT = "Añadir un comentario";
Blockly.Msg.AUTH = "Por favor, activa esta aplicación para permitir la copia de seguridad de su trabajo y permitir compartir.";
Blockly.Msg.CHANGE_VALUE_TITLE = "Modificar el valor :";
Blockly.Msg.CHAT = "Discutir con su colaborador escribiendo en esta área !";
Blockly.Msg.CLEAN_UP = "Quitar los bloques";  // untranslated
Blockly.Msg.COLLAPSE_ALL = "Reducir bloques";
Blockly.Msg.COLLAPSE_BLOCK = "Reducir el bloque";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "color 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "color 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";
Blockly.Msg.COLOUR_BLEND_RATIO = "ratio";
Blockly.Msg.COLOUR_BLEND_TITLE = "mezclar";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Mezcla de dos colores con una relación dada (0.0 a 1.0).";
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://fr.wikipedia.org/wiki/Couleur";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Elegir un color de la paleta";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "color aleatorio";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Elija un color al azar.";
Blockly.Msg.COLOUR_RGB_BLUE = "azul";
Blockly.Msg.COLOUR_RGB_GREEN = "verde";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";
Blockly.Msg.COLOUR_RGB_RED = "rojo";
Blockly.Msg.COLOUR_RGB_TITLE = "colorear con";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Crea un color con la cantidad de rojo, verde y azul. Los valores deben estar entre 0 y 100.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "salir de un bloque";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continúe con la siguiente iteración del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Salir del bloque.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Omita el resto de este bucle, y continuar con la siguiente iteración.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "Advertencia: Este bloque se debe utilizar solamente en un bucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://github.com/google/blockly/wiki/Loops#for-each";  // untranslated
Blockly.Msg.CONTROLS_FOREACH_TITLE = "por cada elemento %1 en la lista %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Para cada elemento de una lista, que da el valor del elemento de la variable '%1', a continuación, ejecutar ciertas órdenes.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "contar con %1 de %2 à %3 para %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Para asegurar que la variable « %1 » toma valores desde el principio hasta el final del número de serie incrementando el intervalo especificado, y llevar a cabo las órdenes especificadas..";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Agregar una condición al bloque si.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Añadir un bloque condición de mano final si.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Añadir, eliminar o cambiar el orden de las secciones que volver a configurar este bloque sin embargo.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sino";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sino si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si un valor es verdadero, a continuación, ejecutar ciertas órdenes.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si un valor es verdadero, entonces la ejecución de los primeros pedidos en bloque. De lo contrario, ejecutar el segundo comando de bloque.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si el primer valor es cierto, entonces la ejecución de los primeros pedidos en bloque. De lo contrario, si el segundo valor es verdadero, ejecutar el segundo comando de bloque.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si el primer valor es cierto, entonces la ejecución de los primeros pedidos en bloque. De lo contrario, si el segundo valor es verdadero, la ejecución de las órdenes segundo bloque. Si no hay valores son verdaderos, ejecute el último bloque de órdenes.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "http://fr.wikipedia.org/wiki/Boucle_for";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "hacer";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repetir %1 veces";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Ejecutar ciertas órdenes varias veces.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repetir hasta";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repetir tant que";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Hasta que un valor es falso, entonces ejecutar ciertas órdenes.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Hasta que un valor es verdadero, a continuación, ejecutar ciertas órdenes.";
Blockly.Msg.DELETE_BLOCK = "Suprimir el bloque";
Blockly.Msg.DELETE_X_BLOCKS = "Suprimir %1 bloques";
Blockly.Msg.DISABLE_BLOCK = "Desactivar el bloque";
Blockly.Msg.DUPLICATE_BLOCK = "Duplicar";
Blockly.Msg.ENABLE_BLOCK = "Activar el bloque";
Blockly.Msg.EXPAND_ALL = "Expandir los bloques";
Blockly.Msg.EXPAND_BLOCK = "Expandir el bloque";
Blockly.Msg.EXTERNAL_INPUTS = "Entradas externas";
Blockly.Msg.HELP = "Ayuda";
Blockly.Msg.INLINE_INPUTS = "Entradas en linea";
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "crear una lista vacía";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Devolver una lista de longitud 0, sin registros";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Añadir, eliminar o cambiar el orden de las secciones para reconfigurar esta lista de bloqueo.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "crear una lista con";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Añadir un elemento a la lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Crear una lista con cualquier número de elementos.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primero";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# desde el final";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtener";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtener y suprimir";
Blockly.Msg.LISTS_GET_INDEX_LAST = "ultimo";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleatorio";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "suprimir";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Devuelve el elemento a la posición indicada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Devuelve el elemento a la posición indicada en una lista. # 1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Devuelve un artículo al azar de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Elimina y devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Elimina y devuelve el elemento a la posición indicada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Elimina y devuelve el elemento a la posición indicada en una lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Elimina y devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Elimina y devuelve un elemento al azar de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Elimina el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Elimina el elemento en la posición indicada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Elimina el elemento en la posición indicada en una lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Elimina el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Elimina un elemento al azar de una lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "hasta # desde el final";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "hasta #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "hasta la fin";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtener la sublista desde el principio";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtener la sublista de # desde el final";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtener la sublista de #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crea una copia de la parte específica de una lista.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "encontrar la primera aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "Encuentra la última aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Devuelve el índice del primer/último caso del elemento de la lista. Devuelve 0 si no se encuentra el elemento.";
Blockly.Msg.LISTS_INLIST = "en la lista";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 vacía";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Devuelve true si la lista está vacía.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longitud %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Devuelve la longitud de una lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "crear una lista con el elemento %1 répetido %2 veces";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crear una lista constituida por el valor mencionado repetidas veces el número de veces.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "como";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insertar en";
Blockly.Msg.LISTS_SET_INDEX_SET = "poner";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserta el elemento al principio de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserta el elemento en la posición indicada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserta el elemento en la posición indicada en una lista. #1 es el primer elemento..";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Añadir el artículo al final de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserta el elemento al azar de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Establece el primer elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "El elemento fijo en la posición indicada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "El elemento fijo en la posición indicada en una lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Establece el último elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Se ha corregido un artículo al azar de una lista.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "crear una lista del texto";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "crear un texto de la lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Recopilar una lista de textos en uno, separados por un separador.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Cortar un texto en una lista de texto, cortar cada separador.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "con el separador";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falso";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Devuelve ya sea verdadero o falso.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "cierto";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://en.wikipedia.org/wiki/Inequality_(mathematics)";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Devuelve verdadero si las dos entradas son iguales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Devuelve verdadero si la primera entrada es mayor que el segundo.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Devuelve verdadero si la primera entrada es mayor que o igual a la segunda.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Devuelve verdadero si la primera entrada es menor que el segundo.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Devuelve verdadero si la primera entrada es menor que o igual a la segunda.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Devuelve verdadero si las dos entradas no son iguales.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "no %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Devuelve verdadero si la entrada es falsa. Devuelve false si la entrada es verdadera.";
Blockly.Msg.LOGIC_NULL = "nulo";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Devuelve nulo.";
Blockly.Msg.LOGIC_OPERATION_AND = "AND";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "OR";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Devuelve verdadero si ambas entradas son verdaderas.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Devueve TRUE si al menos una de las entradas es cierto.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "condición";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si falso";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si cierto";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Compruebe la 'prueba' condición. Si es verdad, devuelve el valor 'si es verdad'; de lo contrario devuelve el valor 'tan falso'.";
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://en.wikipedia.org/wiki/Arithmetic";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Devuelve la suma de los dos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Devuelve el cociente de dos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Devuelve la diferencia de los dos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Devuelve el producto de dos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Devuelve el primer número elevado a la potencia del segundo.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "incrementar %1 de %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Añadir un número a la variable '%1'.";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://en.wikipedia.org/wiki/Mathematical_constant";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Devuelve una constante común: π (3.141 ...), e (2,718 ...), φ (1,618 ...), sqrt (2) (1,414 ...), sqrt (½) (0707 ...) o ∞ (infinito).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "contenido %1 entre %2 y %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Obligar a un número a estar en el rango especificado (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "es divisible par";
Blockly.Msg.MATH_IS_EVEN = "es par";
Blockly.Msg.MATH_IS_NEGATIVE = "es negativo";
Blockly.Msg.MATH_IS_ODD = "es impar";
Blockly.Msg.MATH_IS_POSITIVE = "es positivo";
Blockly.Msg.MATH_IS_PRIME = "es primero";
Blockly.Msg.MATH_IS_TOOLTIP = "Comprobar si un número es par, impar, en primer lugar, entero, positivo, negativo, o si es divisible por un número. Devuelve verdadero o falso.";
Blockly.Msg.MATH_IS_WHOLE = "es superior";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "resto de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Devuelve el resto de la división de dos números.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://en.wikipedia.org/wiki/Number";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un numero.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "promedio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "maximo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "minimo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "mayoría de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "elemento de la lista al azar";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "desviación estándar de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma de la lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Devuelve la media (aritmética) de los valores numéricos en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Devuelve el número más grande de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Devolver la mediana del número de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Devuelve el número más pequeño de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Devolverá una lista de elemento (s) más actual en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Devuelve un elemento de la lista de forma aleatoria.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Devuelve la desviación estándar de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Devuelve la suma de todos los números de la lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fracción aleatoria";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Devuelve una fracción aleatorio entre 0.0 (inclusive) y 1,0 (exclusivo).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://en.wikipedia.org/wiki/Random_number_generation";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "escribe nº aleatorio entre %1 y %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Devuelve un número entero aleatorio entre dos límites especificados incluidos.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://en.wikipedia.org/wiki/Rounding";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "redondear";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "redondear por abajo";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "redondear por arriba";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Redondear un número superior o inferior a.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://en.wikipedia.org/wiki/Square_root";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluto";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "raiz cuadrada";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Devuelve el valor absoluto de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Devuelve e a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Devuelve el logaritmo natural de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Devuelve el logaritmo en base 10 de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Devuelve el opuesto de un número";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Devuelve la potencia de 10 de un numero.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Devuelve la raíz cuadrada de un número.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://en.wikipedia.org/wiki/Trigonometric_functions";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Devuelve el arco coseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Devuelve el arco seno de un número..";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Devuelve el arco tangente de un número..";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Devuelve el coseno de un ángulo en grados (no está en radianes).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Devuelve el seno de un ángulo en grados (no está en radianes).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Devuelve la tangente de un ángulo en grados (no está en radianes).";
Blockly.Msg.ME = "Moi";
Blockly.Msg.NEW_VARIABLE = "Nueva variable…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nombre de la nueva variable :";
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permitir las órdenes";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con :";
Blockly.Msg.PROCEDURES_CALLNORETURN_CALL = "";  // untranslated
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "http://fr.wikipedia.org/wiki/Proc%C3%A9dure_%28informatique%29";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Ejecuta la función '%1' définida por el usuario.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Ejecuta la función '%1' definido por el usuario y utiliza su resultado.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "con :";
Blockly.Msg.PROCEDURES_CREATE_DO = "Crear '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "hacer cualquier cosa";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "à";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crea una función sin salida.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "retorno";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crea una función con una salida.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advertencia : Esta función tien parametros duplicados.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Resalte la definición de la función";
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si un valor es verdadero, entonces devolver un segundo valor.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advertencia: Este bloque puede ser utilizado sólo en una definición de función.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nombre de la entrada :";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Añadir una entrada a la función.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entradas";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Agregar, eliminar o reorganizar las entradas de esta función.";
Blockly.Msg.REMOVE_COMMENT = "Suprimir un comentario";
Blockly.Msg.RENAME_VARIABLE = "Renombrar la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renombrar las variables '%1' en :";
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "añadir el texto";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "para";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Añadir texto a la variable'%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "en minúsculas";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "en Mayuscula al inicio de cada palabra";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "en MAYUSCULAS";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Reenviar una copia del texto en otra parada.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtener la primera letra";
Blockly.Msg.TEXT_CHARAT_FROM_END = "sacar el texto # despues del fin";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtener el texto #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_CHARAT_LAST = "sacar el última letra";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtener una letra al azar";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Devolver la letra a la posición indicada.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Añadir texto al elemento.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "unir";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Añadir, eliminar o secciones para configurar este bloque de texto.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "hasta la letra # depuis la fin";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "hasta la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "hasta la ultima letra";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "en el texto";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "sacar la subcadena deespues da la primera letra";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtener la subcadena despues de la letra # desde el final";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtener la subcadena despues de la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Devuelve una parte específica del texto.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "encontrar la primera aparición de la cadena";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "encontrar la última ocurrencia de la cadena";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Devuelve el índice de la primera / el último caso del primer canal en el segundo. Devuelve 0 si no se encuentra la cadena.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 vacía";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Devuelve true si el texto suministrado está vacío.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "crear texto con";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Crear una pieza de texto mediante la agregación de cualquier número de elementos.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longitud %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Devuelve el número de letras (incluyendo espacios) en el texto proporcionado.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "mostrar %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Mostrar texto, números u otro valor especificado.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Solicitar un número al usuario.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Solicitar un texto al usuario.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "pide a un número con un mensaje";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "pide un texto con un mensaje";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://en.wikipedia.org/wiki/String_(computer_science)";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Una letra, una palabra o una línea de texto.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "quitar los espacios en ambos lados";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "quitar los espacios dejados";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "Quitar el espacio en el lado derecho";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Devuelve una copia del texto con espacios retirados de un extremo o ambos.";
Blockly.Msg.TODAY = "Hoy";
Blockly.Msg.VARIABLES_DEFAULT_NAME = "elemento";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Crear 'fijar %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://github.com/google/blockly/wiki/Variables#get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Devuelve el valor de esta variable.";
Blockly.Msg.VARIABLES_SET = "fijar %1 a %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Crear 'obtener %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Establece que esta variable sea igual al valor de la entrada";
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_CALLRETURN_CALL = Blockly.Msg.PROCEDURES_CALLNORETURN_CALL;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;