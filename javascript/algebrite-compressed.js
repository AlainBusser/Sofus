(function(){var $,ABS,ADD,ADJ,AND,APPROXRATIO,ARCCOS,ARCCOSH,ARCSIN,ARCSINH,ARCTAN,ARCTANH,ARG,ASSUME_REAL_VARIABLES,ATOMIZE,AUTOEXPAND,BAKE,BESSELJ,BESSELY,BINDING,BINOMIAL,BINOM_check_args,BUF,C1,C2,C3,C4,C5,C6,CACHE_DEBUGS,CACHE_HITSMISS_DEBUGS,CEILING,CHECK,CHOOSE,CIRCEXP,CLEAR,CLEARALL,CLEARPATTERNS,CLOCK,COEFF,COFACTOR,CONDENSE,CONJ,CONS,CONTRACT,COS,COSH,Condense,DEBUG,DEBUG_ABS,DEBUG_ARG,DEBUG_CLOCKFORM,DEBUG_IMAG,DEBUG_IS,DEBUG_POWER,DEBUG_RECT,DECOMP,DEFINT,DEGREE,DENOMINATOR,DERIVATIVE,DET,DET_check_arg,DIM,DIRAC,DIVISORS,DO,DOT,DOUBLE,DRAW,DRAWX,DSOLVE,DoubleLinkedList,E,EIGEN,EIGENVAL,EIGENVEC,EIG_N,EIG_check_arg,EIG_yydd,EIG_yyqq,ENABLE_CACHING,ERF,ERFC,EVAL,EXP,EXPAND,EXPCOS,EXPSIN,Eval,Eval_Eval,Eval_abs,Eval_add,Eval_adj,Eval_and,Eval_approxratio,Eval_arccos,Eval_arccosh,Eval_arcsin,Eval_arcsinh,Eval_arctan,Eval_arctanh,Eval_arg,Eval_besselj,Eval_bessely,Eval_binding,Eval_binomial,Eval_ceiling,Eval_check,Eval_choose,Eval_circexp,Eval_clear,Eval_clearall,Eval_clearpatterns,Eval_clock,Eval_coeff,Eval_cofactor,Eval_condense,Eval_conj,Eval_cons,Eval_contract,Eval_cos,Eval_cosh,Eval_decomp,Eval_defint,Eval_degree,Eval_denominator,Eval_derivative,Eval_det,Eval_dim,Eval_dirac,Eval_divisors,Eval_do,Eval_dsolve,Eval_eigen,Eval_eigenval,Eval_eigenvec,Eval_erf,Eval_erfc,Eval_exp,Eval_expand,Eval_expcos,Eval_expsin,Eval_factor,Eval_factorial,Eval_factorpoly,Eval_filter,Eval_float,Eval_floor,Eval_for,Eval_function_reference,Eval_gamma,Eval_gcd,Eval_hermite,Eval_hilbert,Eval_imag,Eval_index,Eval_inner,Eval_integral,Eval_inv,Eval_invg,Eval_isinteger,Eval_isprime,Eval_laguerre,Eval_lcm,Eval_leading,Eval_legendre,Eval_log,Eval_lookup,Eval_mod,Eval_multiply,Eval_noexpand,Eval_not,Eval_nroots,Eval_number,Eval_numerator,Eval_operator,Eval_or,Eval_outer,Eval_pattern,Eval_patternsinfo,Eval_polar,Eval_power,Eval_predicate,Eval_prime,Eval_print,Eval_print2dascii,Eval_printfull,Eval_printlatex,Eval_printlist,Eval_printplain,Eval_product,Eval_quote,Eval_quotient,Eval_rank,Eval_rationalize,Eval_real,Eval_rect,Eval_roots,Eval_setq,Eval_sgn,Eval_shape,Eval_silentpattern,Eval_simfac,Eval_simplify,Eval_sin,Eval_sinh,Eval_sqrt,Eval_stop,Eval_subst,Eval_sum,Eval_sym,Eval_symbolsinfo,Eval_tan,Eval_tanh,Eval_taylor,Eval_tensor,Eval_test,Eval_testeq,Eval_testge,Eval_testgt,Eval_testle,Eval_testlt,Eval_transpose,Eval_unit,Eval_user_function,Eval_zero,Evalpoly,FACTOR,FACTORIAL,FACTORPOLY,FILTER,FLOATF,FLOOR,FOR,FUNCTION,Find,GAMMA,GCD,HERMITE,HILBERT,IMAG,INDEX,INNER,INTEGRAL,INV,INVG,INV_check_arg,INV_decomp,ISINTEGER,ISPRIME,LAGUERRE,LAST,LAST_2DASCII_PRINT,LAST_FULL_PRINT,LAST_LATEX_PRINT,LAST_LIST_PRINT,LAST_PLAIN_PRINT,LAST_PRINT,LCM,LEADING,LEGENDRE,LOG,LOOKUP,LRUCache,M,MAXDIM,MAXPRIMETAB,MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES,MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE,MAX_PROGRAM_SIZE,MEQUAL,METAA,METAB,METAX,MLENGTH,MOD,MP_MAX_FREE,MP_MIN_SIZE,MSIGN,MULTIPLY,MZERO,N,NIL,NOT,NROOTS,NROOTS_ABS,NROOTS_DELTA,NROOTS_EPSILON,NROOTS_RANDOM,NROOTS_YMAX,NROOTS_divpoly,NSYM,NUM,NUMBER,NUMERATOR,OPERATOR,OR,OUTER,PATTERN,PATTERNSINFO,PI,POLAR,POWER,PRIME,PRINT,PRINT2DASCII,PRINTFULL,PRINTLATEX,PRINTLIST,PRINTMODE_2DASCII,PRINTMODE_FULL,PRINTMODE_LATEX,PRINTMODE_LIST,PRINTMODE_PLAIN,PRINTOUTRESULT,PRINTPLAIN,PRINT_LEAVE_E_ALONE,PRINT_LEAVE_X_ALONE,PRODUCT,QUOTE,QUOTIENT,RANK,RATIONALIZE,REAL,ROOTS,SECRETX,SELFTEST,SETQ,SGN,SHAPE,SILENTPATTERN,SIMPLIFY,SIN,SINH,SPACE_BETWEEN_COLUMNS,SPACE_BETWEEN_ROWS,SQRT,STOP,STR,SUBST,SUM,SYM,SYMBOLSINFO,SYMBOL_A,SYMBOL_A_UNDERSCORE,SYMBOL_B,SYMBOL_B_UNDERSCORE,SYMBOL_C,SYMBOL_D,SYMBOL_I,SYMBOL_IDENTITY_MATRIX,SYMBOL_J,SYMBOL_N,SYMBOL_R,SYMBOL_S,SYMBOL_T,SYMBOL_X,SYMBOL_X_UNDERSCORE,SYMBOL_Y,SYMBOL_Z,TAN,TANH,TAYLOR,TENSOR,TEST,TESTEQ,TESTGE,TESTGT,TESTLE,TESTLT,TIMING_DEBUGS,TOS,TRACE,TRANSPOSE,T_DOUBLE,T_EQ,T_FUNCTION,T_GTEQ,T_INTEGER,T_LTEQ,T_NEQ,T_NEWLINE,T_QUOTASSIGN,T_STRING,T_SYMBOL,U,UNIT,USR_SYMBOLS,VERSION,YMAX,YYE,YYRECT,ZERO,__emit_char,__emit_str,__factor_add,__factorial,__is_negative,__is_radical_number,__lcm,__legendre,__legendre2,__legendre3,__normalize_radical_factors,__rationalize_tensor,_print,abs,absValFloat,absval,absval_tensor,ac,ad,add,addSymbolLeftOfAssignment,addSymbolRightOfAssignment,add_all,add_factor_to_accumulator,add_numbers,add_terms,addf,adj,alloc_tensor,allocatedId,any_denominators,approxAll,approxLogs,approxLogsOfRationals,approxOneRatioOnly,approxRadicals,approxRadicalsOfRationals,approxRationalsOfLogs,approxRationalsOfPowersOfE,approxRationalsOfPowersOfPI,approxRationalsOfRadicals,approxSineOfRationalMultiplesOfPI,approxSineOfRationals,approxTrigonometric,approx_just_an_integer,approx_logarithmsOfRationals,approx_nothingUseful,approx_radicalOfRatio,approx_ratioOfRadical,approx_rationalOfE,approx_rationalOfPi,approx_rationalsOfLogarithms,approx_sine_of_pi_times_rational,approx_sine_of_rational,approxratioRecursive,arccos,arccosh,arcsin,arcsinh,arctan,arctanh,arg,arglist,assignmentFound,avoidCalculatingPowersIntoArctans,bake,bake_poly,bake_poly_term,besselj,bessely,bigInt,bignum_factorial,bignum_float,bignum_power_number,bignum_scan_float,bignum_scan_integer,bignum_truncate,binding,binomial,buffer,build_tensor,caaddr,caadr,caar,cacheMissPenalty,cached_findDependenciesInScript,cached_runs,cadaddr,cadadr,cadar,caddaddr,caddadr,caddar,caddddr,cadddr,caddr,cadr,called_from_Algebra_block,car,cdaddr,cdadr,cdar,cddaddr,cddar,cdddaddr,cddddr,cdddr,cddr,cdr,ceiling,chainOfUserSymbolsNotFunctionsBeingEvaluated,charTabIndex,chartab,checkFloatHasWorkedOutCompletely,check_esc_flag,check_stack,check_tensor_dimensions,choose,choose_check_args,circexp,clearAlgebraEnvironment,clearRenamedVariablesToAvoidBindingToExternalScope,clear_symbols,clear_term,clearall,clockform,cmpGlyphs,cmp_args,cmp_expr,cmp_terms,cmp_terms_count,codeGen,coeff,cofactor,collectLatexStringFromReturnValue,collectUserSymbols,combine_factors,combine_gammas,combine_terms,compareState,compare_numbers,compare_rationals,compare_tensors,compatible,computeDependenciesFromAlgebra,computeResultsAndJavaScriptFromAlgebra,compute_fa,conjugate,cons,consCount,contract,convert_bignum_to_double,convert_rational_to_double,copy_tensor,cosine,cosine_of_angle,cosine_of_angle_sum,count,countOccurrencesOfSymbol,count_denominators,counter,countsize,d_scalar_scalar,d_scalar_scalar_1,d_scalar_tensor,d_tensor_scalar,d_tensor_tensor,dabs,darccos,darccosh,darcsin,darcsinh,darctan,darctanh,dbesselj0,dbesseljn,dbessely0,dbesselyn,dcos,dcosh,dd,decomp,decomp_product,decomp_sum,defineSomeHandyConstants,define_user_function,defn,defn_str,degree,denominator,derf,derfc,derivative,derivative_of_integral,det,determinant,detg,dfunction,dhermite,dirac,disableCaching,display,display_flag,displaychar,divide,divide_numbers,divisors,divisors_onstack,divpoly,dlog,do_clearPatterns,do_clearall,do_simplify_nested_radicals,dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication,dotprod_unicode,doubleToReasonableString,dpow,dpower,dproduct,draw_flag,draw_stop_return,dsgn,dsin,dsinh,dsum,dtan,dtanh,dupl,eigen,elelmIndex,elem,emit_denominator,emit_denominators,emit_expr,emit_factor,emit_factorial_function,emit_flat_tensor,emit_fraction,emit_function,emit_index_function,emit_multiply,emit_number,emit_numerators,emit_numerical_fraction,emit_power,emit_string,emit_subexpr,emit_symbol,emit_tensor,emit_tensor_inner,emit_term,emit_top_expr,emit_unsigned_expr,emit_x,enableCaching,environment_printmode,equal,equaln,equalq,erfc,errorMessage,esc_flag,evaluatingAsFloats,evaluatingPolar,exec,expand,expand_get_A,expand_get_AF,expand_get_B,expand_get_C,expand_get_CF,expand_tensor,expanding,expcos,exponential,expr_level,expsin,f1,f10,f2,f3,f4,f5,f9,f_equals_a,factor,factor_a,factor_again,factor_b,factor_number,factor_small_number,factor_term,factorial,factorpoly,factors,factpoly_expo,fill_buf,filter,filter_main,filter_sum,filter_tensor,findDependenciesInScript,findPossibleClockForm,findPossibleExponentialForm,findroot,fixed_top_level_eval,fixup_fraction,fixup_power,flag,floatToRatioRoutine,fmt_index,fmt_level,fmt_x,frame,free_stack,freeze,functionInvokationsScanningStack,gamma,gamma_of_sum,gammaf,gcd,gcd_expr,gcd_expr_expr,gcd_factor_term,gcd_main,gcd_numbers,gcd_term_factor,gcd_term_term,gen,getSimpleRoots,getStateHash,get_binding,get_factor_from_complex_root,get_factor_from_real_root,get_innerprod_factors,get_next_token,get_printname,get_size,get_token,getdisplaystr,glyph,gp,guess,hasImaginaryCoeff,hasNegativeRationalExponent,hermite,hilbert,imag,imaginaryunit,index_function,init,initNRoots,inited,inner,inner_f,input_str,integral,integral_of_form,integral_of_product,integral_of_sum,inv,inverse,invert_number,invg,isSimpleRoot,isSymbolLeftOfAssignment,isSymbolReclaimable,is_denominator,is_factor,is_small_integer,is_square_matrix,is_usr_symbol,isadd,isalnumorunderscore,isalpha,isalphaOrUnderscore,iscomplexnumber,iscomplexnumberdouble,iscons,isdenominator,isdigit,isdouble,iseveninteger,isfactor,isfactorial,isfloating,isfraction,isidentitymatrix,isimaginarynumber,isimaginarynumberdouble,isimaginaryunit,isinnerordot,isinteger,isintegerfactor,isinv,iskeyword,isminusone,isminusoneoversqrttwo,isminusoneovertwo,ismultiply,isnegative,isnegativenumber,isnegativeterm,isnonnegativeinteger,isnpi,isnum,isone,isoneover,isoneoversqrttwo,isoneovertwo,isplusone,isplustwo,ispoly,ispoly_expr,ispoly_factor,ispoly_term,isposint,ispositivenumber,ispower,isquarterturn,isrational,isspace,isstr,issymbol,issymbolic,istensor,istranspose,isunderscore,iszero,itab,laguerre,laguerre2,lastFoundSymbol,latexErrorSign,lcm,leading,legendre,length,lessp,level,list,logarithm,logbuf,lookupsTotal,lu_decomp,madd,makePositive,makeSignSameAs,mask,mcmp,mcmpint,mdiv,mdivrem,meta_mode,mgcd,mini_solve,mint,mmod,mmul,mod,monic,move,mp_clr_bit,mp_denominator,mp_numerator,mp_set_bit,mpow,mprime,mroot,mshiftright,msub,mtotal,multinomial_sum,multiply,multiply_all,multiply_all_noexpand,multiply_consecutive_constants,multiply_denominators,multiply_denominators_factor,multiply_denominators_term,multiply_noexpand,multiply_numbers,n_factor_number,negate,negate_expand,negate_noexpand,negate_number,new_string,newline_flag,nil_symbols,normaliseDots,normalisedCoeff,normalize_angle,nroots_a,nroots_b,nroots_c,nroots_df,nroots_dx,nroots_fa,nroots_fb,nroots_x,nroots_y,nterms,numerator,numericRootOfPolynomial,o,one,oneElement,one_as_double,out_buf,out_count,out_of_memory,outer,p0,p1,p2,p3,p4,p5,p6,p7,p8,p9,parse,parse_internal,parse_p1,parse_p2,parse_time_simplifications,partition,patternHasBeenFound,patternsinfo,peek,performing_roots,polar,polarRectAMinusOneBase,polycoeff,polyform,pop,pop_double,pop_frame,pop_integer,power,power_str,power_sum,power_tensor,predefinedSymbolsInGlobalScope_doNotTrackInDependencies,prime,primetab,print2dascii,printMode,print_ABS_latex,print_BINOMIAL_latex,print_COS_codegen,print_DEFINT_latex,print_DOT_codegen,print_DOT_latex,print_INV_codegen,print_INV_latex,print_SIN_codegen,print_SQRT_latex,print_TRANSPOSE_codegen,print_TRANSPOSE_latex,print_a_over_b,print_base,print_base_of_denom,print_char,print_denom,print_double,print_expo_of_denom,print_exponent,print_expr,print_factor,print_factorial_function,print_glyphs,print_index_function,print_list,print_multiply_sign,print_number,print_power,print_str,print_subexpr,print_tensor,print_tensor_inner,print_tensor_inner_latex,print_tensor_latex,print_term,printchar,printchar_nowrap,printline,program_buf,promote_tensor,push,pushTryNotToDuplicate,push_cars,push_double,push_factor,push_frame,push_identity_matrix,push_integer,push_rational,push_symbol,push_term_factors,push_terms,push_zero_matrix,qadd,qdiv,qmul,qpow,qpowf,quickfactor,quickpower,rational,rationalize,rationalize_coefficients,real,reciprocate,rect,recursionLevelNestedRadicalsRemoval,recursiveDependencies,ref,ref1,rememberPrint,remove_negative_exponents,resetCache,resetCacheHitMissCounts,reset_after_error,restore,restoreMetaBindings,rewrite_args,rewrite_args_tensor,roots,roots2,roots3,run,runUserDefinedSimplifications,save,saveMetaBindings,scalar_times_tensor,scan,scan_error,scan_expression,scan_factor,scan_function_call_with_function_name,scan_function_call_without_function_name,scan_index,scan_meta,scan_power,scan_relation,scan_stmt,scan_str,scan_string,scan_subexpr,scan_symbol,scan_tensor,scan_term,scanned,scanningParameters,setM,setSignTo,set_binding,set_component,setq_indexed,sfac_product,sfac_product_f,sgn,shape,show_power_debug,sign,sign_of_term,simfac,simfac_term,simpleComplexityMeasure,simplify,simplifyForCodeGeneration,simplify_1_in_products,simplify_main,simplify_nested_radicals,simplify_polar,simplify_polarRect,simplify_rectToClock,simplify_tensor,simplify_trig,simplifyfactorials,sine,sine_of_angle,sine_of_angle_sum,skipRootVariableToBeSolved,sort_stack,square,ssqrt,stack,stackAddsCount,std_symbol,step,step2,stop,strcmp,stringsEmittedByUserPrintouts,subf,subst,subtract,subtract_numbers,swap,symbol,symbolsDependencies,symbolsHavingReassignments,symbolsInExpressionsWithoutAssignments,symbolsLeftOfAssignment,symbolsRightOfAssignment,symbolsinfo,symnum,symtab,take_care_of_nested_radicals,tangent,taylor,tensor,tensor_plus_tensor,tensor_times_scalar,testApprox,test_flag,text_metric,theRandom,token,token_buf,token_str,top_level_eval,tos,totalAllCachesHits,totalAllCachesMisses,transform,transpose,transpose_unicode,trigmode,trivial_divide,try_kth_prime,turnErrorMessageToLatex,ucmp,unfreeze,unique,unique_f,update_token_buf,userSimplificationsInListForm,userSimplificationsInStringForm,usr_symbol,verbosing,version,will_be_displayed_as_fraction,ybinomial,ycosh,ydirac,yerf,yerfc,yfloor,yindex,ysinh,yyarg,yybesselj,yybessely,yyceiling,yycondense,yycontract,yycosh,yydegree,yydetg,yydivpoly,yyerf,yyerfc,yyexpand,yyfactorpoly,yyfloat,yyfloor,yyhermite,yyhermite2,yyinvg,yylcm,yylog,yymultiply,yyouter,yypower,yyrationalize,yysgn,yysimfac,yysinh,yytangent,zero,zzfloat,slice=[].slice;for(bigInt=require("big-integer"),version="1.0.2",SELFTEST=1,NSYM=1e3,DEBUG=!1,PRINTOUTRESULT=!1,PRINTMODE_LATEX="PRINTMODE_LATEX",PRINTMODE_2DASCII="PRINTMODE_2DASCII",PRINTMODE_FULL="PRINTMODE_FULL",PRINTMODE_PLAIN="PRINTMODE_PLAIN",PRINTMODE_LIST="PRINTMODE_LIST",environment_printmode=PRINTMODE_PLAIN,printMode=PRINTMODE_PLAIN,dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication=!0,recursionLevelNestedRadicalsRemoval=0,do_simplify_nested_radicals=!0,avoidCalculatingPowersIntoArctans=!0,rational=function(){function a(){}return a.prototype.a=null,a.prototype.b=null,a}(),U=function(){function a(){this.cons={},this.cons.car=null,this.cons.cdr=null,this.q=new rational}return a.prototype.cons=null,a.prototype.printname="",a.prototype.str="",a.prototype.tensor=null,a.prototype.q=null,a.prototype.d=0,a.prototype.k=0,a.prototype.tag=0,a.prototype.toString=function(){return print_expr(this)},a.prototype.toLatexString=function(){return collectLatexStringFromReturnValue(this)},a}(),errorMessage="",CONS=0,NUM=1,DOUBLE=2,STR=3,TENSOR=4,SYM=5,counter=0,ABS=counter++,ADD=counter++,ADJ=counter++,AND=counter++,APPROXRATIO=counter++,ARCCOS=counter++,ARCCOSH=counter++,ARCSIN=counter++,ARCSINH=counter++,ARCTAN=counter++,ARCTANH=counter++,ARG=counter++,ATOMIZE=counter++,BESSELJ=counter++,BESSELY=counter++,BINDING=counter++,BINOMIAL=counter++,CEILING=counter++,CHECK=counter++,CHOOSE=counter++,CIRCEXP=counter++,CLEAR=counter++,CLEARALL=counter++,CLEARPATTERNS=counter++,CLOCK=counter++,COEFF=counter++,COFACTOR=counter++,CONDENSE=counter++,CONJ=counter++,CONTRACT=counter++,COS=counter++,COSH=counter++,DECOMP=counter++,DEFINT=counter++,DEGREE=counter++,DENOMINATOR=counter++,DERIVATIVE=counter++,DET=counter++,DIM=counter++,DIRAC=counter++,DIVISORS=counter++,DO=counter++,DOT=counter++,DRAW=counter++,DSOLVE=counter++,EIGEN=counter++,EIGENVAL=counter++,EIGENVEC=counter++,ERF=counter++,ERFC=counter++,EVAL=counter++,EXP=counter++,EXPAND=counter++,EXPCOS=counter++,EXPSIN=counter++,FACTOR=counter++,FACTORIAL=counter++,FACTORPOLY=counter++,FILTER=counter++,FLOATF=counter++,FLOOR=counter++,FOR=counter++,FUNCTION=counter++,GAMMA=counter++,GCD=counter++,HERMITE=counter++,HILBERT=counter++,IMAG=counter++,INDEX=counter++,INNER=counter++,INTEGRAL=counter++,INV=counter++,INVG=counter++,ISINTEGER=counter++,ISPRIME=counter++,LAGUERRE=counter++,LCM=counter++,LEADING=counter++,LEGENDRE=counter++,LOG=counter++,LOOKUP=counter++,MOD=counter++,MULTIPLY=counter++,NOT=counter++,NROOTS=counter++,NUMBER=counter++,NUMERATOR=counter++,OPERATOR=counter++,OR=counter++,OUTER=counter++,PATTERN=counter++,PATTERNSINFO=counter++,POLAR=counter++,POWER=counter++,PRIME=counter++,PRINT_LEAVE_E_ALONE=counter++,PRINT_LEAVE_X_ALONE=counter++,PRINT=counter++,PRINT2DASCII=counter++,PRINTFULL=counter++,PRINTLATEX=counter++,PRINTLIST=counter++,PRINTPLAIN=counter++,PRODUCT=counter++,QUOTE=counter++,QUOTIENT=counter++,RANK=counter++,RATIONALIZE=counter++,REAL=counter++,YYRECT=counter++,ROOTS=counter++,SETQ=counter++,SGN=counter++,SILENTPATTERN=counter++,SIMPLIFY=counter++,SIN=counter++,SINH=counter++,SHAPE=counter++,SQRT=counter++,STOP=counter++,SUBST=counter++,SUM=counter++,SYMBOLSINFO=counter++,TAN=counter++,TANH=counter++,TAYLOR=counter++,TEST=counter++,TESTEQ=counter++,TESTGE=counter++,TESTGT=counter++,TESTLE=counter++,TESTLT=counter++,TRANSPOSE=counter++,UNIT=counter++,ZERO=counter++,NIL=counter++,LAST=counter++,LAST_PRINT=counter++,LAST_2DASCII_PRINT=counter++,LAST_FULL_PRINT=counter++,LAST_LATEX_PRINT=counter++,LAST_LIST_PRINT=counter++,LAST_PLAIN_PRINT=counter++,AUTOEXPAND=counter++,BAKE=counter++,ASSUME_REAL_VARIABLES=counter++,TRACE=counter++,YYE=counter++,DRAWX=counter++,METAA=counter++,METAB=counter++,METAX=counter++,SECRETX=counter++,VERSION=counter++,PI=counter++,SYMBOL_A=counter++,SYMBOL_B=counter++,SYMBOL_C=counter++,SYMBOL_D=counter++,SYMBOL_I=counter++,SYMBOL_J=counter++,SYMBOL_N=counter++,SYMBOL_R=counter++,SYMBOL_S=counter++,SYMBOL_T=counter++,SYMBOL_X=counter++,SYMBOL_Y=counter++,SYMBOL_Z=counter++,SYMBOL_IDENTITY_MATRIX=counter++,SYMBOL_A_UNDERSCORE=counter++,SYMBOL_B_UNDERSCORE=counter++,SYMBOL_X_UNDERSCORE=counter++,C1=counter++,C2=counter++,C3=counter++,C4=counter++,C5=counter++,C6=counter++,USR_SYMBOLS=counter++,E=YYE,TOS=1e5,BUF=1e4,MAX_PROGRAM_SIZE=100001,MAXPRIMETAB=1e4,MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES=5,MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE=10,ENABLE_CACHING=!0,cached_runs=null,cached_findDependenciesInScript=null,MAXDIM=24,symbolsDependencies={},symbolsHavingReassignments=[],symbolsInExpressionsWithoutAssignments=[],patternHasBeenFound=!1,predefinedSymbolsInGlobalScope_doNotTrackInDependencies=["rationalize","abs","e","i","pi","sin","cos","roots","integral","derivative","defint","sqrt","eig","cov","deig","dcov","float"],parse_time_simplifications=!0,chainOfUserSymbolsNotFunctionsBeingEvaluated=[],stringsEmittedByUserPrintouts="",called_from_Algebra_block=!1,tensor=function(){function a(){this.dim=function(){var a,b,c;for(c=[],a=0,b=MAXDIM;0<=b?a<=b:a>=b;0<=b?a++:a--)c.push(0);return c}(),this.elem=[]}return a.prototype.ndim=0,a.prototype.dim=null,a.prototype.nelem=0,a.prototype.elem=null,a}(),display=function(){function a(){}return a.prototype.h=0,a.prototype.w=0,a.prototype.n=0,a.prototype.a=[],a}(),text_metric=function(){function a(){}return a.prototype.ascent=0,a.prototype.descent=0,a.prototype.width=0,a}(),tos=0,expanding=0,evaluatingAsFloats=0,evaluatingPolar=0,fmt_x=0,fmt_index=0,fmt_level=0,verbosing=0,primetab=function(){var a,b,c,d;for(d=[2],b=3;d.length<MAXPRIMETAB;){for(c=0,a=Math.sqrt(b);c<d.length&&d[c]<=a;){if(b%d[c]==0){c=-1;break}c++}-1!==c&&d.push(b),b+=2}return d[MAXPRIMETAB]=0,d}(),esc_flag=0,draw_flag=0,mtotal=0,trigmode=0,logbuf="",program_buf="",symtab=[],binding=[],isSymbolReclaimable=[],arglist=[],stack=[],frame=0,p0=null,p1=null,p2=null,p3=null,p4=null,p5=null,p6=null,p7=null,p8=null,p9=null,zero=null,one=null,one_as_double=null,imaginaryunit=null,out_buf="",out_count=0,test_flag=0,codeGen=!1,draw_stop_return=null,userSimplificationsInListForm=[],userSimplificationsInStringForm=[],transpose_unicode=7488,dotprod_unicode=183,symbol=function(a){return symtab[a]},iscons=function(a){return a.k===CONS},isrational=function(a){return a.k===NUM},isdouble=function(a){return a.k===DOUBLE},isnum=function(a){return isrational(a)||isdouble(a)},isstr=function(a){return a.k===STR},istensor=function(a){if(null!=a)return a.k===TENSOR},issymbol=function(a){return a.k===SYM},iskeyword=function(a){return issymbol(a)&&symnum(a)<NIL},car=function(a){return iscons(a)?a.cons.car:symbol(NIL)},cdr=function(a){return iscons(a)?a.cons.cdr:symbol(NIL)},caar=function(a){return car(car(a))},cadr=function(a){return car(cdr(a))},cdar=function(a){return cdr(car(a))},cddr=function(a){return cdr(cdr(a))},caadr=function(a){return car(car(cdr(a)))},caddr=function(a){return car(cdr(cdr(a)))},cadar=function(a){return car(cdr(car(a)))},cdadr=function(a){return cdr(car(cdr(a)))},cddar=function(a){return cdr(cdr(car(a)))},cdddr=function(a){return cdr(cdr(cdr(a)))},caaddr=function(a){return car(car(cdr(cdr(a))))},cadadr=function(a){return car(cdr(car(cdr(a))))},caddar=function(a){return car(cdr(cdr(car(a))))},cdaddr=function(a){return cdr(car(cdr(cdr(a))))},cadddr=function(a){return car(cdr(cdr(cdr(a))))},cddddr=function(a){return cdr(cdr(cdr(cdr(a))))},caddddr=function(a){return car(cdr(cdr(cdr(cdr(a)))))},cadaddr=function(a){return car(cdr(car(cdr(cdr(a)))))},cddaddr=function(a){return cdr(cdr(car(cdr(cdr(a)))))},caddadr=function(a){return car(cdr(cdr(car(cdr(a)))))},cdddaddr=function(a){return cdr(cdr(cdr(car(cdr(cdr(a))))))},caddaddr=function(a){return car(cdr(cdr(car(cdr(cdr(a))))))},isadd=function(a){return car(a)===symbol(ADD)},ismultiply=function(a){return car(a)===symbol(MULTIPLY)},ispower=function(a){return car(a)===symbol(POWER)},isfactorial=function(a){return car(a)===symbol(FACTORIAL)},isinnerordot=function(a){return car(a)===symbol(INNER)||car(a)===symbol(DOT)},istranspose=function(a){return car(a)===symbol(TRANSPOSE)},isinv=function(a){return car(a)===symbol(INV)},isidentitymatrix=function(a){return a===symbol(SYMBOL_IDENTITY_MATRIX)},MSIGN=function(a){return a.isPositive()?1:a.isZero()?0:-1},MLENGTH=function(a){return a.toString().length},MZERO=function(a){return a.isZero()},MEQUAL=function(a,b){return a.equals(b)},reset_after_error=function(){return tos=0,esc_flag=0,draw_flag=0,frame=TOS,evaluatingAsFloats=0,evaluatingPolar=0},$="undefined"!=typeof exports&&null!==exports?exports:this,$.version=version,$.isadd=isadd,$.ismultiply=ismultiply,$.ispower=ispower,$.isfactorial=isfactorial,$.car=car,$.cdr=cdr,$.caar=caar,$.cadr=cadr,$.cdar=cdar,$.cddr=cddr,$.caadr=caadr,$.caddr=caddr,$.cadar=cadar,$.cdadr=cdadr,$.cddar=cddar,$.cdddr=cdddr,$.caaddr=caaddr,$.cadadr=cadadr,$.caddar=caddar,$.cdaddr=cdaddr,$.cadddr=cadddr,$.cddddr=cddddr,$.caddddr=caddddr,$.cadaddr=cadaddr,$.cddaddr=cddaddr,$.caddadr=caddadr,$.cdddaddr=cdddaddr,$.caddaddr=caddaddr,$.symbol=symbol,$.iscons=iscons,$.isrational=isrational,$.isdouble=isdouble,$.isnum=isnum,$.isstr=isstr,$.istensor=istensor,$.issymbol=issymbol,$.iskeyword=iskeyword,$.CONS=CONS,$.NUM=NUM,$.DOUBLE=DOUBLE,$.STR=STR,$.TENSOR=TENSOR,$.SYM=SYM,DEBUG_ABS=!1,Eval_abs=function(){return push(cadr(p1)),Eval(),abs()},absValFloat=function(){return Eval(),absval(),Eval(),zzfloat()},abs=function(){return save(),p1=pop(),push(p1),numerator(),absval(),push(p1),denominator(),absval(),divide(),restore()},absval=function(){var a;if(save(),p1=pop(),a=p1,DEBUG_ABS&&console.log("ABS of "+p1),iszero(p1))return DEBUG_ABS&&console.log(" abs: "+p1+" just zero"),push(zero),DEBUG_ABS&&console.log(" --\x3e ABS of "+a+" : "+stack[tos-1]),void restore();if(isnegativenumber(p1))return DEBUG_ABS&&console.log(" abs: "+p1+" just a negative"),push(p1),negate(),void restore();if(ispositivenumber(p1))return DEBUG_ABS&&console.log(" abs: "+p1+" just a positive"),push(p1),DEBUG_ABS&&console.log(" --\x3e ABS of "+a+" : "+stack[tos-1]),void restore();if(p1===symbol(PI))return DEBUG_ABS&&console.log(" abs: "+p1+" of PI"),push(p1),DEBUG_ABS&&console.log(" --\x3e ABS of "+a+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(ADD)&&(findPossibleClockForm(p1)||findPossibleExponentialForm(p1)||Find(p1,imaginaryunit)))return DEBUG_ABS&&console.log(" abs: "+p1+" is a sum"),DEBUG_ABS&&console.log("abs of a sum"),push(p1),rect(),p1=pop(),push(p1),real(),push_integer(2),power(),push(p1),imag(),push_integer(2),power(),add(),push_rational(1,2),power(),simplify_trig(),DEBUG_ABS&&console.log(" --\x3e ABS of "+a+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(POWER)&&equaln(cadr(p1),-1))return DEBUG_ABS&&console.log(" abs: "+p1+" is -1 to any power"),evaluatingAsFloats?(DEBUG_ABS&&console.log(" abs: numeric, so result is 1.0"),push_double(1)):(DEBUG_ABS&&console.log(" abs: symbolic, so result is 1"),push_integer(1)),DEBUG_ABS&&console.log(" --\x3e ABS of "+a+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(POWER)&&ispositivenumber(caddr(p1)))return DEBUG_ABS&&console.log(" abs: "+p1+" is something to the power of a positive number"),push(cadr(p1)),abs(),push(caddr(p1)),power(),DEBUG_ABS&&console.log(" --\x3e ABS of "+a+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(POWER)&&cadr(p1)===symbol(E))return DEBUG_ABS&&console.log(" abs: "+p1+" is an exponential"),push(caddr(p1)),real(),exponential(),DEBUG_ABS&&console.log(" --\x3e ABS of "+a+" : "+stack[tos-1]),void restore();if(car(p1)===symbol(MULTIPLY)){for(DEBUG_ABS&&console.log(" abs: "+p1+" is a product"),push_integer(1),p1=cdr(p1);iscons(p1);)push(car(p1)),abs(),multiply(),p1=cdr(p1);return DEBUG_ABS&&console.log(" --\x3e ABS of "+a+" : "+stack[tos-1]),void restore()}return car(p1)===symbol(ABS)?(DEBUG_ABS&&console.log(" abs: "+p1+" is abs of a abs"),push_symbol(ABS),push(cadr(p1)),list(2),DEBUG_ABS&&console.log(" --\x3e ABS of "+a+" : "+stack[tos-1]),void restore()):istensor(p1)?(absval_tensor(),void restore()):((isnegativeterm(p1)||car(p1)===symbol(ADD)&&isnegativeterm(cadr(p1)))&&(push(p1),negate(),p1=pop()),DEBUG_ABS&&console.log(" abs: "+p1+" is nothing decomposable"),push_symbol(ABS),push(p1),list(2),DEBUG_ABS&&console.log(" --\x3e ABS of "+a+" : "+stack[tos-1]),restore())},absval_tensor=function(){return 1!==p1.tensor.ndim&&stop("abs(tensor) with tensor rank > 1"),push(p1),push(p1),conjugate(),inner(),push_rational(1,2),power(),simplify(),Eval()},flag=0,Eval_add=function(){var a;for(a=tos,p1=cdr(p1);iscons(p1);)push(car(p1)),Eval(),p2=pop(),push_terms(p2),p1=cdr(p1);return add_terms(tos-a)},stackAddsCount=0,add_terms=function(a){var b,c,d,e,f,g,h,i,k;if(stackAddsCount++,e=0,d=tos-a,d,DEBUG&&console.log("stack before adding terms #"+stackAddsCount),DEBUG)for(e=f=0,g=tos;0<=g?f<g:f>g;e=0<=g?++f:--f)console.log(print_list(stack[e]));for(e=b=0;b<10&&!(a<2)&&(flag=0,k=stack.slice(d,d+a),k.sort(cmp_terms),stack=stack.slice(0,d).concat(k).concat(stack.slice(d+a)),0!==flag);e=++b)a=combine_terms(d,a);switch(tos=d+a,a){case 0:evaluatingAsFloats?push_double(0):push(zero);break;case 1:break;default:list(a),p1=pop(),push_symbol(ADD),push(p1),cons()}if(DEBUG&&console.log("stack after adding terms #"+stackAddsCount),DEBUG){for(i=[],e=c=0,h=tos;0<=h?c<h:c>h;e=0<=h?++c:--c)i.push(console.log(print_list(stack[e])));return i}},cmp_terms_count=0,cmp_terms=function(a,b){var c,d,e,f;if(cmp_terms_count++,c=0,isnum(a)&&isnum(b))return flag=1,0;if(istensor(a)&&istensor(b)){if(a.tensor.ndim<b.tensor.ndim)return-1;if(a.tensor.ndim>b.tensor.ndim)return 1;for(c=d=0,e=a.tensor.ndim;0<=e?d<e:d>e;c=0<=e?++d:--d){if(a.tensor.dim[c]<b.tensor.dim[c])return-1;if(a.tensor.dim[c]>b.tensor.dim[c])return 1}return flag=1,0}return car(a)===symbol(MULTIPLY)&&(a=cdr(a),isnum(car(a))&&(a=cdr(a),cdr(a)===symbol(NIL)&&(a=car(a)))),car(b)===symbol(MULTIPLY)&&(b=cdr(b),isnum(car(b))&&(b=cdr(b),cdr(b)===symbol(NIL)&&(b=car(b)))),f=cmp_expr(a,b),0===f&&(flag=1),f},combine_terms=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;for(g=0;g<b-1;)if(check_esc_flag(),p3=stack[a+g],p4=stack[a+g+1],istensor(p3)&&istensor(p4)){if(push(p3),push(p4),tensor_plus_tensor(),(p1=pop())!==symbol(NIL)){for(stack[a+g]=p1,h=i=j=g+1,k=b-1;j<=k?i<k:i>k;h=j<=k?++i:--i)stack[a+h]=stack[a+h+1];b--,g--}g++}else if(istensor(p3)||istensor(p4))g++;else if(isnum(p3)&&isnum(p4)){if(push(p3),push(p4),add_numbers(),p1=pop(),iszero(p1)){for(h=c=l=g,m=b-2;l<=m?c<m:c>m;h=l<=m?++c:--c)stack[a+h]=stack[a+h+2];b-=2}else{for(stack[a+g]=p1,h=d=n=g+1,o=b-1;n<=o?d<o:d>o;h=n<=o?++d:--d)stack[a+h]=stack[a+h+1];b--}g--,g++}else if(isnum(p3)||isnum(p4))g++;else if(evaluatingAsFloats?(p1=one_as_double,p2=one_as_double):(p1=one,p2=one),t=0,car(p3)===symbol(MULTIPLY)&&(p3=cdr(p3),t=1,isnum(car(p3))&&(p1=car(p3),p3=cdr(p3),cdr(p3)===symbol(NIL)&&(p3=car(p3),t=0))),car(p4)===symbol(MULTIPLY)&&(p4=cdr(p4),isnum(car(p4))&&(p2=car(p4),p4=cdr(p4),cdr(p4)===symbol(NIL)&&(p4=car(p4)))),equal(p3,p4))if(push(p1),push(p2),add_numbers(),p1=pop(),iszero(p1)){for(h=e=p=g,q=b-2;p<=q?e<q:e>q;h=p<=q?++e:--e)stack[a+h]=stack[a+h+2];b-=2,g--,g++}else{for(push(p1),t?(push(symbol(MULTIPLY)),push(p3),cons()):push(p3),multiply(),stack[a+g]=pop(),h=f=r=g+1,s=b-1;r<=s?f<s:f>s;h=r<=s?++f:--f)stack[a+h]=stack[a+h+1];b--,g--,g++}else g++;return b},push_terms=function(a){var b;if(car(a)===symbol(ADD)){for(a=cdr(a),b=[];iscons(a);)push(car(a)),b.push(a=cdr(a));return b}if(!iszero(a))return push(a)},add=function(){var a;return save(),p2=pop(),p1=pop(),a=tos,push_terms(p1),push_terms(p2),add_terms(tos-a),restore()},add_all=function(a){var b,c,d,e,f;for(c=0,save(),f=tos-a,b=tos,c=d=0,e=a;0<=e?d<e:d>e;c=0<=e?++d:--d)push_terms(stack[f+c]);return add_terms(tos-b),p1=pop(),tos-=a,push(p1),restore()},subtract=function(){return negate(),add()},Eval_adj=function(){return push(cadr(p1)),Eval(),adj()},adj=function(){var a,c,d,e,f,g,h;for(c=0,d=0,e=0,save(),p1=pop(),istensor(p1)&&2===p1.tensor.ndim&&p1.tensor.dim[0]===p1.tensor.dim[1]?1:stop("adj: square matrix expected"),e=p1.tensor.dim[0],p2=alloc_tensor(e*e),p2.tensor.ndim=2,p2.tensor.dim[0]=e,p2.tensor.dim[1]=e,c=f=0,g=e;0<=g?f<g:f>g;c=0<=g?++f:--f)for(d=a=0,h=e;0<=h?a<h:a>h;d=0<=h?++a:--a)cofactor(p1,e,c,d),p2.tensor.elem[e*d+c]=pop();return push(p2),restore()},Eval_approxratio=function(){var a;return a=cadr(p1),push(a),approxratioRecursive()},approxratioRecursive=function(){var a,b,c,d,e;if(b=0,save(),p1=pop(),istensor(p1)){for(p4=alloc_tensor(p1.tensor.nelem),p4.tensor.ndim=p1.tensor.ndim,b=c=0,d=p1.tensor.ndim;0<=d?c<d:c>d;b=0<=d?++c:--c)p4.tensor.dim[b]=p1.tensor.dim[b];for(b=a=0,e=p1.tensor.nelem;0<=e?a<e:a>e;b=0<=e?++a:--a)push(p1.tensor.elem[b]),approxratioRecursive(),p4.tensor.elem[b]=pop(),check_tensor_dimensions(p4);push(p4)}else p1.k===DOUBLE?(push(p1),approxOneRatioOnly()):iscons(p1)?(push(car(p1)),approxratioRecursive(),push(cdr(p1)),approxratioRecursive(),cons()):push(p1);return restore()},approxOneRatioOnly=function(){var a,b,c,d,e,f;return zzfloat(),d=pop(),d.k===DOUBLE?(e=d.d,c=e.toString().split("."),void(2===c.length?(a=c[1].length,b=1/Math.pow(10,a),f=floatToRatioRoutine(e,b),push_rational(f[0],f[1])):push_integer(e))):(push_symbol(APPROXRATIO),push(theArgument),list(2))},floatToRatioRoutine=function(a,b){var c,d,e,f,g,h,i;if(e=void 0,d=void 0,c=void 0,h=void 0,f=void 0,g=void 0,i=[0,0],isNaN(a))return i;if(a===1/0)return i[0]=1,i[1]=0,i;if(a===-1/0)return i[0]=-1,i[1]=0,i;if(c=a<0?-1:1,a=Math.abs(a),Math.abs(a-Math.floor(a))<b)return e=a*c,d=1,i[0]=e,i[1]=d,i;if(a<1e-19)return e=c,d=1e19,i[0]=e,i[1]=d,i;if(a>1e19)return e=1e19*c,d=1,i[0]=e,i[1]=d,i;for(h=a,f=0,d=1;;)if(h=1/(h-Math.floor(h)),g=d,d=d*Math.floor(h)+f,f=g,e=Math.floor(a*d+.5),!(Math.abs(a-e/d)>b&&h!==Math.floor(h)))break;return e*=c,i[0]=e,i[1]=d,i},approx_just_an_integer=0,approx_sine_of_rational=1,approx_sine_of_pi_times_rational=2,approx_rationalOfPi=3,approx_radicalOfRatio=4,approx_nothingUseful=5,approx_ratioOfRadical=6,approx_rationalOfE=7,approx_logarithmsOfRationals=8,approx_rationalsOfLogarithms=9,approxRationalsOfRadicals=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;if(r=a.toString().split("."),2!==r.length)return[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2];for(l=r[1].length,n=1/Math.pow(10,l),console.log("precision: "+n),c=null,k=Number.MAX_VALUE,p=[2,3,5,6,7,8,10],m=0,i=p.length;m<i;m++)for(g=p[m],h=b=1;b<=10;h=++b)f=Math.sqrt(g)/h,Math.abs(f)>1e-10?(o=a/f,j=Math.round(o),e=Math.abs(1-o/j)):(o=1,j=1,e=Math.abs(a-f)),e<2*n&&(d=simpleComplexityMeasure(j,g,h))<k&&(k=d,q=j+" * sqrt( "+g+" ) / "+h,c=[q,approx_ratioOfRadical,j,g,h]);return c},approxRadicalsOfRationals=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;if(t=a.toString().split("."),2!==t.length)return[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2];for(m=t[1].length,o=1/Math.pow(10,m),console.log("precision: "+o),c=null,l=Number.MAX_VALUE,q=[1,2,3,5,6,7,8,10],n=0,i=q.length;n<i;n++)for(g=q[n],r=[1,2,3,5,6,7,8,10],b=0,j=r.length;b<j;b++)h=r[b],f=Math.sqrt(g/h),Math.abs(f)>1e-10?(p=a/f,k=Math.round(p),e=Math.abs(1-p/k)):(p=1,k=1,e=Math.abs(a-f)),e<2*o&&(d=simpleComplexityMeasure(k,g,h))<l&&(l=d,s=k+" * (sqrt( "+g+" / "+h+" )",c=[s,approx_radicalOfRatio,k,g,h]);return c},approxRadicals=function(a){var b,c,d,e,f;return f=a.toString().split("."),2!==f.length?[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2]:(d=f[1].length,e=1/Math.pow(10,d),console.log("precision: "+e),null!=(c=approxRationalsOfRadicals(a))?c:(b=approxRadicalsOfRationals(a),null!=b?b:null))},approxLogs=function(a){var b,c,d,e,f;return f=a.toString().split("."),2!==f.length?[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2]:(d=f[1].length,e=1/Math.pow(10,d),console.log("precision: "+e),null!=(c=approxRationalsOfLogs(a))?c:(b=approxLogsOfRationals(a),null!=b?b:null))},approxRationalsOfLogs=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p;if(p=a.toString().split("."),2!==p.length)return[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2];for(k=p[1].length,m=1/Math.pow(10,k),console.log("precision: "+m),c=null,j=Number.MAX_VALUE,g=l=2;l<=5;g=++l)for(h=b=1;b<=5;h=++b)f=Math.log(g)/h,Math.abs(f)>1e-10?(n=a/f,i=Math.round(n),e=Math.abs(1-n/i)):(n=1,i=1,e=Math.abs(a-f)),1!==i&&Math.abs(Math.floor(i/h))===Math.abs(i/h)||e<2.2*m&&(d=simpleComplexityMeasure(i,g,h))<j&&(j=d,o=i+" * log( "+g+" ) / "+h,c=[o,approx_rationalsOfLogarithms,i,g,h]);return c},approxLogsOfRationals=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p;if(p=a.toString().split("."),2!==p.length)return[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2];for(k=p[1].length,m=1/Math.pow(10,k),console.log("precision: "+m),c=null,j=Number.MAX_VALUE,g=l=1;l<=5;g=++l)for(h=b=1;b<=5;h=++b)f=Math.log(g/h),Math.abs(f)>1e-10?(n=a/f,i=Math.round(n),e=Math.abs(1-n/i)):(n=1,i=1,e=Math.abs(a-f)),e<1.96*m&&(d=simpleComplexityMeasure(i,g,h))<j&&(j=d,o=i+" * log( "+g+" / "+h+" )",c=[o,approx_logarithmsOfRationals,i,g,h]);return c},approxRationalsOfPowersOfE=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p;if(p=a.toString().split("."),2!==p.length)return[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2];for(k=p[1].length,m=1/Math.pow(10,k),console.log("precision: "+m),c=null,j=Number.MAX_VALUE,g=l=1;l<=2;g=++l)for(h=b=1;b<=12;h=++b)f=Math.pow(Math.E,g)/h,Math.abs(f)>1e-10?(n=a/f,i=Math.round(n),e=Math.abs(1-n/i)):(n=1,i=1,e=Math.abs(a-f)),e<2*m&&(d=simpleComplexityMeasure(i,g,h))<j&&(j=d,o=i+" * (e ^ "+g+" ) / "+h,c=[o,approx_rationalOfE,i,g,h]);return c},approxRationalsOfPowersOfPI=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p;if(p=a.toString().split("."),2!==p.length)return[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2];for(k=p[1].length,m=1/Math.pow(10,k),console.log("precision: "+m),c=null,j=Number.MAX_VALUE,g=l=1;l<=5;g=++l)for(h=b=1;b<=12;h=++b)f=Math.pow(Math.PI,g)/h,Math.abs(f)>1e-10?(n=a/f,i=Math.round(n),e=Math.abs(1-n/i)):(n=1,i=1,e=Math.abs(a-f)),e<2*m&&(d=simpleComplexityMeasure(i,g,h))<j&&(j=d,o=i+" * (pi ^ "+g+" ) / "+h+" )",c=[o,approx_rationalOfPi,i,g,h]);return c},approxTrigonometric=function(a){var b,c,d,e,f;return f=a.toString().split("."),2!==f.length?[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2]:(d=f[1].length,e=1/Math.pow(10,d),console.log("precision: "+e),null!=(c=approxSineOfRationals(a))?c:(b=approxSineOfRationalMultiplesOfPI(a),null!=b?b:null))},approxSineOfRationals=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;if(q=a.toString().split("."),2!==q.length)return[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2];for(l=q[1].length,n=1/Math.pow(10,l),console.log("precision: "+n),c=null,k=Number.MAX_VALUE,h=m=1;m<=4;h=++m)for(i=b=1;b<=4;i=++b)f=h/i,g=Math.sin(f),Math.abs(g)>1e-10?(o=a/g,j=Math.round(o),e=Math.abs(1-o/j)):(o=1,j=1,e=Math.abs(a-g)),e<2*n&&(d=simpleComplexityMeasure(j,h,i))<k&&(k=d,p=j+" * sin( "+h+"/"+i+" )",c=[p,approx_sine_of_rational,j,h,i]);return c},approxSineOfRationalMultiplesOfPI=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;if(q=a.toString().split("."),2!==q.length)return[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2];for(l=q[1].length,n=1/Math.pow(10,l),console.log("precision: "+n),c=null,k=Number.MAX_VALUE,h=m=1;m<=13;h=++m)for(i=b=1;b<=13;i=++b)f=h/i,g=Math.sin(Math.PI*f),Math.abs(g)>1e-10?(o=a/g,j=Math.round(o),e=Math.abs(1-o/j)):(o=1,j=1,e=Math.abs(a-g)),e<23*n&&(d=simpleComplexityMeasure(j,h,i))<k&&(k=d,p=j+" * sin( "+h+"/"+i+" * pi )",c=[p,approx_sine_of_pi_times_rational,j,h,i]);return c},approxAll=function(a){var b,c,d,e,f,g,h,i,j,k,l,m;return m=a.toString().split("."),2!==m.length?[""+Math.floor(a),approx_just_an_integer,Math.floor(a),1,2]:(k=m[1].length,l=1/Math.pow(10,k),console.log("precision: "+l),j=Number.MAX_VALUE,i=0,h=null,b=!0,d=approxRadicals(a),null!=d&&(i=simpleComplexityMeasure(d),i<j?(b&&console.log("better explanation by approxRadicals: "+d+" complexity: "+i),j=i,h=d):b&&console.log("subpar explanation by approxRadicals: "+d+" complexity: "+i)),c=approxLogs(a),null!=c&&(i=simpleComplexityMeasure(c),i<j?(b&&console.log("better explanation by approxLogs: "+c+" complexity: "+i),j=i,h=c):b&&console.log("subpar explanation by approxLogs: "+c+" complexity: "+i)),e=approxRationalsOfPowersOfE(a),null!=e&&(i=simpleComplexityMeasure(e),i<j?(b&&console.log("better explanation by approxRationalsOfPowersOfE: "+e+" complexity: "+i),j=i,h=e):b&&console.log("subpar explanation by approxRationalsOfPowersOfE: "+e+" complexity: "+i)),f=approxRationalsOfPowersOfPI(a),null!=f&&(i=simpleComplexityMeasure(f),i<j?(b&&console.log("better explanation by approxRationalsOfPowersOfPI: "+f+" complexity: "+i),j=i,h=f):b&&console.log("subpar explanation by approxRationalsOfPowersOfPI: "+f+" complexity: "+i)),g=approxTrigonometric(a),null!=g&&(i=simpleComplexityMeasure(g),i<j?(b&&console.log("better explanation by approxTrigonometric: "+g+" complexity: "+i),j=i,h=g):b&&console.log("subpar explanation by approxTrigonometric: "+g+" complexity: "+i)),h)},simpleComplexityMeasure=function(a,b,c){var d;if(d=null,a instanceof Array){switch(a[1]){case approx_sine_of_pi_times_rational:d=4;break;case approx_rationalOfPi:d=Math.pow(4,Math.abs(a[3]))*Math.abs(a[2]);break;case approx_rationalOfE:d=Math.pow(3,Math.abs(a[3]))*Math.abs(a[2]);break;default:d=0}d+=Math.abs(a[2])*(Math.abs(a[3])+Math.abs(a[4]))}else d+=Math.abs(a)*(Math.abs(b)+Math.abs(c));return 1===a[2]?d-=1:d+=1,1===a[3]?d-=1:d+=1,1===a[4]?d-=1:d+=1,d<0&&(d=0),d},testApprox=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba,ca,da,ea;for(V=[2,3,5,6,7,8,10],T=0,L=V.length;T<L;T++)for(J=V[T],W=[2,3,5,6,7,8,10],a=0,M=W.length;a<M;a++)K=W[a],J!==K&&(console.log("testapproxRadicals testing: 1 * sqrt( "+J+" ) / "+K),I=J/K,ea=Math.sqrt(J)/K,ba=approxRadicals(ea),da=ba[2]*Math.sqrt(ba[3])/ba[4],Math.abs(ea-da)>1e-15&&console.log("fail testapproxRadicals: 1 * sqrt( "+J+" ) / "+K+" . obtained: "+ba));for(X=[2,3,5,6,7,8,10],b=0,N=X.length;b<N;b++)for(J=X[b],Y=[2,3,5,6,7,8,10],c=0,O=Y.length;c<O;c++)K=Y[c],J!==K&&(console.log("testapproxRadicals testing with 4 digits: 1 * sqrt( "+J+" ) / "+K),I=J/K,U=Math.sqrt(J)/K,ea=U.toFixed(4),ba=approxRadicals(ea),da=ba[2]*Math.sqrt(ba[3])/ba[4],Math.abs(U-da)>1e-15&&console.log("fail testapproxRadicals with 4 digits: 1 * sqrt( "+J+" ) / "+K+" . obtained: "+ba));for(Z=[2,3,5,6,7,8,10],d=0,P=Z.length;d<P;d++)for(J=Z[d],$=[2,3,5,6,7,8,10],e=0,Q=$.length;e<Q;e++)K=$[e],J!==K&&(console.log("testapproxRadicals testing: 1 * sqrt( "+J+" / "+K+" )"),I=J/K,ea=Math.sqrt(J/K),null!=(ba=approxRadicals(ea))&&(da=ba[2]*Math.sqrt(ba[3]/ba[4]),ba[1]===approx_radicalOfRatio&&Math.abs(ea-da)>1e-15&&console.log("fail testapproxRadicals: 1 * sqrt( "+J+" / "+K+" ) . obtained: "+ba)));for(_=[1,2,3,5,6,7,8,10],f=0,R=_.length;f<R;f++)for(J=_[f],aa=[1,2,3,5,6,7,8,10],g=0,S=aa.length;g<S;g++)K=aa[g],1===J&&1===K||(console.log("testapproxRadicals testing with 4 digits:: 1 * sqrt( "+J+" / "+K+" )"),I=J/K,U=Math.sqrt(J/K),ea=U.toFixed(4),ba=approxRadicals(ea),da=ba[2]*Math.sqrt(ba[3]/ba[4]),ba[1]===approx_radicalOfRatio&&Math.abs(U-da)>1e-15&&console.log("fail testapproxRadicals with 4 digits:: 1 * sqrt( "+J+" / "+K+" ) . obtained: "+ba));for(J=h=1;h<=5;J=++h)for(K=i=1;i<=5;K=++i)console.log("testApproxAll testing: 1 * log("+J+" ) / "+K),I=J/K,ea=Math.log(J)/K,ba=approxAll(ea),da=ba[2]*Math.log(ba[3])/ba[4],Math.abs(ea-da)>1e-15&&console.log("fail testApproxAll: 1 * log("+J+" ) / "+K+" . obtained: "+ba);for(J=j=1;j<=5;J=++j)for(K=k=1;k<=5;K=++k)console.log("testApproxAll testing with 4 digits: 1 * log("+J+" ) / "+K),I=J/K,U=Math.log(J)/K,ea=U.toFixed(4),ba=approxAll(ea),da=ba[2]*Math.log(ba[3])/ba[4],Math.abs(U-da)>1e-15&&console.log("fail testApproxAll with 4 digits: 1 * log("+J+" ) / "+K+" . obtained: "+ba);for(J=l=1;l<=5;J=++l)for(K=m=1;m<=5;K=++m)console.log("testApproxAll testing: 1 * log("+J+" / "+K+" )"),I=J/K,ea=Math.log(J/K),ba=approxAll(ea),da=ba[2]*Math.log(ba[3]/ba[4]),Math.abs(ea-da)>1e-15&&console.log("fail testApproxAll: 1 * log("+J+" / "+K+" ) . obtained: "+ba);for(J=n=1;n<=5;J=++n)for(K=o=1;o<=5;K=++o)console.log("testApproxAll testing with 4 digits: 1 * log("+J+" / "+K+" )"),I=J/K,U=Math.log(J/K),ea=U.toFixed(4),ba=approxAll(ea),da=ba[2]*Math.log(ba[3]/ba[4]),Math.abs(U-da)>1e-15&&console.log("fail testApproxAll with 4 digits: 1 * log("+J+" / "+K+" ) . obtained: "+ba);for(J=p=1;p<=2;J=++p)for(K=q=1;q<=12;K=++q)console.log("testApproxAll testing: 1 * (e ^ "+J+" ) / "+K),I=J/K,ea=Math.pow(Math.E,J)/K,ba=approxAll(ea),da=ba[2]*Math.pow(Math.E,ba[3])/ba[4],Math.abs(ea-da)>1e-15&&console.log("fail testApproxAll: 1 * (e ^ "+J+" ) / "+K+" . obtained: "+ba);for(J=r=1;r<=2;J=++r)for(K=s=1;s<=12;K=++s)console.log("approxRationalsOfPowersOfE testing with 4 digits: 1 * (e ^ "+J+" ) / "+K),I=J/K,U=Math.pow(Math.E,J)/K,ea=U.toFixed(4),ba=approxRationalsOfPowersOfE(ea),da=ba[2]*Math.pow(Math.E,ba[3])/ba[4],Math.abs(U-da)>1e-15&&console.log("fail approxRationalsOfPowersOfE with 4 digits: 1 * (e ^ "+J+" ) / "+K+" . obtained: "+ba);for(J=t=1;t<=2;J=++t)for(K=u=1;u<=12;K=++u)console.log("testApproxAll testing: 1 * pi ^ "+J+" / "+K),I=J/K,ea=Math.pow(Math.PI,J)/K,ba=approxAll(ea),da=ba[2]*Math.pow(Math.PI,ba[3])/ba[4],Math.abs(ea-da)>1e-15&&console.log("fail testApproxAll: 1 * pi ^ "+J+" / "+K+" ) . obtained: "+ba);for(J=v=1;v<=2;J=++v)for(K=w=1;w<=12;K=++w)console.log("approxRationalsOfPowersOfPI testing with 4 digits: 1 * pi ^ "+J+" / "+K),I=J/K,U=Math.pow(Math.PI,J)/K,ea=U.toFixed(4),ba=approxRationalsOfPowersOfPI(ea),da=ba[2]*Math.pow(Math.PI,ba[3])/ba[4],Math.abs(U-da)>1e-15&&console.log("fail approxRationalsOfPowersOfPI with 4 digits: 1 * pi ^ "+J+" / "+K+" ) . obtained: "+ba);for(J=x=1;x<=4;J=++x)for(K=y=1;y<=4;K=++y)console.log("testApproxAll testing: 1 * sin( "+J+"/"+K+" )"),I=J/K,ea=Math.sin(I),ba=approxAll(ea),ca=ba[3]/ba[4],da=ba[2]*Math.sin(ca),Math.abs(ea-da)>1e-15&&console.log("fail testApproxAll: 1 * sin( "+J+"/"+K+" ) . obtained: "+ba);for(J=z=1;z<=4;J=++z)for(K=A=1;A<=4;K=++A)console.log("testApproxAll testing with 5 digits: 1 * sin( "+J+"/"+K+" )"),I=J/K,U=Math.sin(I),ea=U.toFixed(5),ba=approxAll(ea),null==ba&&console.log("fail testApproxAll with 5 digits: 1 * sin( "+J+"/"+K+" ) . obtained:  undefined "),ca=ba[3]/ba[4],da=ba[2]*Math.sin(ca),(H=Math.abs(U-da))>1e-14&&console.log("fail testApproxAll with 5 digits: 1 * sin( "+J+"/"+K+" ) . obtained: "+ba+" error: "+H);for(J=B=1;B<=4;J=++B)for(K=C=1;C<=4;K=++C)console.log("testApproxAll testing with 4 digits: 1 * sin( "+J+"/"+K+" )"),I=J/K,U=Math.sin(I),ea=U.toFixed(4),ba=approxAll(ea),null==ba&&console.log("fail testApproxAll with 4 digits: 1 * sin( "+J+"/"+K+" ) . obtained:  undefined "),ca=ba[3]/ba[4],da=ba[2]*Math.sin(ca),(H=Math.abs(U-da))>1e-14&&console.log("fail testApproxAll with 4 digits: 1 * sin( "+J+"/"+K+" ) . obtained: "+ba+" error: "+H);for(ea=0,"0"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 0"),ea=0,"0"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 0.0"),ea=0,"0"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 0.00"),ea=0,"0"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 0.000"),ea=0,"0"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 0.0000"),ea=1,"1"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 1"),ea=1,"1"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 1.0"),ea=1,"1"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 1.00"),ea=1,"1"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 1.000"),ea=1,"1"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 1.0000"),ea=1,"1"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 1.00000"),ea=Math.sqrt(2),"1 * sqrt( 2 ) / 1"!==approxAll(ea)[0]&&console.log("fail testApproxAll: Math.sqrt(2)"),ea=1.41,"1 * sqrt( 2 ) / 1"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 1.41"),ea=1.4,"1 * sqrt( 2 ) / 1"!==approxRadicals(ea)[0]&&console.log("fail approxRadicals: 1.4"),ea=.6,"1 * log( 2 ) / 1"!==approxLogs(ea)[0]&&console.log("fail approxLogs: 0.6"),ea=.69,"1 * log( 2 ) / 1"!==approxLogs(ea)[0]&&console.log("fail approxLogs: 0.69"),ea=.7,"1 * log( 2 ) / 1"!==approxLogs(ea)[0]&&console.log("fail approxLogs: 0.7"),ea=1.09,"1 * log( 3 ) / 1"!==approxLogs(ea)[0]&&console.log("fail approxLogs: 1.09"),ea=1.09,"1 * log( 3 ) / 1"!==approxAll(ea)[0]&&console.log("fail approxAll: 1.09"),ea=1.098,"1 * log( 3 ) / 1"!==approxAll(ea)[0]&&console.log("fail approxAll: 1.098"),ea=1.1,"1 * log( 3 ) / 1"!==approxAll(ea)[0]&&console.log("fail approxAll: 1.1"),ea=1.11,"1 * log( 3 ) / 1"!==approxAll(ea)[0]&&console.log("fail approxAll: 1.11"),ea=Math.sqrt(3),"1 * sqrt( 3 ) / 1"!==approxAll(ea)[0]&&console.log("fail testApproxAll: Math.sqrt(3)"),ea=1,"1"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 1.0000"),ea=3.141592,"1 * (pi ^ 1 ) / 1 )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 3.141592"),ea=31.41592,"10 * (pi ^ 1 ) / 1 )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 31.41592"),ea=314.1592,"100 * (pi ^ 1 ) / 1 )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 314.1592"),ea=31415926.53589793,"10000000 * (pi ^ 1 ) / 1 )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: 31415926.53589793"),ea=Math.sqrt(2),"2 * sin( 1/4 * pi )"!==approxTrigonometric(ea)[0]&&console.log("fail approxTrigonometric: Math.sqrt(2)"),ea=Math.sqrt(3),"2 * sin( 1/3 * pi )"!==approxTrigonometric(ea)[0]&&console.log("fail approxTrigonometric: Math.sqrt(3)"),ea=(Math.sqrt(6)-Math.sqrt(2))/4,"1 * sin( 1/12 * pi )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: (Math.sqrt(6) - Math.sqrt(2))/4"),ea=Math.sqrt(2-Math.sqrt(2))/2,"1 * sin( 1/8 * pi )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: Math.sqrt(2 - Math.sqrt(2))/2"),ea=(Math.sqrt(6)+Math.sqrt(2))/4,"1 * sin( 5/12 * pi )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: (Math.sqrt(6) + Math.sqrt(2))/4"),ea=Math.sqrt(2+Math.sqrt(3))/2,"1 * sin( 5/12 * pi )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: Math.sqrt(2 + Math.sqrt(3))/2"),ea=(Math.sqrt(5)-1)/4,"1 * sin( 1/10 * pi )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: (Math.sqrt(5) - 1)/4"),ea=Math.sqrt(10-2*Math.sqrt(5))/4,"1 * sin( 1/5 * pi )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: Math.sqrt(10 - 2*Math.sqrt(5))/4"),ea=Math.sin(Math.PI/7),"1 * sin( 1/7 * pi )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: Math.sin(Math.PI/7)"),ea=Math.sin(Math.PI/9),"1 * sin( 1/9 * pi )"!==approxAll(ea)[0]&&console.log("fail testApproxAll: Math.sin(Math.PI/9)"),ea=1836.15267,"6 * (pi ^ 5 ) / 1 )"!==approxRationalsOfPowersOfPI(ea)[0]&&console.log("fail approxRationalsOfPowersOfPI: 1836.15267"),J=D=1;D<=13;J=++D)for(K=E=1;E<=13;K=++E)console.log("approxTrigonometric testing: 1 * sin( "+J+"/"+K+" * pi )"),I=J/K,ea=Math.sin(Math.PI*I),ba=approxTrigonometric(ea),ca=ba[3]/ba[4],da=ba[2]*Math.sin(Math.PI*ca),Math.abs(ea-da)>1e-15&&console.log("fail approxTrigonometric: 1 * sin( "+J+"/"+K+" * pi ) . obtained: "+ba);for(J=F=1;F<=13;J=++F)for(K=G=1;G<=13;K=++G)5===J&&11===K||6===J&&11===K||(console.log("approxTrigonometric testing with 4 digits: 1 * sin( "+J+"/"+K+" * pi )"),I=J/K,U=Math.sin(Math.PI*I),ea=U.toFixed(4),ba=approxTrigonometric(ea),ca=ba[3]/ba[4],da=ba[2]*Math.sin(Math.PI*ca),(H=Math.abs(U-da))>1e-14&&console.log("fail approxTrigonometric with 4 digits: 1 * sin( "+J+"/"+K+" * pi ) . obtained: "+ba+" error: "+H));return console.log("testApprox done")},$.approxRadicals=approxRadicals,$.approxRationalsOfLogs=approxRationalsOfLogs,$.approxAll=approxAll,$.testApprox=testApprox,Eval_arccos=function(){return push(cadr(p1)),Eval(),arccos()},arccos=function(){var a,b;if(0,a=0,save(),p1=pop(),car(p1)===symbol(COS))return push(cadr(p1)),void restore();if(isdouble(p1))return b=0,a=Math.acos(p1.d),b&&stop("arccos function argument is not in the interval [-1,1]"),push_double(a),void restore();if(isoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return evaluatingAsFloats?push_double(Math.PI/4):(push_rational(1,4),push_symbol(PI),multiply()),void restore();if(isminusoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),-1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return evaluatingAsFloats?push_double(3*Math.PI/4):(push_rational(3,4),push_symbol(PI),multiply()),void restore();if(!isrational(p1))return push_symbol(ARCCOS),push(p1),list(2),void restore();switch(push(p1),push_integer(2),multiply(),pop_integer()){case-2:evaluatingAsFloats?push_double(Math.PI):push_symbol(PI);break;case-1:evaluatingAsFloats?push_double(2*Math.PI/3):(push_rational(2,3),push_symbol(PI),multiply());break;case 0:evaluatingAsFloats?push_double(Math.PI/2):(push_rational(1,2),push_symbol(PI),multiply());break;case 1:evaluatingAsFloats?push_double(Math.PI/3):(push_rational(1,3),push_symbol(PI),multiply());break;case 2:evaluatingAsFloats?push_double(0):push(zero);break;default:push_symbol(ARCCOS),push(p1),list(2)}return restore()},Eval_arccosh=function(){return push(cadr(p1)),Eval(),arccosh()},arccosh=function(){var a;return a=0,save(),p1=pop(),car(p1)===symbol(COSH)?(push(cadr(p1)),void restore()):isdouble(p1)?(a=p1.d,a<1&&stop("arccosh function argument is less than 1.0"),a=Math.log(a+Math.sqrt(a*a-1)),push_double(a),void restore()):isplusone(p1)?(push(zero),void restore()):(push_symbol(ARCCOSH),push(p1),list(2),restore())},Eval_arcsin=function(){return push(cadr(p1)),Eval(),arcsin()},arcsin=function(){var a,b;if(0,a=0,save(),p1=pop(),car(p1)===symbol(SIN))return push(cadr(p1)),void restore();if(isdouble(p1))return b=0,a=Math.asin(p1.d),b&&stop("arcsin function argument is not in the interval [-1,1]"),push_double(a),void restore();if(isoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return push_rational(1,4),push_symbol(PI),multiply(),void restore();if(isminusoneoversqrttwo(p1)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),-1,2)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),2)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2))return evaluatingAsFloats?push_double(-Math.PI/4):(push_rational(-1,4),push_symbol(PI),multiply()),void restore();if(!isrational(p1))return push_symbol(ARCSIN),push(p1),list(2),void restore();switch(push(p1),push_integer(2),multiply(),pop_integer()){case-2:evaluatingAsFloats?push_double(-Math.PI/2):(push_rational(-1,2),push_symbol(PI),multiply());break;case-1:evaluatingAsFloats?push_double(-Math.PI/6):(push_rational(-1,6),push_symbol(PI),multiply());break;case 0:evaluatingAsFloats?push_double(0):push(zero);break;case 1:evaluatingAsFloats?push_double(Math.PI/6):(push_rational(1,6),push_symbol(PI),multiply());break;case 2:evaluatingAsFloats?push_double(Math.PI/2):(push_rational(1,2),push_symbol(PI),multiply());break;default:push_symbol(ARCSIN),push(p1),list(2)}return restore()},Eval_arcsinh=function(){return push(cadr(p1)),Eval(),arcsinh()},arcsinh=function(){var a;return a=0,save(),p1=pop(),car(p1)===symbol(SINH)?(push(cadr(p1)),void restore()):isdouble(p1)?(a=p1.d,a=Math.log(a+Math.sqrt(a*a+1)),push_double(a),void restore()):iszero(p1)?(push(zero),void restore()):(push_symbol(ARCSINH),push(p1),list(2),restore())},Eval_arctan=function(){return push(cadr(p1)),Eval(),arctan()},arctan=function(){var a,b;return a=0,save(),p1=pop(),car(p1)===symbol(TAN)?(push(cadr(p1)),void restore()):isdouble(p1)?(b=0,a=Math.atan(p1.d),b&&stop("arctan function error"),push_double(a),void restore()):iszero(p1)?(push(zero),void restore()):isnegative(p1)?(push(p1),negate(),arctan(),negate(),void restore()):Find(p1,symbol(SIN))&&Find(p1,symbol(COS))&&(push(p1),numerator(),p2=pop(),push(p1),denominator(),p3=pop(),car(p2)===symbol(SIN)&&car(p3)===symbol(COS)&&equal(cadr(p2),cadr(p3)))?(push(cadr(p2)),void restore()):car(p1)===symbol(POWER)&&equaln(cadr(p1),3)&&equalq(caddr(p1),-1,2)||car(p1)===symbol(MULTIPLY)&&equalq(car(cdr(p1)),1,3)&&car(car(cdr(cdr(p1))))===symbol(POWER)&&equaln(car(cdr(car(cdr(cdr(p1))))),3)&&equalq(car(cdr(cdr(car(cdr(cdr(p1)))))),1,2)?(push_rational(1,6),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),multiply(),void restore()):equaln(p1,1)?(push_rational(1,4),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),multiply(),void restore()):car(p1)===symbol(POWER)&&equaln(cadr(p1),3)&&equalq(caddr(p1),1,2)?(push_rational(1,3),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),multiply(),void restore()):(push_symbol(ARCTAN),push(p1),list(2),restore())},Eval_arctanh=function(){return push(cadr(p1)),Eval(),arctanh()},arctanh=function(){var a;return a=0,save(),p1=pop(),car(p1)===symbol(TANH)?(push(cadr(p1)),void restore()):isdouble(p1)?(a=p1.d,(a<-1||a>1)&&stop("arctanh function argument is not in the interval [-1,1]"),a=Math.log((1+a)/(1-a))/2,push_double(a),void restore()):iszero(p1)?(push(zero),void restore()):(push_symbol(ARCTANH),push(p1),list(2),restore())},DEBUG_ARG=!1,Eval_arg=function(){return push(cadr(p1)),Eval(),arg()},arg=function(){return save(),p1=pop(),push(p1),numerator(),yyarg(),push(p1),denominator(),yyarg(),subtract(),restore()},yyarg=function(){if(save(),p1=pop(),ispositivenumber(p1)||p1===symbol(PI))isdouble(p1)||evaluatingAsFloats?push_double(0):push_integer(0);else if(isnegativenumber(p1))isdouble(p1)||evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),negate();else if(issymbol(p1))push_symbol(ARG),push(p1),list(2);else if(car(p1)===symbol(POWER)&&equaln(cadr(p1),-1))evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),push(caddr(p1)),multiply();else if(car(p1)===symbol(POWER)&&cadr(p1)===symbol(E))push(caddr(p1)),imag();else if(car(p1)===symbol(POWER)&&isoneovertwo(caddr(p1)))DEBUG_ARG&&console.log("arg of a sqrt: "+p1),push(cadr(p1)),arg(),DEBUG_ARG&&console.log(" = 1/2 * "+stack[tos-1]),push(caddr(p1)),multiply();else if(car(p1)===symbol(MULTIPLY))for(push_integer(0),p1=cdr(p1);iscons(p1);)push(car(p1)),arg(),add(),p1=cdr(p1);else car(p1)===symbol(ADD)?(push(p1),rect(),p1=pop(),push(p1),real(),p2=pop(),push(p1),imag(),p3=pop(),iszero(p2)?(evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),isnegative(p3)&&negate()):(push(p3),push(p2),divide(),arctan(),isnegative(p2)&&(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),isnegative(p3)?subtract():add()))):iszero(get_binding(symbol(ASSUME_REAL_VARIABLES)))?(push_symbol(ARG),push(p1),list(2)):push_integer(0);return restore()},bake=function(){var a,b,c,d,e,f;if(a=0,b=0,c=0,d=0,e=0,f=0,expanding++,save(),p1=pop(),b=ispoly(p1,symbol(SYMBOL_S)),c=ispoly(p1,symbol(SYMBOL_T)),d=ispoly(p1,symbol(SYMBOL_X)),e=ispoly(p1,symbol(SYMBOL_Y)),f=ispoly(p1,symbol(SYMBOL_Z)),1===b&&0===c&&0===d&&0===e&&0===f)p2=symbol(SYMBOL_S),bake_poly();else if(0===b&&1===c&&0===d&&0===e&&0===f)p2=symbol(SYMBOL_T),bake_poly();else if(0===b&&0===c&&1===d&&0===e&&0===f)p2=symbol(SYMBOL_X),bake_poly();else if(0===b&&0===c&&0===d&&1===e&&0===f)p2=symbol(SYMBOL_Y),bake_poly();else if(0===b&&0===c&&0===d&&0===e&&1===f)p2=symbol(SYMBOL_Z),bake_poly();else if(iscons(p1)){for(a=tos,push(car(p1)),p1=cdr(p1);iscons(p1);)push(car(p1)),bake(),p1=cdr(p1);list(tos-a)}else push(p1);return restore(),expanding--},polyform=function(){var a;if(a=0,save(),p2=pop(),p1=pop(),ispoly(p1,p2))bake_poly();else if(iscons(p1)){for(a=tos,push(car(p1)),p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),polyform(),p1=cdr(p1);list(tos-a)}else push(p1);return restore()},bake_poly=function(){var a,b,c,d,e,f;for(b=0,c=0,d=0,e=0,a=tos,push(p1),push(p2),d=coeff(),b=tos,c=f=d-1;f>=0;c=f+=-1)p1=stack[a+c],bake_poly_term(c);return e=tos-b,e>1&&(list(e),push(symbol(ADD)),swap(),cons()),p1=pop(),tos-=d,push(p1)},bake_poly_term=function(a){var b,c;if(b=0,c=0,!iszero(p1)){if(0!==a){if(b=tos,car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1);else equaln(p1,1)||push(p1);return 1===a?push(p2):(push(symbol(POWER)),push(p2),push_integer(a),list(3)),c=tos-b,c>1?(list(c),push(symbol(MULTIPLY)),swap(),cons()):void 0}if(car(p1)===symbol(ADD))for(p1=cdr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1);else push(p1)}},Eval_besselj=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),besselj()},besselj=function(){return save(),yybesselj(),restore()},yybesselj=function(){var a,b;return a=0,b=0,p2=pop(),p1=pop(),push(p2),b=pop_integer(),isdouble(p1)&&!isNaN(b)?(a=jn(b,p1.d),void push_double(a)):iszero(p1)&&iszero(p2)?void push_integer(1):iszero(p1)&&!isNaN(b)?void push_integer(0):p2.k===NUM&&MEQUAL(p2.q.b,2)?MEQUAL(p2.q.a,1)?(evaluatingAsFloats?push_double(2/Math.PI):(push_integer(2),push_symbol(PI),divide()),push(p1),divide(),push_rational(1,2),power(),push(p1),sine(),void multiply()):MEQUAL(p2.q.a,-1)?(evaluatingAsFloats?push_double(2/Math.PI):(push_integer(2),push_symbol(PI),divide()),push(p1),divide(),push_rational(1,2),power(),push(p1),cosine(),void multiply()):(push_integer(MSIGN(p2.q.a)),p3=pop(),push_integer(2),push(p1),divide(),push(p2),push(p3),subtract(),multiply(),push(p1),push(p2),push(p3),subtract(),besselj(),multiply(),push(p1),push(p2),push_integer(2),push(p3),multiply(),subtract(),besselj(),void subtract()):isnegativeterm(p1)?(push(p1),negate(),push(p2),power(),push(p1),push(p2),negate(),power(),multiply(),push_symbol(BESSELJ),push(p1),negate(),push(p2),list(3),void multiply()):isnegativeterm(p2)?(push_integer(-1),push(p2),power(),push_symbol(BESSELJ),push(p1),push(p2),negate(),list(3),void multiply()):(push(symbol(BESSELJ)),push(p1),push(p2),list(3))},Eval_bessely=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),bessely()},bessely=function(){return save(),yybessely(),restore()},yybessely=function(){var a,b;return a=0,b=0,p2=pop(),p1=pop(),push(p2),b=pop_integer(),isdouble(p1)&&!isNaN(b)?(a=yn(b,p1.d),void push_double(a)):isnegativeterm(p2)?(push_integer(-1),push(p2),power(),push_symbol(BESSELY),push(p1),push(p2),negate(),list(3),void multiply()):(push_symbol(BESSELY),push(p1),push(p2),void list(3))},MP_MIN_SIZE=2,MP_MAX_FREE=1e3,mtotal=0,free_stack=[],mint=function(a){return bigInt(a)},setSignTo=function(a,b){if(a.isPositive()){if(b<0)return a.multiply(bigInt(-1))}else if(b>0)return a.multiply(bigInt(-1));return a},makeSignSameAs=function(a,b){if(a.isPositive()){if(b.isNegative())return a.multiply(bigInt(-1))}else if(b.isPositive())return a.multiply(bigInt(-1));return a},makePositive=function(a){return a.isNegative()?a.multiply(bigInt(-1)):a},add_numbers=function(){var a,b,c;return a=1,b=1,isrational(stack[tos-1])&&isrational(stack[tos-2])?void qadd():(save(),p2=pop(),p1=pop(),a=isdouble(p1)?p1.d:convert_rational_to_double(p1),b=isdouble(p2)?p2.d:convert_rational_to_double(p2),c=a+b,push_double(c),restore())},subtract_numbers=function(){var a,b;return a=0,b=0,isrational(stack[tos-1])&&isrational(stack[tos-2])?void qsub():(save(),p2=pop(),p1=pop(),a=isdouble(p1)?p1.d:convert_rational_to_double(p1),b=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(a-b),restore())},multiply_numbers=function(){var a,b;return a=0,b=0,isrational(stack[tos-1])&&isrational(stack[tos-2])?void qmul():(save(),p2=pop(),p1=pop(),a=isdouble(p1)?p1.d:convert_rational_to_double(p1),b=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(a*b),restore())},divide_numbers=function(){var a,b;return a=0,b=0,isrational(stack[tos-1])&&isrational(stack[tos-2])?void qdiv():(save(),p2=pop(),p1=pop(),iszero(p2)&&stop("divide by zero"),a=isdouble(p1)?p1.d:convert_rational_to_double(p1),b=isdouble(p2)?p2.d:convert_rational_to_double(p2),push_double(a/b),restore())},invert_number=function(){var a,b;return save(),p1=pop(),iszero(p1)&&stop("divide by zero"),isdouble(p1)?(push_double(1/p1.d),void restore()):(a=bigInt(p1.q.a),b=bigInt(p1.q.b),b=makeSignSameAs(b,a),a=setSignTo(a,1),p1=new U,p1.k=NUM,p1.q.a=b,p1.q.b=a,push(p1),restore())},compare_rationals=function(a,b){var c,d;return 0,c=mmul(a.q.a,b.q.b),d=mmul(a.q.b,b.q.a),mcmp(c,d)},compare_numbers=function(a,b){var c,d;return c=0,d=0,isrational(a)&&isrational(b)?compare_rationals(a,b):(c=isdouble(a)?a.d:convert_rational_to_double(a),d=isdouble(b)?b.d:convert_rational_to_double(b),c<d?-1:c>d?1:0)},negate_number=function(){if(save(),p1=pop(),iszero(p1))return push(p1),void restore();switch(p1.k){case NUM:p2=new U,p2.k=NUM,p2.q.a=bigInt(p1.q.a.multiply(bigInt.minusOne)),p2.q.b=bigInt(p1.q.b),push(p2);break;case DOUBLE:push_double(-p1.d);break;default:stop("bug caught in mp_negate_number")}return restore()},bignum_truncate=function(){var a;return save(),p1=pop(),a=mdiv(p1.q.a,p1.q.b),p1=new U,p1.k=NUM,p1.q.a=a,p1.q.b=bigInt(1),push(p1),restore()},mp_numerator=function(){return save(),p1=pop(),p1.k!==NUM?(push(one),void restore()):(p2=new U,p2.k=NUM,p2.q.a=bigInt(p1.q.a),p2.q.b=bigInt(1),push(p2),restore())},mp_denominator=function(){return save(),p1=pop(),p1.k!==NUM?(push(one),void restore()):(p2=new U,p2.k=NUM,p2.q.a=bigInt(p1.q.b),p2.q.b=bigInt(1),push(p2),restore())},bignum_power_number=function(a){var b,c,d;return save(),p1=pop(),b=mpow(p1.q.a,Math.abs(a)),c=mpow(p1.q.b,Math.abs(a)),a<0&&(d=b,b=c,c=d,b=makeSignSameAs(b,c),c=setSignTo(c,1)),p1=new U,p1.k=NUM,p1.q.a=b,p1.q.b=c,push(p1),restore()},convert_bignum_to_double=function(a){return a.toJSNumber()},convert_rational_to_double=function(a){var b;return a.q,b=a.q.a.divmod(a.q.b),b.quotient+b.remainder/a.q.b.toJSNumber()},push_integer=function(a){return DEBUG&&console.log("pushing integer "+a),save(),p1=new U,p1.k=NUM,p1.q.a=bigInt(a),p1.q.b=bigInt(1),push(p1),restore()},push_double=function(a){return save(),p1=new U,p1.k=DOUBLE,p1.d=a,push(p1),restore()},push_rational=function(a,b){var c;return c=new U,c.k=NUM,c.q.a=bigInt(a),c.q.b=bigInt(b),push(c)},pop_integer=function(){var a;switch(a=NaN,save(),p1=pop(),p1.k){case NUM:isinteger(p1)&&p1.q.a.isSmall&&(a=p1.q.a.toJSNumber());break;case DOUBLE:DEBUG&&console.log("popping integer but double is found"),Math.floor(p1.d)===p1.d&&(DEBUG&&console.log("...altough it's an integer"),a=p1.d)}return restore(),a},print_double=function(a,b){var c,d;return c="",d=doubleToReasonableString(a.d),c+=print_str(1===b&&"-"===d?d+1:d)},bignum_scan_integer=function(a){var b,c,d;return save(),c=0,d=a[c],"+"!==d&&"-"!==d||c++,b=bigInt(a.substring(c)),p1=new U,p1.k=NUM,p1.q.a=b,p1.q.b=bigInt(1),push(p1),"-"===d&&negate(),restore()},bignum_scan_float=function(a){return push_double(parseFloat(a))},print_number=function(a,b){var c,d,f;switch(d="",f="","",a.k){case NUM:c=a.q.a.toString(),b||"-"===c[0]&&(c=c.substring(1)),printMode===PRINTMODE_LATEX&&isfraction(a)&&(c="\\frac{"+c+"}{"),d+=c,isfraction(a)&&(printMode!==PRINTMODE_LATEX&&(d+="/"),f=a.q.b.toString(),printMode===PRINTMODE_LATEX&&(f+="}"),d+=f);break;case DOUBLE:c=doubleToReasonableString(a.d),b||"-"===c[0]&&(c=c.substring(1)),d+=c}return d},gcd_numbers=function(){return save(),p2=pop(),p1=pop(),p3=new U,p3.k=NUM,p3.q.a=mgcd(p1.q.a,p2.q.a),p3.q.b=mgcd(p1.q.b,p2.q.b),p3.q.a=setSignTo(p3.q.a,1),push(p3),restore()},pop_double=function(){var a;switch(a=0,save(),p1=pop(),p1.k){case NUM:a=convert_rational_to_double(p1);break;case DOUBLE:a=p1.d;break;default:a=0}return restore(),a},bignum_float=function(){var a;return a=0,a=convert_rational_to_double(pop()),push_double(a)},bignum_factorial=function(a){return save(),p1=new U,p1.k=NUM,p1.q.a=__factorial(a),p1.q.b=bigInt(1),push(p1),restore()},__factorial=function(a){var b,c,d,e,f,g;if(d=0,0===a||1===a)return b=bigInt(1);if(b=bigInt(2),c=bigInt(0),3<=a)for(d=e=3,f=a;3<=f?e<=f:e>=f;d=3<=f?++e:--e)c=bigInt(d),g=mmul(b,c),b=g;return b},mask=[1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288,1048576,2097152,4194304,8388608,16777216,33554432,67108864,134217728,268435456,536870912,1073741824,2147483648],mp_set_bit=function(a,b){return console.log("not implemented yet"),a[b/32]|=mask[b%32]},mp_clr_bit=function(a,b){return console.log("not implemented yet"),a[b/32]&=~mask[b%32]},mshiftright=function(a){return a=a.shiftRight()},Eval_binomial=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),binomial()},binomial=function(){return save(),ybinomial(),restore()},ybinomial=function(){return p2=pop(),p1=pop(),0===BINOM_check_args()?void push(zero):(push(p1),factorial(),push(p2),factorial(),divide(),push(p1),push(p2),subtract(),factorial(),divide())},BINOM_check_args=function(){return isnum(p1)&&lessp(p1,zero)?0:isnum(p2)&&lessp(p2,zero)?0:isnum(p1)&&isnum(p2)&&lessp(p1,p2)?0:1},Eval_ceiling=function(){return push(cadr(p1)),Eval(),ceiling()},ceiling=function(){return save(),yyceiling(),restore()},yyceiling=function(){var a;return a=0,p1=pop(),isnum(p1)?isdouble(p1)?(a=Math.ceil(p1.d),void push_double(a)):isinteger(p1)?void push(p1):(p3=new U,p3.k=NUM,p3.q.a=mdiv(p1.q.a,p1.q.b),p3.q.b=mint(1),push(p3),isnegativenumber(p1)?1:(push_integer(1),add())):(push_symbol(CEILING),push(p1),void list(2))},Eval_choose=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),choose()},choose=function(){return save(),p2=pop(),p1=pop(),0===choose_check_args()?(push_integer(0),void restore()):(push(p1),factorial(),push(p2),factorial(),divide(),push(p1),push(p2),subtract(),factorial(),divide(),restore())},choose_check_args=function(){return isnum(p1)&&lessp(p1,zero)?0:isnum(p2)&&lessp(p2,zero)?0:isnum(p1)&&isnum(p2)&&lessp(p1,p2)?0:1},Eval_circexp=function(){return push(cadr(p1)),Eval(),circexp(),Eval()},circexp=function(){var a,b,c,d;if(b=0,a=0,save(),p1=pop(),car(p1)===symbol(COS))return push(cadr(p1)),expcos(),void restore();if(car(p1)===symbol(SIN))return push(cadr(p1)),expsin(),void restore();if(car(p1)===symbol(TAN))return p1=cadr(p1),push(imaginaryunit),push(p1),multiply(),exponential(),p2=pop(),push(imaginaryunit),push(p1),multiply(),negate(),exponential(),p3=pop(),push(p3),push(p2),subtract(),push(imaginaryunit),multiply(),push(p2),push(p3),add(),divide(),void restore();if(car(p1)===symbol(COSH))return p1=cadr(p1),push(p1),exponential(),push(p1),negate(),exponential(),add(),push_rational(1,2),multiply(),void restore();if(car(p1)===symbol(SINH))return p1=cadr(p1),push(p1),exponential(),push(p1),negate(),exponential(),subtract(),push_rational(1,2),multiply(),void restore();if(car(p1)===symbol(TANH))return p1=cadr(p1),push(p1),push_integer(2),multiply(),exponential(),p1=pop(),push(p1),push_integer(1),subtract(),push(p1),push_integer(1),add(),divide(),void restore();if(iscons(p1)){for(a=tos;iscons(p1);)push(car(p1)),circexp(),p1=cdr(p1);return list(tos-a),void restore()}if(p1.k===TENSOR){for(push(p1),copy_tensor(),p1=pop(),b=c=0,d=p1.tensor.nelem;0<=d?c<d:c>d;b=0<=d?++c:--c)push(p1.tensor.elem[b]),circexp(),p1.tensor.elem[b]=pop();return push(p1),void restore()}return push(p1),restore()},Eval_clearall=function(){return do_clearall(),push(symbol(NIL))},do_clearall=function(){return 0===test_flag&&clear_term(),do_clearPatterns(),clear_symbols(),defn(),codeGen=!1},clearall=function(){return run("clearall")},clearRenamedVariablesToAvoidBindingToExternalScope=function(){var a,b,c,d;for(d=[],a=b=0,c=symtab.length;0<=c?b<c:b>c;a=0<=c?++b:--b)-1!==symtab[a].printname.indexOf("AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE")?(symtab[a].k=SYM,symtab[a].printname="",binding[a]=symtab[a],d.push(isSymbolReclaimable[a]=!0)):d.push(void 0);return d},Eval_clear=function(){var a,b;for(p2=cdr(p1);iscons(p2);)b=car(p2),b.k!==SYM&&stop("symbol error"),a=symtab.indexOf(b),symtab[a].k=SYM,symtab[a].printname="",binding[a]=symtab[a],isSymbolReclaimable[a]=!0,p2=cdr(p2);return push(symbol(NIL))},DEBUG_CLOCKFORM=!1,Eval_clock=function(){return push(cadr(p1)),Eval(),clockform()},clockform=function(){return save(),p1=pop(),push(p1),abs(),DEBUG_CLOCKFORM&&console.log("clockform: abs of "+p1+" : "+stack[tos-1]),push_symbol(POWER),push_integer(-1),push(p1),arg(),DEBUG_CLOCKFORM&&console.log("clockform: arg of "+p1+" : "+stack[tos-1]),evaluatingAsFloats?push_double(Math.PI):push(symbol(PI)),divide(),DEBUG_CLOCKFORM&&console.log("clockform: divide : "+stack[tos-1]),list(3),DEBUG_CLOCKFORM&&console.log("clockform: power : "+stack[tos-1]),multiply(),DEBUG_CLOCKFORM&&console.log("clockform: multiply : "+stack[tos-1]),restore()},Eval_coeff=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),p3=pop(),p2=pop(),p1=pop(),p3===symbol(NIL)&&(p3=p2,p2=symbol(SYMBOL_X)),push(p1),push(p2),push(p3),power(),divide(),push(p2),filter()},coeff=function(){var a,b,c;for(save(),p2=pop(),p1=pop(),a=tos;;){if(push(p1),push(p2),push(zero),subst(),Eval(),p3=pop(),push(p3),push(p1),push(p3),subtract(),p1=pop(),equal(p1,zero))return b=tos-a,restore(),b;push(p1),push(p2),c=expanding,expanding=1,divide(),expanding=c,p1=pop()}},Eval_cofactor=function(){var b,c,d;return b=0,c=0,d=0,push(cadr(p1)),Eval(),p2=pop(),istensor(p2)&&2===p2.tensor.ndim&&p2.tensor.dim[0]===p2.tensor.dim[1]?1:stop("cofactor: 1st arg: square matrix expected"),d=p2.tensor.dim[0],push(caddr(p1)),Eval(),b=pop_integer(),(b<1||b>d)&&stop("cofactor: 2nd arg: row index expected"),push(cadddr(p1)),Eval(),c=pop_integer(),(c<1||c>d)&&stop("cofactor: 3rd arg: column index expected"),cofactor(p2,d,b-1,c-1)},cofactor=function(a,b,c,d){var e,f,g,h,i,j;for(f=0,g=0,f=h=0,i=b;0<=i?h<i:h>i;f=0<=i?++h:--h)for(g=e=0,j=b;0<=j?e<j:e>j;g=0<=j?++e:--e)f!==c&&g!==d&&push(a.tensor.elem[b*f+g]);if(determinant(b-1),(c+d)%2)return negate()},Eval_condense=function(){return push(cadr(p1)),Eval(),Condense()},Condense=function(){var a;return a=expanding,expanding=0,save(),yycondense(),restore(),expanding=a},yycondense=function(){if(p1=pop(),car(p1)!==symbol(ADD))return void push(p1);for(p3=cdr(p1),push(car(p3)),p3=cdr(p3);iscons(p3);)push(car(p3)),gcd(),p3=cdr(p3);for(inverse(),p2=pop(),push(zero),p3=cdr(p1);iscons(p3);)push(p2),push(car(p3)),multiply(),add(),p3=cdr(p3);return yyexpand(),push(p2),divide()},Eval_conj=function(){return push(cadr(p1)),Eval(),p1=pop(),push(p1),Find(p1,imaginaryunit)?conjugate():(polar(),conjugate(),clockform())},conjugate=function(){return push(imaginaryunit),push(imaginaryunit),negate(),subst(),Eval()},consCount=0,cons=function(){var a;return consCount++,DEBUG&&console.log("cons tos: "+tos+" # "+consCount),a=new U,a.k=CONS,a.cons.cdr=pop(),a===a.cons.cdr&&console.log("something wrong p == its cdr"),a.cons.car=pop(),push(a)},Eval_contract=function(){return push(cadr(p1)),Eval(),cddr(p1)===symbol(NIL)?(push_integer(1),push_integer(2)):(push(caddr(p1)),Eval(),push(cadddr(p1)),Eval()),contract()},contract=function(){return save(),yycontract(),restore()},yycontract=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A;if(k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,h=[],i=[],p3=pop(),p2=pop(),p1=pop(),!istensor(p1))return iszero(p1)||stop("contract: tensor expected, 1st arg is not a tensor"),void push(zero);for(push(p2),o=pop_integer(),push(p3),p=pop_integer(),r=p1.tensor.ndim,(o<1||o>r||p<1||p>r||o===p||p1.tensor.dim[o-1]!==p1.tensor.dim[p-1])&&stop("contract: index out of range"),o--,p--,q=p1.tensor.dim[o],s=1,l=t=0,u=r;0<=u?t<u:t>u;l=0<=u?++t:--t)l!==o&&l!==p&&(s*=p1.tensor.dim[l]);for(p2=alloc_tensor(s),p2.tensor.ndim=r-2,m=0,l=b=0,v=r;0<=v?b<v:b>v;l=0<=v?++b:--b)l!==o&&l!==p&&(p2.tensor.dim[m++]=p1.tensor.dim[l]);for(a=p1.tensor.elem,j=p2.tensor.elem,l=c=0,w=r;0<=w?c<w:c>w;l=0<=w?++c:--c)h[l]=0,i[l]=p1.tensor.dim[l];for(l=d=0,x=s;0<=x?d<x:d>x;l=0<=x?++d:--d){for(push(zero),m=e=0,y=q;0<=y?e<y:e>y;m=0<=y?++e:--e){for(h[o]=m,h[p]=m,k=0,n=f=0,z=r;0<=z?f<z:f>z;n=0<=z?++f:--f)k=k*i[n]+h[n];push(a[k]),add()}for(j[l]=pop(),m=g=A=r-1;A<=0?g<=0:g>=0;m=A<=0?++g:--g)if(m!==o&&m!==p){if(++h[m]<i[m])break;h[m]=0}}return push(1===s?j[0]:p2)},Eval_cos=function(){return push(cadr(p1)),Eval(),cosine()},cosine=function(){return save(),p1=pop(),car(p1)===symbol(ADD)?cosine_of_angle_sum():cosine_of_angle(),restore()},cosine_of_angle_sum=function(){for(p2=cdr(p1);iscons(p2);){if(p4=car(p2),isnpi(p4))return push(p1),push(p4),subtract(),p3=pop(),push(p3),cosine(),push(p4),cosine(),multiply(),push(p3),sine(),push(p4),sine(),multiply(),void subtract();p2=cdr(p2)}return cosine_of_angle()},cosine_of_angle=function(){var a,b;if(car(p1)===symbol(ARCCOS))return void push(cadr(p1));if(isdouble(p1))return a=Math.cos(p1.d),Math.abs(a)<1e-10&&(a=0),void push_double(a);if(isnegative(p1)&&(push(p1),negate(),p1=pop()),car(p1)===symbol(ARCTAN))return push_integer(1),push(cadr(p1)),push_integer(2),power(),add(),push_rational(-1,2),void power();if(push(p1),push_integer(180),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),divide(),(b=pop_integer())<0||isNaN(b))return push(symbol(COS)),push(p1),void list(2);switch(b%360){case 90:case 270:return push_integer(0);case 60:case 300:return push_rational(1,2);case 120:case 240:return push_rational(-1,2);case 45:case 315:return push_rational(1,2),push_integer(2),push_rational(1,2),power(),multiply();case 135:case 225:return push_rational(-1,2),push_integer(2),push_rational(1,2),power(),multiply();case 30:case 330:return push_rational(1,2),push_integer(3),push_rational(1,2),power(),multiply();case 150:case 210:return push_rational(-1,2),push_integer(3),push_rational(1,2),power(),multiply();case 0:return push_integer(1);case 180:return push_integer(-1);default:return push(symbol(COS)),push(p1),list(2)}},Eval_cosh=function(){return push(cadr(p1)),Eval(),ycosh()},ycosh=function(){return save(),yycosh(),restore()},yycosh=function(){var a;return a=0,p1=pop(),car(p1)===symbol(ARCCOSH)?void push(cadr(p1)):isdouble(p1)?(a=Math.cosh(p1.d),Math.abs(a)<1e-10&&(a=0),void push_double(a)):iszero(p1)?void push(one):(push_symbol(COSH),push(p1),list(2))},Eval_decomp=function(){var a;return save(),console.log("Eval_decomp is being called!!!!!!!!!!!!!!!!!!!!"),a=tos,push(symbol(NIL)),push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),p1=pop(),p1===symbol(NIL)?guess():push(p1),decomp(!1),list(tos-a),restore()},pushTryNotToDuplicate=function(a){return tos>0&&(DEBUG&&console.log("comparing "+a+" to: "+stack[tos-1]),equal(a,stack[tos-1]))?void(DEBUG&&console.log("skipping "+a+" because it's already on stack ")):push(a)},decomp=function(a){if(save(),p2=pop(),p1=pop(),DEBUG&&console.log("DECOMPOSING "+p1),a){if(!iscons(p1))return DEBUG&&console.log(" ground thing: "+p1),pushTryNotToDuplicate(p1),void restore()}else if(0===Find(p1,p2))return DEBUG&&console.log(" entire expression is constant"),pushTryNotToDuplicate(p1),void restore();if(isadd(p1))return decomp_sum(a),void restore();if(ismultiply(p1))return decomp_product(a),void restore();for(DEBUG&&console.log(" naive decomp"),p3=cdr(p1),DEBUG&&console.log("startig p3: "+p3);iscons(p3);)a&&push(car(p3)),DEBUG&&console.log("recursive decomposition"),push(car(p3)),DEBUG&&console.log("car(p3): "+car(p3)),push(p2),DEBUG&&console.log("p2: "+p2),decomp(a),p3=cdr(p3);return restore()},decomp_sum=function(a){var b;for(DEBUG&&console.log(" decomposing the sum "),b=0,p3=cdr(p1);iscons(p3);)(Find(car(p3),p2)||a)&&(push(car(p3)),push(p2),decomp(a)),p3=cdr(p3);for(b=tos,p3=cdr(p1);iscons(p3);)0===Find(car(p3),p2)&&pushTryNotToDuplicate(car(p3)),p3=cdr(p3);if(tos-b)return add_all(tos-b),p3=pop(),pushTryNotToDuplicate(p3),push(p3),negate()},decomp_product=function(a){var b;for(DEBUG&&console.log(" decomposing the product "),b=0,p3=cdr(p1);iscons(p3);)(Find(car(p3),p2)||a)&&(push(car(p3)),push(p2),decomp(a)),p3=cdr(p3);for(b=tos,p3=cdr(p1);iscons(p3);)0===Find(car(p3),p2)&&pushTryNotToDuplicate(car(p3)),p3=cdr(p3);if(tos-b)return multiply_all(tos-b)},define_user_function=function(){return p3=caadr(p1),p4=cdadr(p1),p5=caddr(p1),issymbol(p3)||stop("function name?"),car(p5)===symbol(EVAL)&&(push(cadr(p5)),Eval(),p5=pop()),push_symbol(FUNCTION),push(p5),push(p4),list(3),p5=pop(),set_binding(p3,p5),push_symbol(NIL)},Eval_function_reference=function(){return push(p1)},Eval_defint=function(){for(push(cadr(p1)),Eval(),p2=pop(),p1=cddr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1),Eval(),p3=pop(),push(car(p1)),p1=cdr(p1),Eval(),p4=pop(),push(car(p1)),p1=cdr(p1),Eval(),p5=pop(),push(p2),push(p3),integral(),p2=pop(),push(p2),push(p3),push(p5),subst(),Eval(),push(p2),push(p3),push(p4),subst(),Eval(),subtract(),p2=pop();return push(p2)},Eval_degree=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),p1=pop(),p1===symbol(NIL)?guess():push(p1),degree()},degree=function(){return save(),p2=pop(),p1=pop(),p3=zero,yydegree(p1),push(p3),restore()},yydegree=function(a){var b;if(equal(a,p2)){if(iszero(p3))return p3=one}else if(car(a)===symbol(POWER)){if(equal(cadr(a),p2)&&isnum(caddr(a))&&lessp(p3,caddr(a)))return p3=caddr(a)}else if(iscons(a)){for(a=cdr(a),b=[];iscons(a);)yydegree(car(a)),b.push(a=cdr(a));return b}},Eval_denominator=function(){return push(cadr(p1)),Eval(),denominator()},denominator=function(){var a;if(a=0,save(),p1=pop(),car(p1)===symbol(ADD)&&(push(p1),rationalize(),p1=pop()),car(p1)===symbol(MULTIPLY)){for(a=tos,p1=cdr(p1);iscons(p1);)push(car(p1)),denominator(),p1=cdr(p1);multiply_all(tos-a)}else isrational(p1)?(push(p1),mp_denominator()):car(p1)===symbol(POWER)&&isnegativeterm(caddr(p1))?(push(p1),reciprocate()):push(one);return restore()},Eval_derivative=function(){var a,d,e,f,g;for(0,p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),push(car(p1)),Eval(),p2=pop(),p2===symbol(NIL)?(guess(),push(symbol(NIL))):isnum(p2)?(guess(),push(p2)):(push(p2),p1=cdr(p1),push(car(p1)),Eval()),p5=pop(),p4=pop(),p3=pop();;){if(isnum(p5)?(push(p5),d=pop_integer(),isNaN(d)&&stop("nth derivative: check n")):d=1,push(p3),d>=0)for(e=0,f=d;0<=f?e<f:e>f;0<=f?++e:--e)push(p4),derivative();else for(d=-d,a=0,g=d;0<=g?a<g:a>g;0<=g?++a:--a)push(p4),integral();if(p3=pop(),p5===symbol(NIL))break;if(isnum(p5)){if(p1=cdr(p1),push(car(p1)),Eval(),(p5=pop())===symbol(NIL))break;isnum(p5)?1:(p4=p5,p1=cdr(p1),push(car(p1)),Eval(),p5=pop())}else p4=p5,p1=cdr(p1),push(car(p1)),Eval(),p5=pop()}return push(p3)},derivative=function(){return save(),p2=pop(),p1=pop(),isnum(p2)&&stop("undefined function"),istensor(p1)?istensor(p2)?d_tensor_tensor():d_tensor_scalar():istensor(p2)?d_scalar_tensor():d_scalar_scalar(),restore()},d_scalar_scalar=function(){return issymbol(p2)?d_scalar_scalar_1():(push(p1),push(p2),push(symbol(SECRETX)),subst(),push(symbol(SECRETX)),derivative(),push(symbol(SECRETX)),push(p2),subst())},d_scalar_scalar_1=function(){return equal(p1,p2)?void push(one):iscons(p1)?isadd(p1)?void dsum():car(p1)===symbol(MULTIPLY)?void dproduct():car(p1)===symbol(POWER)?void dpower():car(p1)===symbol(DERIVATIVE)?void dd():car(p1)===symbol(LOG)?void dlog():car(p1)===symbol(SIN)?void dsin():car(p1)===symbol(COS)?void dcos():car(p1)===symbol(TAN)?void dtan():car(p1)===symbol(ARCSIN)?void darcsin():car(p1)===symbol(ARCCOS)?void darccos():car(p1)===symbol(ARCTAN)?void darctan():car(p1)===symbol(SINH)?void dsinh():car(p1)===symbol(COSH)?void dcosh():car(p1)===symbol(TANH)?void dtanh():car(p1)===symbol(ARCSINH)?void darcsinh():car(p1)===symbol(ARCCOSH)?void darccosh():car(p1)===symbol(ARCTANH)?void darctanh():car(p1)===symbol(ABS)?void dabs():car(p1)===symbol(SGN)?void dsgn():car(p1)===symbol(HERMITE)?void dhermite():car(p1)===symbol(ERF)?void derf():car(p1)===symbol(ERFC)?void derfc():car(p1)===symbol(BESSELJ)?void(iszero(caddr(p1))?dbesselj0():dbesseljn()):car(p1)===symbol(BESSELY)?void(iszero(caddr(p1))?dbessely0():dbesselyn()):car(p1)===symbol(INTEGRAL)&&caddr(p1)===p2?void derivative_of_integral():dfunction():void push(zero)},dsum=function(){var a;for(a=tos,p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),derivative(),p1=cdr(p1);return add_all(tos-a)},dproduct=function(){var a,b,c,d,e,f,g;for(b=0,c=0,d=0,d=length(p1)-1,b=e=0,f=d;0<=f?e<f:e>f;b=0<=f?++e:--e){for(p3=cdr(p1),c=a=0,g=d;0<=g?a<g:a>g;c=0<=g?++a:--a)push(car(p3)),b===c&&(push(p2),derivative()),p3=cdr(p3);multiply_all(d)}return add_all(d)},dpower=function(){return push(caddr(p1)),push(cadr(p1)),divide(),push(cadr(p1)),push(p2),derivative(),multiply(),push(cadr(p1)),logarithm(),push(caddr(p1)),push(p2),derivative(),multiply(),add(),push(p1),multiply()},dlog=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),divide()},dd=function(){return push(cadr(p1)),push(p2),derivative(),p3=pop(),car(p3)===symbol(DERIVATIVE)?(push_symbol(DERIVATIVE),push_symbol(DERIVATIVE),push(cadr(p3)),lessp(caddr(p3),caddr(p1))?(push(caddr(p3)),list(3),push(caddr(p1))):(push(caddr(p1)),list(3),push(caddr(p3))),list(3)):(push(p3),push(caddr(p1)),derivative())},dfunction=function(){return p3=cdr(p1),p3===symbol(NIL)||Find(p3,p2)?(push_symbol(DERIVATIVE),push(p1),push(p2),list(3)):push(zero)},dsin=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),cosine(),multiply()},dcos=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),sine(),multiply(),negate()},dtan=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),cosine(),push_integer(-2),power(),multiply()},darcsin=function(){return push(cadr(p1)),push(p2),derivative(),push_integer(1),push(cadr(p1)),push_integer(2),power(),subtract(),push_rational(-1,2),power(),multiply()},darccos=function(){return push(cadr(p1)),push(p2),derivative(),push_integer(1),push(cadr(p1)),push_integer(2),power(),subtract(),push_rational(-1,2),power(),multiply(),negate()},darctan=function(){return push(cadr(p1)),push(p2),derivative(),push_integer(1),push(cadr(p1)),push_integer(2),power(),add(),inverse(),multiply(),simplify()},dsinh=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),ycosh(),multiply()},dcosh=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),ysinh(),multiply()},dtanh=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),ycosh(),push_integer(-2),power(),multiply()},darcsinh=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push_integer(2),power(),push_integer(1),add(),push_rational(-1,2),power(),multiply()},darccosh=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push_integer(2),power(),push_integer(-1),add(),push_rational(-1,2),power(),multiply()},darctanh=function(){return push(cadr(p1)),push(p2),derivative(),push_integer(1),push(cadr(p1)),push_integer(2),power(),subtract(),inverse(),multiply()},dabs=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),sgn(),multiply()},dsgn=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),dirac(),multiply(),push_integer(2),multiply()},dhermite=function(){return push(cadr(p1)),push(p2),derivative(),push_integer(2),push(caddr(p1)),multiply(),multiply(),push(cadr(p1)),push(caddr(p1)),push_integer(-1),add(),hermite(),multiply()},derf=function(){return push(cadr(p1)),push_integer(2),power(),push_integer(-1),multiply(),exponential(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_rational(-1,2),power(),multiply(),push_integer(2),multiply(),push(cadr(p1)),push(p2),derivative(),multiply()},derfc=function(){return push(cadr(p1)),push_integer(2),power(),push_integer(-1),multiply(),exponential(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_rational(-1,2),power(),multiply(),push_integer(-2),multiply(),push(cadr(p1)),push(p2),derivative(),multiply()},dbesselj0=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push_integer(1),besselj(),multiply(),push_integer(-1),multiply()},dbesseljn=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push(caddr(p1)),push_integer(-1),add(),besselj(),push(caddr(p1)),push_integer(-1),multiply(),push(cadr(p1)),divide(),push(cadr(p1)),push(caddr(p1)),besselj(),multiply(),add(),multiply()},dbessely0=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push_integer(1),besselj(),multiply(),push_integer(-1),multiply()},dbesselyn=function(){return push(cadr(p1)),push(p2),derivative(),push(cadr(p1)),push(caddr(p1)),push_integer(-1),add(),bessely(),push(caddr(p1)),push_integer(-1),multiply(),push(cadr(p1)),divide(),push(cadr(p1)),push(caddr(p1)),bessely(),multiply(),add(),multiply()},derivative_of_integral=function(){return push(cadr(p1))},DET_check_arg=function(){return istensor(p1)?2!==p1.tensor.ndim?0:p1.tensor.dim[0]!==p1.tensor.dim[1]?0:1:0},det=function(){var a,b,c,d,e,f,g;if(c=0,d=0,save(),p1=pop(),0===DET_check_arg())return push_symbol(DET),push(p1),list(2),void restore();for(d=p1.tensor.nelem,a=p1.tensor.elem,c=e=0,f=d;(0<=f?e<f:e>f)&&isnum(a[c]);c=0<=f?++e:--e);if(c===d)yydetg();else{for(c=b=0,g=p1.tensor.nelem;0<=g?b<g:b>g;c=0<=g?++b:--b)push(p1.tensor.elem[c]);determinant(p1.tensor.dim[0])}return restore()},determinant=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o;for(e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,b=[],e=tos-a*a,f=i=0,k=a;0<=k?i<k:i>k;f=0<=k?++i:--i)b[f]=f,b[f+a]=0,b[f+a+a]=1;for(n=1,push(zero);;){for(push_integer(1===n?1:-1),f=c=0,l=a;0<=l?c<l:c>l;f=0<=l?++c:--c)h=a*b[f]+f,push(stack[e+h]),multiply();for(add(),g=a-1,m=0,d=!1;;)if((j=b[a+g]+b[a+a+g])<0)b[a+a+g]=-b[a+a+g],g--;else{if(j!==g+1)break;if(0===g){d=!0;break}m++,b[a+a+g]=-b[a+a+g],g--}if(d)break;o=b[g-b[a+g]+m],b[g-b[a+g]+m]=b[g-j+m],b[g-j+m]=o,b[a+g]=j,n=-n}return stack[e]=stack[tos-1],tos=e+1},detg=function(){return save(),p1=pop(),0===DET_check_arg()?(push_symbol(DET),push(p1),list(2),void restore()):(yydetg(),restore())},yydetg=function(){var a,b,c,d;for(a=0,b=0,b=p1.tensor.dim[0],a=c=0,d=b*b;0<=d?c<d:c>d;a=0<=d?++c:--c)push(p1.tensor.elem[a]);return lu_decomp(b),tos-=b*b,push(p1)},M=function(a,b,c,d){return stack[a+b*c+d]},setM=function(a,b,c,d,e){return stack[a+b*c+d]=e},lu_decomp=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;for(f=0,g=0,h=0,i=0,g=tos-a*a,p1=one,f=j=0,k=a-1;0<=k?j<k:j>k;f=0<=k?++j:--j){if(equal(M(g,a,f,f),zero)){for(h=b=l=f+1,m=a;(l<=m?b<m:b>m)&&equal(M(g,a,h,f),zero);h=l<=m?++b:--b);if(h===a){p1=zero;break}for(i=c=n=f,o=a;n<=o?c<o:c>o;i=n<=o?++c:--c)p2=M(g,a,f,i),setM(g,a,f,i,M(g,a,h,i)),setM(g,a,h,i,p2);push(p1),negate(),p1=pop()}for(push(p1),push(M(g,a,f,f)),multiply(),p1=pop(),h=d=p=f+1,q=a;p<=q?d<q:d>q;h=p<=q?++d:--d)for(push(M(g,a,h,f)),push(M(g,a,f,f)),divide(),negate(),p2=pop(),setM(g,a,h,f,zero),i=e=r=f+1,s=a;r<=s?e<s:e>s;i=r<=s?++e:--e)push(M(g,a,f,i)),push(p2),multiply(),push(M(g,a,h,i)),add(),setM(g,a,h,i,pop())}return push(p1),push(M(g,a,a-1,a-1)),multiply(),p1=pop()},Eval_dirac=function(){return push(cadr(p1)),Eval(),dirac()},dirac=function(){return save(),ydirac(),restore()},ydirac=function(){return p1=pop(),isdouble(p1)?0===p1.d?void push_integer(1):void push_integer(0):isrational(p1)?MZERO(mmul(p1.q.a,p1.q.b))?void push_integer(1):void push_integer(0):car(p1)===symbol(POWER)?(push_symbol(DIRAC),push(cadr(p1)),void list(2)):isnegativeterm(p1)?(push_symbol(DIRAC),push(p1),negate(),void list(2)):((isnegativeterm(p1)||car(p1)===symbol(ADD)&&isnegativeterm(cadr(p1)))&&(push(p1),negate(),p1=pop()),push_symbol(DIRAC),push(p1),list(2))},divisors=function(){var a,b,c,d,e,f;for(b=0,a=0,c=0,save(),a=tos-1,divisors_onstack(),c=tos-a,f=stack.slice(a,a+c),f.sort(cmp_expr),stack=stack.slice(0,a).concat(f).concat(stack.slice(a+c)),p1=alloc_tensor(c),p1.tensor.ndim=1,p1.tensor.dim[0]=c,b=d=0,e=c;0<=e?d<e:d>e;b=0<=e?++d:--d)p1.tensor.elem[b]=stack[a+b];return tos=a,push(p1),restore()},divisors_onstack=function(){var a,b,c,d,e,f;if(a=0,b=0,c=0,d=0,save(),p1=pop(),a=tos,isnum(p1))push(p1),factor_small_number();else if(car(p1)===symbol(ADD))push(p1),__factor_add();else if(car(p1)===symbol(MULTIPLY))for(p1=cdr(p1),isnum(car(p1))&&(push(car(p1)),factor_small_number(),p1=cdr(p1));iscons(p1);)p2=car(p1),car(p2)===symbol(POWER)?(push(cadr(p2)),push(caddr(p2))):(push(p2),push(one)),p1=cdr(p1);else car(p1)===symbol(POWER)?(push(cadr(p1)),push(caddr(p1))):(push(p1),push(one));for(c=tos,push(one),gen(a,c),d=tos-c,b=e=0,f=d;0<=f?e<f:e>f;b=0<=f?++e:--e)stack[a+b]=stack[c+b];return tos=a+d,restore()},gen=function(a,b){var c,d,e,f;if(c=0,d=0,save(),p1=pop(),a===b)return push(p1),void restore();if(p2=stack[a+0],p3=stack[a+1],push(p3),c=pop_integer(),!isNaN(c))for(d=e=0,f=Math.abs(c);0<=f?e<=f:e>=f;d=0<=f?++e:--e)push(p1),push(p2),push_integer(sign(c)*d),power(),multiply(),gen(a+2,b);return restore()},__factor_add=function(){for(save(),p1=pop(),p3=cdr(p1),push(car(p3)),p3=cdr(p3);iscons(p3);)push(car(p3)),gcd(),p3=cdr(p3);if(p2=pop(),isplusone(p2))return push(p1),push(one),void restore();if(isnum(p2))push(p2),factor_small_number();else if(car(p2)===symbol(MULTIPLY))for(p3=cdr(p2),isnum(car(p3))?(push(car(p3)),factor_small_number()):(push(car(p3)),push(one)),p3=cdr(p3);iscons(p3);)push(car(p3)),push(one),p3=cdr(p3);else push(p2),push(one);for(push(p2),inverse(),p2=pop(),push(zero),p3=cdr(p1);iscons(p3);)push(p2),push(car(p3)),multiply(),add(),p3=cdr(p3);return push(one),restore()},dpow=function(){var a,b,c,d,e,f;return a=0,b=0,c=0,d=0,e=0,f=0,d=pop_double(),c=pop_double(),0===c&&d<0&&stop("divide by zero"),c>=0||d%1==0?(e=Math.pow(c,d),void push_double(e)):(e=Math.pow(Math.abs(c),d),f=Math.PI*d,d%.5==0?(a=0,b=Math.sin(f)):(a=Math.cos(f),b=Math.sin(f)),push_double(a*e),push_double(b*e),push(imaginaryunit),multiply(),add())},EIG_N=0,EIG_yydd=[],EIG_yyqq=[],Eval_eigen=function(){return 0===EIG_check_arg()&&stop("eigen: argument is not a square matrix"),eigen(EIGEN),p1=usr_symbol("D"),set_binding(p1,p2),p1=usr_symbol("Q"),set_binding(p1,p3),push(symbol(NIL))},Eval_eigenval=function(){return 0===EIG_check_arg()?(push_symbol(EIGENVAL),push(p1),void list(2)):(eigen(EIGENVAL),push(p2))},Eval_eigenvec=function(){return 0===EIG_check_arg()?(push_symbol(EIGENVEC),push(p1),void list(2)):(eigen(EIGENVEC),push(p3))},EIG_check_arg=function(){var a,b,c,d,e,f,g,h,i,j,k;if(d=0,e=0,push(cadr(p1)),Eval(),yyfloat(),Eval(),p1=pop(),!istensor(p1))return 0;for(2===p1.tensor.ndim&&p1.tensor.dim[0]===p1.tensor.dim[1]||stop("eigen: argument is not a square matrix"),EIG_N=p1.tensor.dim[0],d=f=0,g=EIG_N;0<=g?f<g:f>g;d=0<=g?++f:--f)for(e=a=0,h=EIG_N;0<=h?a<h:a>h;e=0<=h?++a:--a)isdouble(p1.tensor.elem[EIG_N*d+e])||stop("eigen: matrix is not numerical");for(d=b=0,i=EIG_N-1;0<=i?b<i:b>i;d=0<=i?++b:--b)for(e=c=j=d+1,k=EIG_N;j<=k?c<k:c>k;e=j<=k?++c:--c)Math.abs(p1.tensor.elem[EIG_N*d+e].d-p1.tensor.elem[EIG_N*e+d].d)>1e-10&&stop("eigen: matrix is not symmetrical");return 1},eigen=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y;for(k=0,l=0,k=m=0,n=EIG_N*EIG_N;0<=n?m<n:m>n;k=0<=n?++m:--m)EIG_yydd[k]=0;for(k=b=0,o=EIG_N*EIG_N;0<=o?b<o:b>o;k=0<=o?++b:--b)EIG_yyqq[k]=0;for(k=c=0,q=EIG_N;0<=q?c<q:c>q;k=0<=q?++c:--c)for(EIG_yydd[EIG_N*k+k]=p1.tensor.elem[EIG_N*k+k].d,l=d=r=k+1,s=EIG_N;r<=s?d<s:d>s;l=r<=s?++d:--d)EIG_yydd[EIG_N*k+l]=p1.tensor.elem[EIG_N*k+l].d,EIG_yydd[EIG_N*l+k]=p1.tensor.elem[EIG_N*k+l].d;for(k=e=0,t=EIG_N;0<=t?e<t:e>t;k=0<=t?++e:--e)for(EIG_yyqq[EIG_N*k+k]=1,l=f=u=k+1,v=EIG_N;u<=v?f<v:f>v;l=u<=v?++f:--f)EIG_yyqq[EIG_N*k+l]=0,EIG_yyqq[EIG_N*l+k]=0;for(k=g=0;g<100&&0!==step();k=++g);if(100===k&&printstr("\nnote: eigen did not converge\n"),a===EIGEN||a===EIGENVAL)for(push(p1),copy_tensor(),p2=pop(),k=h=0,w=EIG_N;0<=w?h<w:h>w;k=0<=w?++h:--h)for(l=i=0,x=EIG_N;0<=x?i<x:i>x;l=0<=x?++i:--i)push_double(EIG_yydd[EIG_N*k+l]),p2.tensor.elem[EIG_N*k+l]=pop();if(a===EIGEN||a===EIGENVEC){for(push(p1),copy_tensor(),p3=pop(),y=[],k=j=0,p=EIG_N;0<=p?j<p:j>p;k=0<=p?++j:--j)y.push(function(){var a,b,c;for(c=[],l=a=0,b=EIG_N;0<=b?a<b:a>b;l=0<=b?++a:--a)push_double(EIG_yyqq[EIG_N*k+l]),c.push(p3.tensor.elem[EIG_N*k+l]=pop());return c}());return y}},step=function(){var a,b,c,d,e,f,g,h;for(c=0,d=0,b=0,c=e=0,f=EIG_N-1;0<=f?e<f:e>f;c=0<=f?++e:--e)for(d=a=g=c+1,h=EIG_N;g<=h?a<h:a>h;d=g<=h?++a:--a)0!==EIG_yydd[EIG_N*c+d]&&(step2(c,d),b++);return b},step2=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o;for(g=0,n=0,o=0,e=0,f=0,l=0,m=0,o=.5*(EIG_yydd[EIG_N*a+a]-EIG_yydd[EIG_N*b+b])/EIG_yydd[EIG_N*a+b],n=1/(Math.abs(o)+Math.sqrt(o*o+1)),o<0&&(n=-n),e=1/Math.sqrt(n*n+1),l=n*e,g=h=0,i=EIG_N;0<=i?h<i:h>i;g=0<=i?++h:--h)f=EIG_yydd[EIG_N*a+g],m=EIG_yydd[EIG_N*b+g],EIG_yydd[EIG_N*a+g]=e*f+l*m,EIG_yydd[EIG_N*b+g]=e*m-l*f;for(g=c=0,j=EIG_N;0<=j?c<j:c>j;g=0<=j?++c:--c)f=EIG_yydd[EIG_N*g+a],m=EIG_yydd[EIG_N*g+b],EIG_yydd[EIG_N*g+a]=e*f+l*m,EIG_yydd[EIG_N*g+b]=e*m-l*f;for(g=d=0,k=EIG_N;0<=k?d<k:d>k;g=0<=k?++d:--d)f=EIG_yyqq[EIG_N*a+g],m=EIG_yyqq[EIG_N*b+g],EIG_yyqq[EIG_N*a+g]=e*f+l*m,EIG_yyqq[EIG_N*b+g]=e*m-l*f;return EIG_yydd[EIG_N*a+b]=0,EIG_yydd[EIG_N*b+a]=0},Eval_erf=function(){return push(cadr(p1)),Eval(),yerf()},yerf=function(){return save(),yyerf(),restore()},yyerf=function(){var a;return a=0,p1=pop(),isdouble(p1)?(a=1-erfc(p1.d),void push_double(a)):isnegativeterm(p1)?(push_symbol(ERF),push(p1),negate(),list(2),void negate()):(push_symbol(ERF),push(p1),void list(2))},Eval_erfc=function(){return push(cadr(p1)),Eval(),yerfc()},yerfc=function(){return save(),yyerfc(),restore()},yyerfc=function(){var a;if(a=0,p1=pop(),isdouble(p1))return a=erfc(p1.d),void push_double(a);push_symbol(ERFC),push(p1),list(2)},erfc=function(a){var b,c,d;return c=0,d=0,b=0,d=Math.abs(a),c=1/(1+.5*d),b=c*Math.exp(-d*d-1.26551223+c*(1.00002368+c*(.37409196+c*(.09678418+c*(c*(.27886807+c*(c*(1.48851587+c*(.17087277*c-.82215223))-1.13520398))-.18628806))))),a>=0?b:2-b},Eval=function(){var a;switch(check_esc_flag(),save(),p1=pop(),!evaluatingAsFloats&&isfloating(p1)&&(a=!0,evaluatingAsFloats++),p1.k){case CONS:Eval_cons();break;case NUM:evaluatingAsFloats?push_double(convert_rational_to_double(p1)):push(p1);break;case DOUBLE:case STR:push(p1);break;case TENSOR:Eval_tensor();break;case SYM:Eval_sym();break;default:stop("atom?")}return a&&evaluatingAsFloats--,restore()},Eval_sym=function(){var a,b,c,d,e,f;if(iskeyword(p1))return push(p1),push(symbol(LAST)),list(2),void Eval();if(p1===symbol(PI)&&evaluatingAsFloats)return void push_double(Math.PI);if(p2=get_binding(p1),DEBUG&&console.log("looked up: "+p1+" which contains: "+p2),push(p2),p1!==p2){if(-1!==(d=chainOfUserSymbolsNotFunctionsBeingEvaluated.indexOf(p1))){for(a="",b=c=e=d,f=chainOfUserSymbolsNotFunctionsBeingEvaluated.length;e<=f?c<f:c>f;b=e<=f?++c:--c)a+=chainOfUserSymbolsNotFunctionsBeingEvaluated[b].printname+" -> ";return a+=p1.printname,void stop("recursive evaluation of symbols: "+a)}return chainOfUserSymbolsNotFunctionsBeingEvaluated.push(p1),Eval(),chainOfUserSymbolsNotFunctionsBeingEvaluated.pop()}},Eval_cons=function(){var a;if(a=car(p1),car(a)===symbol(EVAL))return void Eval_user_function();switch(issymbol(a)||stop("cons?"),symnum(a)){case ABS:return Eval_abs();case ADD:return Eval_add();case ADJ:return Eval_adj();case AND:return Eval_and();case ARCCOS:return Eval_arccos();case ARCCOSH:return Eval_arccosh();case ARCSIN:return Eval_arcsin();case ARCSINH:return Eval_arcsinh();case ARCTAN:return Eval_arctan();case ARCTANH:return Eval_arctanh();case ARG:return Eval_arg();case ATOMIZE:return Eval_atomize();case BESSELJ:return Eval_besselj();case BESSELY:return Eval_bessely();case BINDING:return Eval_binding();case BINOMIAL:return Eval_binomial();case CEILING:return Eval_ceiling();case CHECK:return Eval_check();case CHOOSE:return Eval_choose();case CIRCEXP:return Eval_circexp();case CLEAR:return Eval_clear();case CLEARALL:return Eval_clearall();case CLEARPATTERNS:return Eval_clearpatterns();case CLOCK:return Eval_clock();case COEFF:return Eval_coeff();case COFACTOR:return Eval_cofactor();case CONDENSE:return Eval_condense();case CONJ:return Eval_conj();case CONTRACT:return Eval_contract();case COS:return Eval_cos();case COSH:return Eval_cosh();case DECOMP:return Eval_decomp();case DEGREE:return Eval_degree();case DEFINT:return Eval_defint();case DENOMINATOR:return Eval_denominator();case DERIVATIVE:return Eval_derivative();case DET:return Eval_det();case DIM:return Eval_dim();case DIRAC:return Eval_dirac();case DIVISORS:return Eval_divisors();case DO:return Eval_do();case DOT:return Eval_inner();case DRAW:return Eval_draw();case DSOLVE:return Eval_dsolve();case EIGEN:return Eval_eigen();case EIGENVAL:return Eval_eigenval();case EIGENVEC:return Eval_eigenvec();case ERF:return Eval_erf();case ERFC:return Eval_erfc();case EVAL:return Eval_Eval();case EXP:return Eval_exp();case EXPAND:return Eval_expand();case EXPCOS:return Eval_expcos();case EXPSIN:return Eval_expsin();case FACTOR:return Eval_factor();case FACTORIAL:return Eval_factorial();case FACTORPOLY:return Eval_factorpoly();case FILTER:return Eval_filter();case FLOATF:return Eval_float();case APPROXRATIO:return Eval_approxratio();case FLOOR:return Eval_floor();case FOR:return Eval_for();case FUNCTION:return Eval_function_reference();case GAMMA:return Eval_gamma();case GCD:return Eval_gcd();case HERMITE:return Eval_hermite();case HILBERT:return Eval_hilbert();case IMAG:return Eval_imag();case INDEX:return Eval_index();case INNER:return Eval_inner();case INTEGRAL:return Eval_integral();case INV:return Eval_inv();case INVG:return Eval_invg();case ISINTEGER:return Eval_isinteger();case ISPRIME:return Eval_isprime();case LAGUERRE:return Eval_laguerre();case LCM:return Eval_lcm();case LEADING:return Eval_leading();case LEGENDRE:return Eval_legendre();case LOG:return Eval_log();case LOOKUP:return Eval_lookup();case MOD:return Eval_mod();case MULTIPLY:return Eval_multiply();case NOT:return Eval_not();case NROOTS:return Eval_nroots();case NUMBER:return Eval_number();case NUMERATOR:return Eval_numerator();case OPERATOR:return Eval_operator();case OR:return Eval_or();case OUTER:return Eval_outer();case PATTERN:return Eval_pattern();case PATTERNSINFO:return Eval_patternsinfo();case POLAR:return Eval_polar();case POWER:return Eval_power();case PRIME:return Eval_prime();case PRINT:return Eval_print();case PRINT2DASCII:return Eval_print2dascii();case PRINTFULL:return Eval_printfull();case PRINTLATEX:return Eval_printlatex();case PRINTLIST:return Eval_printlist();case PRINTPLAIN:return Eval_printplain();case PRODUCT:return Eval_product();case QUOTE:return Eval_quote();case QUOTIENT:return Eval_quotient();case RANK:return Eval_rank();case RATIONALIZE:return Eval_rationalize();case REAL:return Eval_real();case YYRECT:return Eval_rect();case ROOTS:return Eval_roots();case SETQ:return Eval_setq();case SGN:return Eval_sgn();case SILENTPATTERN:return Eval_silentpattern();case SIMPLIFY:return Eval_simplify();case SIN:return Eval_sin();case SINH:return Eval_sinh();case SHAPE:return Eval_shape();case SQRT:return Eval_sqrt();case STOP:return Eval_stop();case SUBST:return Eval_subst();case SUM:return Eval_sum();case SYMBOLSINFO:return Eval_symbolsinfo();case TAN:return Eval_tan();case TANH:return Eval_tanh();case TAYLOR:return Eval_taylor();case TEST:return Eval_test();case TESTEQ:return Eval_testeq();case TESTGE:return Eval_testge();case TESTGT:return Eval_testgt();case TESTLE:return Eval_testle();case TESTLT:return Eval_testlt();case TRANSPOSE:return Eval_transpose();case UNIT:return Eval_unit();case ZERO:return Eval_zero();default:return Eval_user_function()}},Eval_binding=function(){return push(get_binding(cadr(p1)))},Eval_check=function(){return push(cadr(p1)),Eval_predicate(),p1=pop(),push(p1)},Eval_det=function(){return push(cadr(p1)),Eval(),det()},Eval_dim=function(){var a;return push(cadr(p1)),Eval(),p2=pop(),iscons(cddr(p1))?(push(caddr(p1)),Eval(),a=pop_integer()):a=1,istensor(p2)?a<1||a>p2.tensor.ndim?push(p1):push_integer(p2.tensor.dim[a-1]):push_integer(1)},Eval_divisors=function(){return push(cadr(p1)),Eval(),divisors()},Eval_do=function(){var a;for(push(car(p1)),p1=cdr(p1),a=[];iscons(p1);)pop(),push(car(p1)),Eval(),a.push(p1=cdr(p1));return a},Eval_dsolve=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),dsolve()},Eval_Eval=function(){for(push(cadr(p1)),Eval(),p1=cddr(p1);iscons(p1);)push(car(p1)),Eval(),push(cadr(p1)),Eval(),subst(),p1=cddr(p1);return Eval()},Eval_exp=function(){return push(cadr(p1)),Eval(),exponential()},Eval_factorial=function(){return push(cadr(p1)),Eval(),factorial()},Eval_factorpoly=function(){var a;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),push(car(p1)),Eval(),factorpoly(),p1=cdr(p1),a=[];iscons(p1);)push(car(p1)),Eval(),factorpoly(),a.push(p1=cdr(p1));return a},Eval_hermite=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),hermite()},Eval_hilbert=function(){return push(cadr(p1)),Eval(),hilbert()},Eval_index=function(){var a;for(a=tos,p1=cdr(p1);iscons(p1);)push(car(p1)),Eval(),p1=cdr(p1);return index_function(tos-a)},Eval_inv=function(){return push(cadr(p1)),Eval(),inv()},Eval_invg=function(){return push(cadr(p1)),Eval(),invg()},Eval_isinteger=function(){var a;return push(cadr(p1)),Eval(),p1=pop(),isrational(p1)?void push(isinteger(p1)?one:zero):isdouble(p1)?(a=Math.floor(p1.d),void push(a===p1.d?one:zero)):(push_symbol(ISINTEGER),push(p1),list(2))},Eval_number=function(){return push(cadr(p1)),Eval(),p1=pop(),push_integer(p1.k===NUM||p1.k===DOUBLE?1:0)},Eval_operator=function(){var a;for(a=tos,push_symbol(OPERATOR),p1=cdr(p1);iscons(p1);)push(car(p1)),Eval(),p1=cdr(p1);return list(tos-a)},Eval_quote=function(){return push(cadr(p1))},Eval_rank=function(){return push(cadr(p1)),Eval(),p1=pop(),istensor(p1)?push_integer(p1.tensor.ndim):push(zero)},Eval_setq=function(){return caadr(p1)===symbol(INDEX)?void setq_indexed():iscons(cadr(p1))?void define_user_function():(issymbol(cadr(p1))||stop("symbol assignment: error in symbol"),push(caddr(p1)),Eval(),p2=pop(),set_binding(cadr(p1),p2),push(symbol(NIL)))},setq_indexed=function(){var a;for(p4=cadadr(p1),issymbol(p4)||stop("indexed assignment: error in symbol"),a=tos,push(caddr(p1)),Eval(),p2=cdadr(p1);iscons(p2);)push(car(p2)),Eval(),p2=cdr(p2);return set_component(tos-a),p3=pop(),set_binding(p4,p3),push(symbol(NIL))},Eval_sqrt=function(){return push(cadr(p1)),Eval(),push_rational(1,2),power()},Eval_stop=function(){return stop("user stop")},Eval_subst=function(){return push(cadddr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadr(p1)),Eval(),subst(),Eval()},Eval_unit=function(){var a,b,c,d;if(a=0,b=0,push(cadr(p1)),Eval(),(b=pop_integer())<2)return void push(p1);for(p1=alloc_tensor(b*b),p1.tensor.ndim=2,p1.tensor.dim[0]=b,p1.tensor.dim[1]=b,a=c=0,d=b;0<=d?c<d:c>d;a=0<=d?++c:--c)p1.tensor.elem[b*a+a]=one;return check_tensor_dimensions(p1),push(p1)},Eval_noexpand=function(){var a;return a=expanding,expanding=0,Eval(),expanding=a},Eval_predicate=function(){return save(),p1=pop(),car(p1)===symbol(SETQ)?Eval_testeq():(push(p1),Eval()),restore()},Eval_expand=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),p2=pop(),p2===symbol(NIL)?guess():push(p2),expand()},expand=function(){var a;if(save(),p9=pop(),p5=pop(),istensor(p5))return expand_tensor(),void restore();if(car(p5)===symbol(ADD)){for(push_integer(0),p1=cdr(p5);iscons(p1);)push(car(p1)),push(p9),expand(),add(),p1=cdr(p1);return void restore()}return push(p5),numerator(),p3=pop(),push(p5),denominator(),p2=pop(),remove_negative_exponents(),push(p3),push(p2),push(p9),!isone(p3)&&!isone(p2)||ispoly(p2,p9)&&!isone(p2)?(divpoly(),p7=pop(),push(p3),push(p2),push(p7),multiply(),subtract(),p3=pop(),iszero(p3)?(push(p7),void restore()):(push(p2),push(p9),factorpoly(),p2=pop(),expand_get_C(),expand_get_B(),expand_get_A(),istensor(p4)?(push(p4),a=expanding,expanding=1,inv(),expanding=a,push(p3),inner(),push(p2),inner()):(push(p3),push(p4),a=expanding,expanding=1,divide(),expanding=a,push(p2),multiply()),push(p7),add(),restore())):(pop(),pop(),pop(),push(p5),void restore())},expand_tensor=function(){var a,b,c;for(a=0,push(p5),copy_tensor(),p5=pop(),a=b=0,c=p5.tensor.nelem;0<=c?b<c:b>c;a=0<=c?++b:--b)push(p5.tensor.elem[a]),push(p9),expand(),p5.tensor.elem[a]=pop();return push(p5)},remove_negative_exponents=function(){var a,b,c,d,e,f,g;for(a=0,b=0,c=0,d=0,e=0,a=tos,factors(p2),factors(p3),e=tos-a,c=0,b=f=0,g=e;0<=g?f<g:f>g;b=0<=g?++f:--f)p1=stack[a+b],car(p1)===symbol(POWER)&&cadr(p1)===p9&&(push(caddr(p1)),d=pop_integer(),isNaN(d)||d<c&&(c=d));if(tos=a,0!==c)return push(p2),push(p9),push_integer(-c),power(),multiply(),p2=pop(),push(p3),push(p9),push_integer(-c),power(),multiply(),p3=pop()},expand_get_C=function(){var a,b,c,d,e,f,g,h,i,j;if(c=0,d=0,e=0,f=0,c=tos,car(p2)===symbol(MULTIPLY))for(p1=cdr(p2);iscons(p1);)p5=car(p1),expand_get_CF(),p1=cdr(p1);else p5=p2,expand_get_CF();if(1===(f=tos-c))return void(p4=pop());for(p4=alloc_tensor(f*f),p4.tensor.ndim=2,p4.tensor.dim[0]=f,p4.tensor.dim[1]=f,a=c,d=g=0,i=f;0<=i?g<i:g>i;d=0<=i?++g:--g)for(e=b=0,j=f;0<=j?b<j:b>j;e=0<=j?++b:--b)push(stack[a+e]),push(p9),push_integer(d),power(),h=expanding,expanding=1,divide(),expanding=h,push(p9),filter(),p4.tensor.elem[f*d+e]=pop();return tos-=f},expand_get_CF=function(){var a,b,c,d,e,f,g,h;if(a=0,b=0,c=0,d=0,Find(p5,p9)){for(f=expanding,expanding=1,trivial_divide(),expanding=f,car(p5)===symbol(POWER)?(push(caddr(p5)),d=pop_integer(),p6=cadr(p5)):(d=1,p6=p5),push(p6),push(p9),degree(),a=pop_integer(),h=[],b=e=0,g=d;0<=g?e<g:e>g;b=0<=g?++e:--e)h.push(function(){var d,e,g;for(g=[],c=d=0,e=a;0<=e?d<e:d>e;c=0<=e?++d:--d)push(p8),push(p6),push_integer(b),power(),f=expanding,expanding=1,multiply(),expanding=f,push(p9),push_integer(c),power(),f=expanding,expanding=1,multiply(),g.push(expanding=f);return g}());return h}},trivial_divide=function(){var a;if(a=0,car(p2)===symbol(MULTIPLY)){for(a=tos,p0=cdr(p2);iscons(p0);)equal(car(p0),p5)||(push(car(p0)),Eval()),p0=cdr(p0);multiply_all(tos-a)}else push_integer(1);return p8=pop()},expand_get_B=function(){var a,b,c,d,e;if(a=0,b=0,istensor(p4)){for(b=p4.tensor.dim[0],p8=alloc_tensor(b),p8.tensor.ndim=1,p8.tensor.dim[0]=b,a=c=0,e=b;0<=e?c<e:c>e;a=0<=e?++c:--c)push(p3),push(p9),push_integer(a),power(),d=expanding,expanding=1,divide(),expanding=d,push(p9),filter(),p8.tensor.elem[a]=pop();return p3=p8}},expand_get_A=function(){var a,b,c,d,e;if(a=0,b=0,c=0,!istensor(p4))return push(p2),reciprocate(),void(p2=pop());if(a=tos,car(p2)===symbol(MULTIPLY))for(p8=cdr(p2);iscons(p8);)p5=car(p8),expand_get_AF(),p8=cdr(p8);else p5=p2,expand_get_AF();for(c=tos-a,p8=alloc_tensor(c),p8.tensor.ndim=1,p8.tensor.dim[0]=c,b=d=0,e=c;0<=e?d<e:d>e;b=0<=e?++d:--d)p8.tensor.elem[b]=stack[a+b];return tos=a,p2=p8},expand_get_AF=function(){var a,b,c,d,e,f,g;if(a=0,b=0,c=0,d=1,Find(p5,p9)){for(car(p5)===symbol(POWER)&&(push(caddr(p5)),d=pop_integer(),p5=cadr(p5)),push(p5),push(p9),degree(),a=pop_integer(),g=[],b=e=f=d;f<=0?e<0:e>0;b=f<=0?++e:--e)g.push(function(){var d,e,f;for(f=[],c=d=0,e=a;0<=e?d<e:d>e;c=0<=e?++d:--d)push(p5),push_integer(b),power(),reciprocate(),push(p9),push_integer(c),power(),f.push(multiply());return f}());return g}},Eval_expcos=function(){return push(cadr(p1)),Eval(),expcos()},expcos=function(){return save(),p1=pop(),push(imaginaryunit),push(p1),multiply(),exponential(),push_rational(1,2),multiply(),push(imaginaryunit),negate(),push(p1),multiply(),exponential(),push_rational(1,2),multiply(),add(),restore()},Eval_expsin=function(){return push(cadr(p1)),Eval(),expsin()},expsin=function(){return save(),p1=pop(),push(imaginaryunit),push(p1),multiply(),exponential(),push(imaginaryunit),divide(),push_rational(1,2),multiply(),push(imaginaryunit),negate(),push(p1),multiply(),exponential(),push(imaginaryunit),divide(),push_rational(1,2),multiply(),subtract(),restore()},Eval_factor=function(){var a;for(push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),p2=pop(),p2===symbol(NIL)?guess():push(p2),factor(),p1=cdddr(p1),a=[];iscons(p1);)push(car(p1)),Eval(),factor_again(),a.push(p1=cdr(p1));return a},factor_again=function(){var a,b;if(save(),p2=pop(),p1=pop(),a=tos,car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),factor_term(),p1=cdr(p1);else push(p1),push(p2),factor_term();return b=tos-a,b>1&&multiply_all_noexpand(b),restore()},factor_term=function(){if(save(),factorpoly(),p1=pop(),car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),p1=cdr(p1);else push(p1);return restore()},factor=function(){return save(),p2=pop(),p1=pop(),isinteger(p1)?(push(p1),factor_number()):(push(p1),push(p2),factorpoly()),restore()},factor_small_number=function(){var a,b,c,d,e,f;for(c=0,save(),d=pop_integer(),isNaN(d)&&stop("number too big to factor"),d<0&&(d=-d),c=e=0,f=MAXPRIMETAB;(0<=f?e<f:e>f)&&!((a=primetab[c])>d/a);c=0<=f?++e:--e){for(b=0;d%a==0;)d/=a,b++;b&&(push_integer(a),push_integer(b))}return d>1&&(push_integer(d),push_integer(1)),restore()},factorial=function(){var a;return a=0,save(),p1=pop(),push(p1),(a=pop_integer())<0||isNaN(a)?(push_symbol(FACTORIAL),push(p1),list(2),void restore()):(bignum_factorial(a),restore())},simplifyfactorials=function(){var a;if(a=0,save(),a=expanding,expanding=0,p1=pop(),car(p1)===symbol(ADD)){for(push(zero),p1=cdr(p1);iscons(p1);)push(car(p1)),simplifyfactorials(),add(),p1=cdr(p1);return expanding=a,void restore()}return car(p1)===symbol(MULTIPLY)?(sfac_product(),expanding=a,void restore()):(push(p1),expanding=a,restore())},sfac_product=function(){var a,b,c,d,e,f,g,h,i,j,k;for(c=0,d=0,e=0,k=tos,p1=cdr(p1),e=0;iscons(p1);)push(car(p1)),p1=cdr(p1),e++;for(c=f=0,g=e-1;0<=g?f<g:f>g;c=0<=g?++f:--f)if(stack[k+c]!==symbol(NIL))for(d=a=h=c+1,i=e;h<=i?a<i:a>i;d=h<=i?++a:--a)stack[k+d]!==symbol(NIL)&&sfac_product_f(k,c,d);for(push(one),c=b=0,j=e;0<=j?b<j:b>j;c=0<=j?++b:--b)stack[k+c]!==symbol(NIL)&&(push(stack[k+c]),multiply());return p1=pop(),tos-=e,push(p1)},sfac_product_f=function(a,b,c){var d,e,f,g;if(d=0,e=0,p1=stack[a+b],p2=stack[a+c],ispower(p1)?(p3=caddr(p1),p1=cadr(p1)):p3=one,ispower(p2)?(p4=caddr(p2),p2=cadr(p2)):p4=one,isfactorial(p1)&&isfactorial(p2)){if(push(p3),push(p4),add(),yyexpand(),0!==(e=pop_integer()))return;if(push(cadr(p1)),push(cadr(p2)),subtract(),yyexpand(),0===(e=pop_integer())||isNaN(e))return;for(e<0&&(e=-e,p5=p1,p1=p2,p2=p5,p5=p3,p3=p4,p4=p5),push(one),d=f=1,g=e;1<=g?f<=g:f>=g;d=1<=g?++f:--f)push(cadr(p2)),push_integer(d),add(),push(p3),power(),multiply();return stack[a+b]=pop(),stack[a+c]=symbol(NIL)}},polycoeff=0,factpoly_expo=0,factorpoly=function(){return save(),p2=pop(),p1=pop(),Find(p1,p2)&&ispoly(p1,p2)&&issymbol(p2)?(push(p1),push(p2),yyfactorpoly(),restore()):(push(p1),void restore())},yyfactorpoly=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r;for(h=0,i=0,save(),p2=pop(),p1=pop(),h=tos,isfloating(p1)&&stop("floating point numbers in polynomial"),polycoeff=tos,push(p1),push(p2),factpoly_expo=coeff()-1,rationalize_coefficients(h),r="real",q=null;factpoly_expo>0;)if(iszero(stack[polycoeff+0])?(push_integer(1),p4=pop(),push_integer(0),p5=pop()):"real"===r?g=get_factor_from_real_root():"complex"===r&&(f=get_factor_from_complex_root(q)),"real"===r){if(0===g){r="complex";continue}for(push(p4),push(p2),multiply(),push(p5),add(),p8=pop(),DEBUG&&console.log("success\nFACTOR="+p8),push(p7),push(p8),multiply_noexpand(),p7=pop(),yydivpoly();factpoly_expo&&iszero(stack[polycoeff+factpoly_expo]);)factpoly_expo--;for(push(zero),i=j=0,m=factpoly_expo;0<=m?j<=m:j>=m;i=0<=m?++j:--j)push(stack[polycoeff+i]),push(p2),push_integer(i),power(),multiply(),add();q=pop()}else if("complex"===r){if(0===f)break;if(push(p4),push(p2),subtract(),push(p4),conjugate(),push(p2),subtract(),multiply(),p8=pop(),DEBUG&&console.log("success\nFACTOR="+p8),push(p7),l=pop(),push(p7),push(p8),multiply_noexpand(),p7=pop(),null==q){for(push(zero),i=a=0,n=factpoly_expo;0<=n?a<=n:a>=n;i=0<=n?++a:--a)push(stack[polycoeff+i]),push(p2),push_integer(i),power(),multiply(),add();q=pop()}if(e=q,push(e),push(p8),push(p2),divpoly(),q=pop(),push(q),push(p8),multiply(),d=pop(),!equal(d,e))return DEBUG&&console.log("we found a polynomial based on complex root and its conj but it doesn't divide the poly, quitting"),DEBUG&&console.log("so just returning previousFactorisation times dividend: "+l+" * "+e),push(l),push(e),k=expanding,expanding=0,yycondense(),expanding=k,multiply_noexpand(),p7=pop(),stack[h]=p7,tos=h+1,void restore();for(i=b=0,o=factpoly_expo;0<=o?b<=o:b>=o;i=0<=o?++b:--b)pop();push(q),push(p2),coeff(),factpoly_expo-=2}for(push(zero),i=c=0,p=factpoly_expo;0<=p?c<=p:c>=p;i=0<=p?++c:--c)push(stack[polycoeff+i]),push(p2),push_integer(i),power(),multiply(),add();return p1=pop(),DEBUG&&console.log("POLY="+p1),push(p1),k=expanding,expanding=0,yycondense(),expanding=k,p1=pop(),factpoly_expo>0&&isnegativeterm(stack[polycoeff+factpoly_expo])&&(push(p1),negate(),p1=pop(),push(p7),negate_noexpand(),p7=pop()),push(p7),push(p1),multiply_noexpand(),p7=pop(),DEBUG&&console.log("RESULT="+p7),stack[h]=p7,tos=h+1,restore()},rationalize_coefficients=function(a){var b,c,d,e,f,g,h;for(c=0,p7=one,c=d=e=a,f=tos;e<=f?d<f:d>f;c=e<=f?++d:--d)push(stack[c]),denominator(),push(p7),lcm(),p7=pop();for(c=b=g=a,h=tos;g<=h?b<h:b>h;c=g<=h?++b:--b)push(p7),push(stack[c]),multiply(),stack[c]=pop();if(push(p7),reciprocate(),p7=pop(),DEBUG)return console.log("rationalize_coefficients result")},get_factor_from_real_root=function(){var a,b,c,d,e,f,g,h,j,k,l,m,n,o,p,q,r,s;if(h=0,0,g=0,a=0,f=0,j=0,k=0,DEBUG){for(push(zero),h=l=0,m=factpoly_expo;0<=m?l<=m:l>=m;h=0<=m?++l:--l)push(stack[polycoeff+h]),push(p2),push_integer(h),power(),multiply(),add();p1=pop(),console.log("POLY="+p1)}if(g=tos,f=tos,push(stack[polycoeff+factpoly_expo]),divisors_onstack(),k=tos-f,a=tos,push(stack[polycoeff+0]),divisors_onstack(),j=tos-a,DEBUG){for(console.log("divisors of base term"),h=b=0,n=j;0<=n?b<n:b>n;h=0<=n?++b:--b)console.log(", "+stack[a+h]);for(console.log("divisors of leading term"),h=c=0,o=k;0<=o?c<o:c>o;h=0<=o?++c:--c)console.log(", "+stack[f+h])}for(r=d=0,p=k;0<=p?d<p:d>p;r=0<=p?++d:--d)for(s=e=0,q=j;0<=q?e<q:e>q;s=0<=q?++e:--e){if(p4=stack[f+r],p5=stack[a+s],push(p5),push(p4),divide(),negate(),p3=pop(),Evalpoly(),DEBUG&&(console.log("try A="+p4),console.log(", B="+p5),console.log(", root "+p2),console.log("=-B/A="+p3),console.log(", POLY("+p3),console.log(")="+p6)),iszero(p6))return tos=g,DEBUG&&console.log("get_factor_from_real_root returning 1"),1;if(push(p5),negate(),p5=pop(),push(p3),negate(),p3=pop(),Evalpoly(),DEBUG&&(console.log("try A="+p4),console.log(", B="+p5),console.log(", root "+p2),console.log("=-B/A="+p3),console.log(", POLY("+p3),console.log(")="+p6)),iszero(p6))return tos=g,DEBUG&&console.log("get_factor_from_real_root returning 1"),1}return tos=g,DEBUG&&console.log("get_factor_from_real_root returning 0"),0},get_factor_from_complex_root=function(a){var c,e,j,k,l;if(0,0,e=0,0,0,0,0,factpoly_expo<=2)return DEBUG&&console.log("no more factoring via complex roots to be found in polynomial of degree <= 2"),0;if(p1=a,DEBUG&&console.log("complex root finding for POLY="+p1),e=tos,tos,push_integer(-1),push_rational(2,3),power(),rect(),p4=pop(),DEBUG&&console.log("complex root finding: trying with "+p4),push(p4),p3=pop(),push(p3),Evalpoly(),DEBUG&&console.log("complex root finding result: "+p6),iszero(p6))return tos=e,DEBUG&&console.log("get_factor_from_complex_root returning 1"),1;if(push_integer(1),push_rational(2,3),power(),rect(),p4=pop(),DEBUG&&console.log("complex root finding: trying with "+p4),push(p4),p3=pop(),push(p3),Evalpoly(),DEBUG&&console.log("complex root finding result: "+p6),iszero(p6))return tos=e,DEBUG&&console.log("get_factor_from_complex_root returning 1"),1;for(k=j=-10;j<=10;k=++j)for(l=c=1;c<=5;l=++c)if(push_integer(k),push_integer(l),push(imaginaryunit),multiply(),add(),rect(),p4=pop(),push(p4),p3=pop(),push(p3),Evalpoly(),iszero(p6))return tos=e,DEBUG&&console.log("found complex root: "+p6),1;return tos=e,DEBUG&&console.log("get_factor_from_complex_root returning 0"),0},yydivpoly=function(){var a,b,c;for(a=0,p6=zero,a=b=c=factpoly_expo;c<=0?b<0:b>0;a=c<=0?++b:--b)push(stack[polycoeff+a]),stack[polycoeff+a]=p6,push(p4),divide(),p6=pop(),push(stack[polycoeff+a-1]),push(p6),push(p5),multiply(),subtract(),stack[polycoeff+a-1]=pop();if(stack[polycoeff+0]=p6,DEBUG)return console.log("yydivpoly Q:")},Evalpoly=function(){var a,b,c;for(a=0,push(zero),a=b=c=factpoly_expo;c<=0?b<=0:b>=0;a=c<=0?++b:--b)push(p3),multiply(),push(stack[polycoeff+a]),DEBUG&&(console.log("Evalpoly top of stack:"),console.log(print_list(stack[tos-a]))),add();return p6=pop()},factors=function(a){var b;if(b=tos,car(a)===symbol(ADD))for(a=cdr(a);iscons(a);)push_term_factors(car(a)),a=cdr(a);else push_term_factors(a);return tos-b},push_term_factors=function(a){var b;if(car(a)===symbol(MULTIPLY)){for(a=cdr(a),b=[];iscons(a);)push(car(a)),b.push(a=cdr(a));return b}return push(a)},Eval_filter=function(){var a;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),a=[];iscons(p1);)push(car(p1)),Eval(),filter(),a.push(p1=cdr(p1));return a},filter=function(){return save(),p2=pop(),p1=pop(),filter_main(),restore()},filter_main=function(){return car(p1)===symbol(ADD)?filter_sum():istensor(p1)?filter_tensor():Find(p1,p2)?push_integer(0):push(p1)},filter_sum=function(){var a;for(push_integer(0),p1=cdr(p1),a=[];iscons(p1);)push(car(p1)),push(p2),filter(),add(),a.push(p1=cdr(p1));return a},filter_tensor=function(){var a,b,c,d,e,f;for(b=0,c=0,c=p1.tensor.nelem,p3=alloc_tensor(c),p3.tensor.ndim=p1.tensor.ndim,b=d=0,e=p1.tensor.ndim;0<=e?d<e:d>e;b=0<=e?++d:--d)p3.tensor.dim[b]=p1.tensor.dim[b];for(b=a=0,f=c;0<=f?a<f:a>f;b=0<=f?++a:--a)push(p1.tensor.elem[b]),push(p2),filter(),p3.tensor.elem[b]=pop();return push(p3)},Eval_float=function(){return evaluatingAsFloats++,push(cadr(p1)),Eval(),yyfloat(),Eval(),evaluatingAsFloats--},checkFloatHasWorkedOutCompletely=function(a){var b,c,d,e,f;if(e=countOccurrencesOfSymbol(symbol(POWER),a),d=countOccurrencesOfSymbol(symbol(PI),a),b=countOccurrencesOfSymbol(symbol(E),a),c=countOccurrencesOfSymbol(symbol(MULTIPLY),a),f=countOccurrencesOfSymbol(symbol(ADD),a),DEBUG&&(console.log("     ... numberOfPowers: "+e),console.log("     ... numberOfPIs: "+d),console.log("     ... numberOfEs: "+b),console.log("     ... numberOfMults: "+c),console.log("     ... numberOfSums: "+f)),e>1||d>0||b>0||c>1||f>1)return stop("float: some unevalued parts in "+a)},zzfloat=function(){return save(),evaluatingAsFloats++,Eval(),yyfloat(),Eval(),evaluatingAsFloats--,restore()},yyfloat=function(){var a,b,c,d;if(b=0,a=0,evaluatingAsFloats++,save(),p1=pop(),iscons(p1)){for(a=tos;iscons(p1);)push(car(p1)),yyfloat(),p1=cdr(p1);list(tos-a)}else if(p1.k===TENSOR){for(push(p1),copy_tensor(),p1=pop(),b=c=0,d=p1.tensor.nelem;0<=d?c<d:c>d;b=0<=d?++c:--c)push(p1.tensor.elem[b]),yyfloat(),p1.tensor.elem[b]=pop();push(p1)}else p1.k===NUM?(push(p1),bignum_float()):p1===symbol(PI)?push_double(Math.PI):p1===symbol(E)?push_double(Math.E):push(p1);return restore(),evaluatingAsFloats--},Eval_floor=function(){return push(cadr(p1)),Eval(),yfloor()},yfloor=function(){return save(),yyfloor(),restore()},yyfloor=function(){var a;return a=0,p1=pop(),isnum(p1)?isdouble(p1)?(a=Math.floor(p1.d),void push_double(a)):isinteger(p1)?void push(p1):(p3=new U,p3.k=NUM,p3.q.a=mdiv(p1.q.a,p1.q.b),p3.q.b=mint(1),push(p3),isnegativenumber(p1)?(push_integer(-1),add()):void 0):(push_symbol(FLOOR),push(p1),void list(2))},Eval_for=function(){var a,b,c,d,e,f;for(a=0,b=0,c=0,p6=cadr(p1),issymbol(p6)||stop("for: 1st arg?"),push(caddr(p1)),Eval(),b=pop_integer(),isNaN(b)&&stop("for: 2nd arg?"),push(cadddr(p1)),Eval(),c=pop_integer(),isNaN(c)&&stop("for: 3rd arg?"),p1=cddddr(p1),p4=get_binding(p6),a=d=e=b,f=c;e<=f?d<=f:d>=f;a=e<=f?++d:--d)for(push_integer(a),p5=pop(),set_binding(p6,p5),p2=p1;iscons(p2);)push(car(p2)),Eval(),pop(),p2=cdr(p2);return set_binding(p6,p4),push_symbol(NIL)},Eval_gamma=function(){return push(cadr(p1)),Eval(),gamma()},gamma=function(){return save(),gammaf(),restore()},gammaf=function(){return p1=pop(),isrational(p1)&&MEQUAL(p1.q.a,1)&&MEQUAL(p1.q.b,2)?(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_rational(1,2),void power()):isrational(p1)&&MEQUAL(p1.q.a,3)&&MEQUAL(p1.q.b,2)?(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_rational(1,2),power(),push_rational(1,2),void multiply()):isnegativeterm(p1)?(evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push_integer(-1),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),push(p1),multiply(),sine(),push(p1),multiply(),push(p1),negate(),gamma(),multiply(),void divide()):car(p1)===symbol(ADD)?void gamma_of_sum():(push_symbol(GAMMA),push(p1),void list(2))},gamma_of_sum=function(){return p3=cdr(p1),isrational(car(p3))&&MEQUAL(car(p3).q.a,1)&&MEQUAL(car(p3).q.b,1)?(push(cadr(p3)),push(cadr(p3)),gamma(),multiply()):isrational(car(p3))&&MEQUAL(car(p3).q.a,-1)&&MEQUAL(car(p3).q.b,1)?(push(cadr(p3)),gamma(),push(cadr(p3)),push_integer(-1),add(),divide()):(push_symbol(GAMMA),push(p1),list(2),void 0)},Eval_gcd=function(){var a;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),a=[];iscons(p1);)push(car(p1)),Eval(),gcd(),a.push(p1=cdr(p1));return a},gcd=function(){var a;return a=expanding,save(),gcd_main(),restore(),expanding=a},gcd_main=function(){return expanding=1,p2=pop(),p1=pop(),equal(p1,p2)?void push(p1):isrational(p1)&&isrational(p2)?(push(p1),push(p2),void gcd_numbers()):car(p1)===symbol(ADD)&&car(p2)===symbol(ADD)?void gcd_expr_expr():(car(p1)===symbol(ADD)&&(gcd_expr(p1),p1=pop()),car(p2)===symbol(ADD)&&(gcd_expr(p2),p2=pop()),car(p1)===symbol(MULTIPLY)&&car(p2)===symbol(MULTIPLY)?void gcd_term_term():car(p1)===symbol(MULTIPLY)?void gcd_term_factor():car(p2)===symbol(MULTIPLY)?void gcd_factor_term():(car(p1)===symbol(POWER)?(p3=caddr(p1),p1=cadr(p1)):p3=one,car(p2)===symbol(POWER)?(p4=caddr(p2),p2=cadr(p2)):p4=one,equal(p1,p2)?isnum(p3)&&isnum(p4)?(push(p1),push(lessp(p3,p4)?p3:p4),void power()):(push(p3),push(p4),divide(),p5=pop(),isnum(p5)?(push(p1),p5=car(p3)===symbol(MULTIPLY)&&isnum(cadr(p3))?cadr(p3):one,p6=car(p4)===symbol(MULTIPLY)&&isnum(cadr(p4))?cadr(p4):one,push(lessp(p5,p6)?p3:p4),void power()):(push(p3),push(p4),subtract(),p5=pop(),isnum(p5)?(push(p1),push(isnegativenumber(p5)?p3:p4),power()):void push(one))):void push(one)))},gcd_expr_expr=function(){if(length(p1)!==length(p2))return void push(one);for(p3=cdr(p1),push(car(p3)),p3=cdr(p3);iscons(p3);)push(car(p3)),gcd(),p3=cdr(p3);for(p3=pop(),p4=cdr(p2),push(car(p4)),p4=cdr(p4);iscons(p4);)push(car(p4)),gcd(),p4=cdr(p4);return p4=pop(),push(p1),push(p3),divide(),p5=pop(),push(p2),push(p4),divide(),p6=pop(),equal(p5,p6)?(push(p5),push(p3),push(p4),gcd(),multiply()):push(one)},gcd_expr=function(a){var b;for(a=cdr(a),push(car(a)),a=cdr(a),b=[];iscons(a);)push(car(a)),gcd(),b.push(a=cdr(a));return b},gcd_term_term=function(){var a;for(push(one),p3=cdr(p1),a=[];iscons(p3);){for(p4=cdr(p2);iscons(p4);)push(car(p3)),push(car(p4)),gcd(),multiply(),p4=cdr(p4);a.push(p3=cdr(p3))}return a},gcd_term_factor=function(){var a;for(push(one),p3=cdr(p1),a=[];iscons(p3);)push(car(p3)),push(p2),gcd(),multiply(),a.push(p3=cdr(p3));return a},gcd_factor_term=function(){var a;for(push(one),p4=cdr(p2),a=[];iscons(p4);)push(p1),push(car(p4)),gcd(),multiply(),a.push(p4=cdr(p4));return a},guess=function(){var a;return a=pop(),push(a),push_symbol(Find(a,symbol(SYMBOL_X))?SYMBOL_X:Find(a,symbol(SYMBOL_Y))?SYMBOL_Y:Find(a,symbol(SYMBOL_Z))?SYMBOL_Z:Find(a,symbol(SYMBOL_T))?SYMBOL_T:Find(a,symbol(SYMBOL_S))?SYMBOL_S:SYMBOL_X)},hermite=function(){return save(),yyhermite(),restore()},yyhermite=function(){var a;return a=0,p2=pop(),p1=pop(),push(p2),a=pop_integer(),a<0||isNaN(a)?(push_symbol(HERMITE),push(p1),push(p2),void list(3)):issymbol(p1)?yyhermite2(a):(p3=p1,p1=symbol(SECRETX),yyhermite2(a),p1=p3,push(symbol(SECRETX)),push(p1),subst(),Eval())},yyhermite2=function(a){var b,c,d,e;for(b=0,push_integer(1),push_integer(0),p4=pop(),e=[],b=c=0,d=a;0<=d?c<d:c>d;b=0<=d?++c:--c)p5=p4,p4=pop(),push(p1),push(p4),multiply(),push_integer(b),push(p5),multiply(),subtract(),push_integer(2),e.push(multiply());return e},hilbert=function(){var a,b,c,d,e,f,g;if(b=0,c=0,d=0,save(),p2=pop(),push(p2),(d=pop_integer())<2)return push_symbol(HILBERT),push(p2),list(2),void restore();for(push_zero_matrix(d,d),p1=pop(),b=e=0,f=d;0<=f?e<f:e>f;b=0<=f?++e:--e)for(c=a=0,g=d;0<=g?a<g:a>g;c=0<=g?++a:--a)push_integer(b+c+1),inverse(),p1.tensor.elem[b*d+c]=pop();return push(p1),restore()},DEBUG_IMAG=!1,Eval_imag=function(){return push(cadr(p1)),Eval(),imag()},imag=function(){return save(),rect(),p1=pop(),DEBUG_IMAG&&console.log("IMAGE of "+p1),push(p1),push(p1),conjugate(),DEBUG_IMAG&&console.log(" image: conjugate result: "+stack[tos-1]),subtract(),push_integer(2),divide(),DEBUG_IMAG&&console.log(" image: 1st divide result: "+stack[tos-1]),push(imaginaryunit),divide(),DEBUG_IMAG&&console.log(" image: 2nd divide result: "+stack[tos-1]),restore()},index_function=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u;if(f=0,g=0,h=0,i=0,j=0,u=0,save(),t=tos-a,p1=stack[t],!istensor(p1))return tos-=a,push(p1),void restore();for(i=p1.tensor.ndim,h=a-1,h>i&&stop("too many indices for tensor"),g=0,f=k=0,l=h;0<=l?k<l:k>l;f=0<=l?++k:--k)push(stack[t+f+1]),u=pop_integer(),(u<1||u>p1.tensor.dim[f])&&stop("index out of range"),g=g*p1.tensor.dim[f]+u-1;if(i===h)return tos-=a,push(p1.tensor.elem[g]),void restore();for(f=b=m=h,n=i;m<=n?b<n:b>n;f=m<=n?++b:--b)g=g*p1.tensor.dim[f]+0;for(j=1,f=c=o=h,p=i;o<=p?c<p:c>p;f=o<=p?++c:--c)j*=p1.tensor.dim[f];for(p2=alloc_tensor(j),p2.tensor.ndim=i-h,f=d=q=h,r=i;q<=r?d<r:d>r;f=q<=r?++d:--d)p2.tensor.dim[f-h]=p1.tensor.dim[f];for(f=e=0,s=j;0<=s?e<s:e>s;f=0<=s?++e:--e)p2.tensor.elem[f]=p1.tensor.elem[g+f];return check_tensor_dimensions(p1),check_tensor_dimensions(p2),tos-=a,push(p2),restore()},set_component=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t;for(g=0,h=0,i=0,j=0,t=0,save(),a<3&&stop("error in indexed assign"),s=tos-a,p2=stack[s],p1=stack[s+1],istensor(p1)||stop("error in indexed assign"),j=p1.tensor.ndim,i=a-2,i>j&&stop("error in indexed assign"),h=0,g=k=0,l=i;0<=l?k<l:k>l;g=0<=l?++k:--k)push(stack[s+g+2]),t=pop_integer(),(t<1||t>p1.tensor.dim[g])&&stop("error in indexed assign\n"),h=h*p1.tensor.dim[g]+t-1;for(g=b=m=i,n=j;m<=n?b<n:b>n;g=m<=n?++b:--b)h=h*p1.tensor.dim[g]+0;for(p3=alloc_tensor(p1.tensor.nelem),p3.tensor.ndim=p1.tensor.ndim,g=c=0,o=p1.tensor.ndim;0<=o?c<o:c>o;g=0<=o?++c:--c)p3.tensor.dim[g]=p1.tensor.dim[g];for(g=d=0,p=p1.tensor.nelem;0<=p?d<p:d>p;g=0<=p?++d:--d)p3.tensor.elem[g]=p1.tensor.elem[g];if(check_tensor_dimensions(p1),check_tensor_dimensions(p3),p1=p3,j===i)return istensor(p2)&&stop("error in indexed assign"),p1.tensor.elem[h]=p2,check_tensor_dimensions(p1),tos-=a,push(p1),void restore();for(istensor(p2)||stop("error in indexed assign"),j-i!==p2.tensor.ndim&&stop("error in indexed assign"),g=e=0,q=p2.tensor.ndim;0<=q?e<q:e>q;g=0<=q?++e:--e)p1.tensor.dim[i+g]!==p2.tensor.dim[g]&&stop("error in indexed assign");for(g=f=0,r=p2.tensor.nelem;0<=r?f<r:f>r;g=0<=r?++f:--f)p1.tensor.elem[h+g]=p2.tensor.elem[g];return check_tensor_dimensions(p1),check_tensor_dimensions(p2),tos-=a,push(p1),restore()},Eval_inner=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q;for(q=[],q.push(car(cdr(p1))),o=car(cdr(cdr(p1))),o===symbol(NIL)&&stop("pattern needs at least a template and a transformed version"),f=cdr(cdr(p1));f!==symbol(NIL);)q.push(car(f)),f=cdr(f);if(q.length>2){for(push_symbol(INNER),push(q[q.length-2]),push(q[q.length-1]),list(3),e=g=2,i=q.length;2<=i?g<i:g>i;e=2<=i?++g:--g)push_symbol(INNER),swap(),push(q[q.length-e-1]),swap(),list(3);return p1=pop(),void Eval_inner()}for(h=[],get_innerprod_factors(p1,h),m=[],e=a=0,j=h.length;0<=j?a<j:a>j;e=0<=j?++a:--a)h[e]!==symbol(SYMBOL_IDENTITY_MATRIX)&&m.push(h[e]);if(h=m,m=[],h.length>1){for(p=0,e=b=0,k=h.length;(0<=k?b<k:b>k)&&e+p+1<=h.length-1&&(push(h[e+p]),Eval(),inv(),push(h[e+p+1]),Eval(),subtract(),d=pop(),iszero(d)?p+=1:m.push(h[e+p]),e+p===h.length-2&&m.push(h[h.length-1]),!(e+p>=h.length-1));e=0<=k?++b:--b);h=m}if(push(symbol(INNER)),!(h.length>0))return pop(),void push(symbol(SYMBOL_IDENTITY_MATRIX));for(e=c=0,l=h.length;0<=l?c<l:c>l;e=0<=l?++c:--c)push(h[e]);for(list(h.length+1),p1=pop(),p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),n=[];iscons(p1);)push(car(p1)),Eval(),inner(),n.push(p1=cdr(p1));return n},inner=function(){var a,b,c,d;if(save(),p2=pop(),p1=pop(),isnegativeterm(p2)&&isnegativeterm(p1)&&(push(p2),negate(),p2=pop(),push(p1),negate(),p1=pop()),isinnerordot(p1)&&(a=car(cdr(p1)),b=car(cdr(cdr(p1))),c=p2,p1=a,push(b),push(c),inner(),p2=pop()),p1===symbol(SYMBOL_IDENTITY_MATRIX))return push(p2),void restore();if(p2===symbol(SYMBOL_IDENTITY_MATRIX))return push(p1),void restore();if(istensor(p1)&&istensor(p2))inner_f();else{if(push(p1),push(p2),inv(),subtract(),d=pop(),iszero(d))return push_symbol(SYMBOL_IDENTITY_MATRIX),void restore();if(expanding&&isadd(p1)){for(p1=cdr(p1),push(zero);iscons(p1);)push(car(p1)),push(p2),inner(),add(),p1=cdr(p1);return void restore()}if(expanding&&isadd(p2)){for(p2=cdr(p2),push(zero);iscons(p2);)push(p1),push(car(p2)),inner(),add(),p2=cdr(p2);return void restore()}if(push(p1),push(p2),istensor(p1)&&isnum(p2))tensor_times_scalar();else if(isnum(p1)&&istensor(p2))scalar_times_tensor();else{if(!isnum(p1)&&!isnum(p2))return pop(),pop(),push_symbol(INNER),push(p1),push(p2),list(3),void restore();multiply()}}return restore()},inner_f=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x;for(l=0,o=p1.tensor.dim[p1.tensor.ndim-1],o!==p2.tensor.dim[0]&&stop("inner: tensor dimension check"),p=p1.tensor.ndim+p2.tensor.ndim-2,p>MAXDIM&&stop("inner: rank of result exceeds maximum"),a=p1.tensor.elem,i=p2.tensor.elem,h=1,l=q=0,r=p1.tensor.ndim-1;0<=r?q<r:q>r;l=0<=r?++q:--q)h*=p1.tensor.dim[l];for(j=1,l=b=1,s=p2.tensor.ndim;1<=s?b<s:b>s;l=1<=s?++b:--b)j*=p2.tensor.dim[l];for(p3=alloc_tensor(h*j),k=p3.tensor.elem,l=c=0,t=h;0<=t?c<t:c>t;l=0<=t?++c:--c)for(m=d=0,u=o;0<=u?d<u:d>u;m=0<=u?++d:--d)if(!iszero(a[l*o+m]))for(n=e=0,v=j;0<=v?e<v:e>v;n=0<=v?++e:--e)push(a[l*o+m]),push(i[m*j+n]),multiply(),push(k[l*j+n]),add(),k[l*j+n]=pop();if(0===p)return push(p3.tensor.elem[0]);for(p3.tensor.ndim=p,m=0,l=f=0,w=p1.tensor.ndim-1;0<=w?f<w:f>w;l=0<=w?++f:--f)p3.tensor.dim[l]=p1.tensor.dim[l];for(m=p1.tensor.ndim-1,l=g=0,x=p2.tensor.ndim-1;0<=x?g<x:g>x;l=0<=x?++g:--g)p3.tensor.dim[m+l]=p2.tensor.dim[l+1];return push(p3)},get_innerprod_factors=function(a,b){return iscons(a)?cdr(a)===symbol(NIL)?void(a=get_innerprod_factors(car(a),b)):isinnerordot(a)?(get_innerprod_factors(car(cdr(a)),b),void get_innerprod_factors(cdr(cdr(a)),b)):add_factor_to_accumulator(a,b):void add_factor_to_accumulator(a,b)},add_factor_to_accumulator=function(a,b){if(a!==symbol(NIL))return b.push(a)},itab=["f(a,a*x)","f(1/x,log(x))","f(x^a,x^(a+1)/(a+1))","f(exp(a*x),1/a*exp(a*x))","f(exp(a*x+b),1/a*exp(a*x+b))","f(x*exp(a*x^2),exp(a*x^2)/(2*a))","f(x*exp(a*x^2+b),exp(a*x^2+b)/(2*a))","f(log(a*x),x*log(a*x)-x)","f(a^x,a^x/log(a),or(not(number(a)),a>0))","f(1/(a+x^2),1/sqrt(a)*arctan(x/sqrt(a)),or(not(number(a)),a>0))","f(1/(a-x^2),1/sqrt(a)*arctanh(x/sqrt(a)))","f(1/sqrt(a-x^2),arcsin(x/(sqrt(a))))","f(1/sqrt(a+x^2),log(x+sqrt(a+x^2)))","f(1/(a+b*x),1/b*log(a+b*x))","f(1/(a+b*x)^2,-1/(b*(a+b*x)))","f(1/(a+b*x)^3,-1/(2*b)*1/(a+b*x)^2)","f(x/(a+b*x),x/b-a*log(a+b*x)/b/b)","f(x/(a+b*x)^2,1/b^2*(log(a+b*x)+a/(a+b*x)))","f(x^2/(a+b*x),1/b^2*(1/2*(a+b*x)^2-2*a*(a+b*x)+a^2*log(a+b*x)))","f(x^2/(a+b*x)^2,1/b^3*(a+b*x-2*a*log(a+b*x)-a^2/(a+b*x)))","f(x^2/(a+b*x)^3,1/b^3*(log(a+b*x)+2*a/(a+b*x)-1/2*a^2/(a+b*x)^2))","f(1/x*1/(a+b*x),-1/a*log((a+b*x)/x))","f(1/x*1/(a+b*x)^2,1/a*1/(a+b*x)-1/a^2*log((a+b*x)/x))","f(1/x*1/(a+b*x)^3,1/a^3*(1/2*((2*a+b*x)/(a+b*x))^2+log(x/(a+b*x))))","f(1/x^2*1/(a+b*x),-1/(a*x)+b/a^2*log((a+b*x)/x))","f(1/x^3*1/(a+b*x),(2*b*x-a)/(2*a^2*x^2)+b^2/a^3*log(x/(a+b*x)))","f(1/x^2*1/(a+b*x)^2,-(a+2*b*x)/(a^2*x*(a+b*x))+2*b/a^3*log((a+b*x)/x))","f(1/(a+b*x^2),1/sqrt(a*b)*arctan(x*sqrt(a*b)/a),or(not(number(a*b)),a*b>0))","f(1/(a+b*x^2),1/(2*sqrt(-a*b))*log((a+x*sqrt(-a*b))/(a-x*sqrt(-a*b))),or(not(number(a*b)),a*b<0))","f(x/(a+b*x^2),1/2*1/b*log(a+b*x^2))","f(x^2/(a+b*x^2),x/b-a/b*integral(1/(a+b*x^2),x))","f(1/(a+b*x^2)^2,x/(2*a*(a+b*x^2))+1/2*1/a*integral(1/(a+b*x^2),x))","f(1/x*1/(a+b*x^2),1/2*1/a*log(x^2/(a+b*x^2)))","f(1/x^2*1/(a+b*x^2),-1/(a*x)-b/a*integral(1/(a+b*x^2),x))","f(1/(a+b*x^3),1/3*1/a*(a/b)^(1/3)*(1/2*log(((a/b)^(1/3)+x)^3/(a+b*x^3))+sqrt(3)*arctan((2*x-(a/b)^(1/3))*(a/b)^(-1/3)/sqrt(3))))","f(x^2/(a+b*x^3),1/3*1/b*log(a+b*x^3))","f(x/(a+b*x^4),1/2*sqrt(b/a)/b*arctan(x^2*sqrt(b/a)),or(not(number(a*b)),a*b>0))","f(x/(a+b*x^4),1/4*sqrt(-b/a)/b*log((x^2-sqrt(-a/b))/(x^2+sqrt(-a/b))),or(not(number(a*b)),a*b<0))","f(x^3/(a+b*x^4),1/4*1/b*log(a+b*x^4))","f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))","f(x*sqrt(a+b*x),-2*(2*a-3*b*x)*sqrt((a+b*x)^3)/15/b^2)","f(x^2*sqrt(a+b*x),2*(8*a^2-12*a*b*x+15*b^2*x^2)*sqrt((a+b*x)^3)/105/b^3)","f(sqrt(a+b*x)/x,2*sqrt(a+b*x)+a*integral(1/x*1/sqrt(a+b*x),x))","f(sqrt(a+b*x)/x^2,-sqrt(a+b*x)/x+b/2*integral(1/x*1/sqrt(a+b*x),x))","f(1/sqrt(a+b*x),2*sqrt(a+b*x)/b)","f(x/sqrt(a+b*x),-2/3*(2*a-b*x)*sqrt(a+b*x)/b^2)","f(x^2/sqrt(a+b*x),2/15*(8*a^2-4*a*b*x+3*b^2*x^2)*sqrt(a+b*x)/b^3)","f(1/x*1/sqrt(a+b*x),1/sqrt(a)*log((sqrt(a+b*x)-sqrt(a))/(sqrt(a+b*x)+sqrt(a))),or(not(number(a)),a>0))","f(1/x*1/sqrt(a+b*x),2/sqrt(-a)*arctan(sqrt(-(a+b*x)/a)),or(not(number(a)),a<0))","f(1/x^2*1/sqrt(a+b*x),-sqrt(a+b*x)/a/x-1/2*b/a*integral(1/x*1/sqrt(a+b*x),x))","f(sqrt(x^2+a),1/2*(x*sqrt(x^2+a)+a*log(x+sqrt(x^2+a))))","f(1/sqrt(x^2+a),log(x+sqrt(x^2+a)))","f(1/x*1/sqrt(x^2+a),arcsec(x/sqrt(-a))/sqrt(-a),or(not(number(a)),a<0))","f(1/x*1/sqrt(x^2+a),-1/sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))","f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(a)*log((sqrt(a)+sqrt(x^2+a))/x),or(not(number(a)),a>0))","f(sqrt(x^2+a)/x,sqrt(x^2+a)-sqrt(-a)*arcsec(x/sqrt(-a)),or(not(number(a)),a<0))","f(x/sqrt(x^2+a),sqrt(x^2+a))","f(x*sqrt(x^2+a),1/3*sqrt((x^2+a)^3))","f(sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2+a^(1/3))^3)+3/2*a^(1/3)*x*sqrt(x^2+a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2+a^(1/3)))))","f(sqrt(-a+x^6-3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/4*(x*sqrt((x^2-a^(1/3))^3)-3/2*a^(1/3)*x*sqrt(x^2-a^(1/3))+3/2*a^(2/3)*log(x+sqrt(x^2-a^(1/3)))))","f(1/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),x/a^(1/3)/sqrt(x^2+a^(1/3)))","f(x/sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),-1/sqrt(x^2+a^(1/3)))","f(x*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/5*sqrt((x^2+a^(1/3))^5))","f(x^2*sqrt(x^2+a),1/4*x*sqrt((x^2+a)^3)-1/8*a*x*sqrt(x^2+a)-1/8*a^2*log(x+sqrt(x^2+a)))","f(x^3*sqrt(x^2+a),(1/5*x^2-2/15*a)*sqrt((x^2+a)^3),and(number(a),a>0))","f(x^3*sqrt(x^2+a),sqrt((x^2+a)^5)/5-a*sqrt((x^2+a)^3)/3,and(number(a),a<0))","f(x^2/sqrt(x^2+a),1/2*x*sqrt(x^2+a)-1/2*a*log(x+sqrt(x^2+a)))","f(x^3/sqrt(x^2+a),1/3*sqrt((x^2+a)^3)-a*sqrt(x^2+a))","f(1/x^2*1/sqrt(x^2+a),-sqrt(x^2+a)/a/x)","f(1/x^3*1/sqrt(x^2+a),-1/2*sqrt(x^2+a)/a/x^2+1/2*log((sqrt(a)+sqrt(x^2+a))/x)/a^(3/2),or(not(number(a)),a>0))","f(1/x^3*1/sqrt(x^2-a),1/2*sqrt(x^2-a)/a/x^2+1/2*1/(a^(3/2))*arcsec(x/(a^(1/2))),or(not(number(a)),a>0))","f(x^2*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/6*x*sqrt((x^2+a^(1/3))^5)-1/24*a^(1/3)*x*sqrt((x^2+a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2+a^(1/3))-1/16*a*log(x+sqrt(x^2+a^(1/3))),or(not(number(a)),a>0))","f(x^2*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/6*x*sqrt((x^2-a^(1/3))^5)+1/24*a^(1/3)*x*sqrt((x^2-a^(1/3))^3)-1/16*a^(2/3)*x*sqrt(x^2-a^(1/3))+1/16*a*log(x+sqrt(x^2-a^(1/3))),or(not(number(a)),a>0))","f(x^3*sqrt(a+x^6+3*a^(1/3)*x^4+3*a^(2/3)*x^2),1/7*sqrt((x^2+a^(1/3))^7)-1/5*a^(1/3)*sqrt((x^2+a^(1/3))^5),or(not(number(a)),a>0))","f(x^3*sqrt(-a-3*a^(1/3)*x^4+3*a^(2/3)*x^2+x^6),1/7*sqrt((x^2-a^(1/3))^7)+1/5*a^(1/3)*sqrt((x^2-a^(1/3))^5),or(not(number(a)),a>0))","f(1/(x-a)/sqrt(x^2-a^2),-sqrt(x^2-a^2)/a/(x-a))","f(1/(x+a)/sqrt(x^2-a^2),sqrt(x^2-a^2)/a/(x+a))","f(sqrt(a-x^2),1/2*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(abs(a)))))","f(1/x*1/sqrt(a-x^2),-1/sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))","f(sqrt(a-x^2)/x,sqrt(a-x^2)-sqrt(a)*log((sqrt(a)+sqrt(a-x^2))/x),or(not(number(a)),a>0))","f(x/sqrt(a-x^2),-sqrt(a-x^2))","f(x*sqrt(a-x^2),-1/3*sqrt((a-x^2)^3))","f(x^2*sqrt(a-x^2),-x/4*sqrt((a-x^2)^3)+1/8*a*(x*sqrt(a-x^2)+a*arcsin(x/sqrt(a))),or(not(number(a)),a>0))","f(x^3*sqrt(a-x^2),(-1/5*x^2-2/15*a)*sqrt((a-x^2)^3),or(not(number(a)),a>0))","f(x^2/sqrt(a-x^2),-x/2*sqrt(a-x^2)+a/2*arcsin(x/sqrt(a)),or(not(number(a)),a>0))","f(1/x^2*1/sqrt(a-x^2),-sqrt(a-x^2)/a/x,or(not(number(a)),a>0))","f(sqrt(a-x^2)/x^2,-sqrt(a-x^2)/x-arcsin(x/sqrt(a)),or(not(number(a)),a>0))","f(sqrt(a-x^2)/x^3,-1/2*sqrt(a-x^2)/x^2+1/2*log((sqrt(a)+sqrt(a-x^2))/x)/sqrt(a),or(not(number(a)),a>0))","f(sqrt(a-x^2)/x^4,-1/3*sqrt((a-x^2)^3)/a/x^3,or(not(number(a)),a>0))","f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*log(x*sqrt(a)+sqrt(a*x^2+b))/2/sqrt(a),and(number(a),a>0))","f(sqrt(a*x^2+b),x*sqrt(a*x^2+b)/2+b*arcsin(x*sqrt(-a/b))/2/sqrt(-a),and(number(a),a<0))","f(sin(a*x),-cos(a*x)/a)","f(cos(a*x),sin(a*x)/a)","f(tan(a*x),-log(cos(a*x))/a)","f(1/tan(a*x),log(sin(a*x))/a)","f(1/cos(a*x),log(tan(pi/4+a*x/2))/a)","f(1/sin(a*x),log(tan(a*x/2))/a)","f(sin(a*x)^2,x/2-sin(2*a*x)/(4*a))","f(sin(a*x)^3,-cos(a*x)*(sin(a*x)^2+2)/(3*a))","f(sin(a*x)^4,3/8*x-sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))","f(cos(a*x)^2,x/2+sin(2*a*x)/(4*a))","f(cos(a*x)^3,sin(a*x)*(cos(a*x)^2+2)/(3*a))","f(cos(a*x)^4,3/8*x+sin(2*a*x)/(4*a)+sin(4*a*x)/(32*a))","f(1/sin(a*x)^2,-1/(a*tan(a*x)))","f(1/cos(a*x)^2,tan(a*x)/a)","f(sin(a*x)*cos(a*x),sin(a*x)^2/(2*a))","f(sin(a*x)^2*cos(a*x)^2,-sin(4*a*x)/(32*a)+x/8)","f(sin(a*x)/cos(a*x)^2,1/(a*cos(a*x)))","f(sin(a*x)^2/cos(a*x),(log(tan(pi/4+a*x/2))-sin(a*x))/a)","f(cos(a*x)/sin(a*x)^2,-1/(a*sin(a*x)))","f(1/(sin(a*x)*cos(a*x)),log(tan(a*x))/a)","f(1/(sin(a*x)*cos(a*x)^2),(1/cos(a*x)+log(tan(a*x/2)))/a)","f(1/(sin(a*x)^2*cos(a*x)),(log(tan(pi/4+a*x/2))-1/sin(a*x))/a)","f(1/(sin(a*x)^2*cos(a*x)^2),-2/(a*tan(2*a*x)))","f(sin(a+b*x),-cos(a+b*x)/b)","f(cos(a+b*x),sin(a+b*x)/b)","f(1/(b+b*sin(a*x)),-tan(pi/4-a*x/2)/a/b)","f(1/(b-b*sin(a*x)),tan(pi/4+a*x/2)/a/b)","f(1/(b+b*cos(a*x)),tan(a*x/2)/a/b)","f(1/(b-b*cos(a*x)),-1/tan(a*x/2)/a/b)","f(1/(a+b*sin(x)),1/sqrt(b^2-a^2)*log((a*tan(x/2)+b-sqrt(b^2-a^2))/(a*tan(x/2)+b+sqrt(b^2-a^2))),b^2-a^2)","f(1/(a+b*cos(x)),1/sqrt(b^2-a^2)*log((sqrt(b^2-a^2)*tan(x/2)+a+b)/(sqrt(b^2-a^2)*tan(x/2)-a-b)),b^2-a^2)","f(x*sin(a*x),sin(a*x)/a^2-x*cos(a*x)/a)","f(x^2*sin(a*x),2*x*sin(a*x)/a^2-(a^2*x^2-2)*cos(a*x)/a^3)","f(x*cos(a*x),cos(a*x)/a^2+x*sin(a*x)/a)","f(x^2*cos(a*x),2*x*cos(a*x)/a^2+(a^2*x^2-2)*sin(a*x)/a^3)","f(arcsin(a*x),x*arcsin(a*x)+sqrt(1-a^2*x^2)/a)","f(arccos(a*x),x*arccos(a*x)-sqrt(1-a^2*x^2)/a)","f(arctan(a*x),x*arctan(a*x)-1/2*log(1+a^2*x^2)/a)","f(log(a*x),x*log(a*x)-x)","f(x*log(a*x),x^2*log(a*x)/2-x^2/4)","f(x^2*log(a*x),x^3*log(a*x)/3-1/9*x^3)","f(log(x)^2,x*log(x)^2-2*x*log(x)+2*x)","f(1/x*1/(a+log(x)),log(a+log(x)))","f(log(a*x+b),(a*x+b)*log(a*x+b)/a-x)","f(log(a*x+b)/x^2,a/b*log(x)-(a*x+b)*log(a*x+b)/b/x)","f(sinh(x),cosh(x))","f(cosh(x),sinh(x))","f(tanh(x),log(cosh(x)))","f(x*sinh(x),x*cosh(x)-sinh(x))","f(x*cosh(x),x*sinh(x)-cosh(x))","f(sinh(x)^2,sinh(2*x)/4-x/2)","f(tanh(x)^2,x-tanh(x))","f(cosh(x)^2,sinh(2*x)/4+x/2)","f(x^3*exp(a*x^2),exp(a*x^2)*(x^2/a-1/(a^2))/2)","f(x^3*exp(a*x^2+b),exp(a*x^2)*exp(b)*(x^2/a-1/(a^2))/2)","f(exp(a*x^2),-i*sqrt(pi)*erf(i*sqrt(a)*x)/sqrt(a)/2)","f(erf(a*x),x*erf(a*x)+exp(-a^2*x^2)/a/sqrt(pi))","f(x^2*(1-x^2)^(3/2),(x*sqrt(1-x^2)*(-8*x^4+14*x^2-3)+3*arcsin(x))/48)","f(x^2*(1-x^2)^(5/2),(x*sqrt(1-x^2)*(48*x^6-136*x^4+118*x^2-15)+15*arcsin(x))/384)","f(x^4*(1-x^2)^(3/2),(-x*sqrt(1-x^2)*(16*x^6-24*x^4+2*x^2+3)+3*arcsin(x))/128)","f(x*exp(a*x),exp(a*x)*(a*x-1)/(a^2))","f(x*exp(a*x+b),exp(a*x+b)*(a*x-1)/(a^2))","f(x^2*exp(a*x),exp(a*x)*(a^2*x^2-2*a*x+2)/(a^3))","f(x^2*exp(a*x+b),exp(a*x+b)*(a^2*x^2-2*a*x+2)/(a^3))","f(x^3*exp(a*x),exp(a*x)*x^3/a-3/a*integral(x^2*exp(a*x),x))","f(x^3*exp(a*x+b),exp(a*x+b)*x^3/a-3/a*integral(x^2*exp(a*x+b),x))",0],Eval_integral=function(){var a,d,e,f,g;for(0,d=0,p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),push(car(p1)),Eval(),p2=pop(),p2===symbol(NIL)?(guess(),push(symbol(NIL))):isnum(p2)?(guess(),push(p2)):(push(p2),p1=cdr(p1),push(car(p1)),Eval()),p5=pop(),p4=pop(),p3=pop();;){if(isnum(p5)?(push(p5),d=pop_integer(),isNaN(d)&&stop("nth integral: check n")):d=1,push(p3),d>=0)for(e=0,f=d;0<=f?e<f:e>f;0<=f?++e:--e)push(p4),integral();else for(d=-d,a=0,g=d;0<=g?a<g:a>g;0<=g?++a:--a)push(p4),derivative();if(p3=pop(),p5===symbol(NIL))break;if(isnum(p5)){if(p1=cdr(p1),push(car(p1)),Eval(),(p5=pop())===symbol(NIL))break;isnum(p5)?1:(p4=p5,p1=cdr(p1),push(car(p1)),Eval(),p5=pop())}else p4=p5,p1=cdr(p1),push(car(p1)),Eval(),p5=pop()}return push(p3)},integral=function(){return save(),p2=pop(),p1=pop(),car(p1)===symbol(ADD)?integral_of_sum():car(p1)===symbol(MULTIPLY)?integral_of_product():integral_of_form(),p1=pop(),Find(p1,symbol(INTEGRAL))&&stop("integral: sorry, could not find a solution"),push(p1),simplify(),Eval(),restore()},integral_of_sum=function(){var a;for(p1=cdr(p1),push(car(p1)),push(p2),integral(),p1=cdr(p1),a=[];iscons(p1);)push(car(p1)),push(p2),integral(),add(),a.push(p1=cdr(p1));return a},integral_of_product=function(){return push(p1),push(p2),partition(),p1=pop(),integral_of_form(),multiply()},integral_of_form=function(){return push(p1),push(p2),transform(itab,!1),p3=pop(),p3===symbol(NIL)?(push_symbol(INTEGRAL),push(p1),push(p2),list(3)):push(p3)},INV_check_arg=function(){return istensor(p1)?2!==p1.tensor.ndim?0:p1.tensor.dim[0]!==p1.tensor.dim[1]?0:1:0},inv=function(){var a,b,c,d,e,f,g,h,i;if(e=0,f=0,save(),p1=pop(),isinv(p1))return push(car(cdr(p1))),void restore();if(isidentitymatrix(p1))return push(p1),void restore();if(expanding&&isinnerordot(p1)){for(p1=cdr(p1),c=[];iscons(p1);)c.push(car(p1)),p1=cdr(p1);for(d=g=h=c.length-1;h<=0?g<=0:g>=0;d=h<=0?++g:--g)push(c[d]),inv(),d!==c.length-1&&inner();return void restore()}if(0===INV_check_arg())return push_symbol(INV),push(p1),list(2),void restore();for(f=p1.tensor.nelem,a=p1.tensor.elem,e=b=0,i=f;(0<=i?b<i:b>i)&&isnum(a[e]);e=0<=i?++b:--b);return e===f?yyinvg():(push(p1),adj(),push(p1),det(),p2=pop(),iszero(p2)&&stop("inverse of singular matrix"),push(p2),divide()),restore()},invg=function(){return save(),p1=pop(),0===INV_check_arg()?(push_symbol(INVG),push(p1),list(2),void restore()):(yyinvg(),restore())},yyinvg=function(){var a,b,c,d,e,f,g,h,i,j,k,l;for(d=0,e=0,f=0,g=0,g=p1.tensor.dim[0],d=tos,e=h=0,i=g;0<=i?h<i:h>i;e=0<=i?++h:--h)for(f=a=0,j=g;0<=j?a<j:a>j;f=0<=j?++a:--a)push(e===f?one:zero);for(e=b=0,k=g*g;0<=k?b<k:b>k;e=0<=k?++b:--b)push(p1.tensor.elem[e]);for(INV_decomp(g),p1=alloc_tensor(g*g),p1.tensor.ndim=2,p1.tensor.dim[0]=g,p1.tensor.dim[1]=g,e=c=0,l=g*g;0<=l?c<l:c>l;e=0<=l?++c:--c)p1.tensor.elem[e]=stack[d+e];return tos-=2*g*g,push(p1)},INV_decomp=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p;for(b=0,f=0,g=0,h=0,p=0,b=tos-a*a,p=b-a*a,o=[],f=i=0,j=a;0<=j?i<j:i>j;f=0<=j?++i:--i){if(equal(stack[b+a*f+f],zero)){for(g=c=k=f+1,l=a;(k<=l?c<l:c>l)&&equal(stack[b+a*g+f],zero);g=k<=l?++c:--c);for(g===a&&stop("inverse of singular matrix"),h=d=0,m=a;0<=m?d<m:d>m;h=0<=m?++d:--d)p2=stack[b+a*f+h],stack[b+a*f+h]=stack[b+a*g+h],stack[b+a*g+h]=p2,p2=stack[p+a*f+h],stack[p+a*f+h]=stack[p+a*g+h],stack[p+a*g+h]=p2}for(p2=stack[b+a*f+f],h=e=0,n=a;0<=n?e<n:e>n;h=0<=n?++e:--e)h>f&&(push(stack[b+a*f+h]),push(p2),divide(),stack[b+a*f+h]=pop()),push(stack[p+a*f+h]),push(p2),divide(),stack[p+a*f+h]=pop();o.push(function(){var c,d,e;for(e=[],g=c=0,d=a;0<=d?c<d:c>d;g=0<=d?++c:--c)g!==f&&(p2=stack[b+a*g+f],e.push(function(){var c,d,e;for(e=[],h=c=0,d=a;0<=d?c<d:c>d;h=0<=d?++c:--c)h>f&&(push(stack[b+a*g+h]),push(stack[b+a*f+h]),push(p2),multiply(),subtract(),stack[b+a*g+h]=pop()),push(stack[p+a*g+h]),push(stack[p+a*f+h]),push(p2),multiply(),subtract(),e.push(stack[p+a*g+h]=pop());return e}()));return e}())}return o},DEBUG_IS=!1,iszero=function(a){var b,c,d;switch(b=0,a.k){case NUM:if(MZERO(a.q.a))return 1;break;case DOUBLE:if(0===a.d)return 1;break;case TENSOR:for(b=c=0,d=a.tensor.nelem;0<=d?c<d:c>d;b=0<=d?++c:--c)if(!iszero(a.tensor.elem[b]))return 0;return 1}return 0},isnegativenumber=function(a){switch(a.k){case NUM:if(-1===MSIGN(a.q.a))return 1;break;case DOUBLE:if(a.d<0)return 1}return 0},ispositivenumber=function(a){switch(a.k){case NUM:if(1===MSIGN(a.q.a))return 1;break;case DOUBLE:if(a.d>0)return 1}return 0},isplustwo=function(a){switch(a.k){case NUM:if(MEQUAL(a.q.a,2)&&MEQUAL(a.q.b,1))return 1;break;case DOUBLE:if(2===a.d)return 1}return 0},isplusone=function(a){switch(a.k){case NUM:if(MEQUAL(a.q.a,1)&&MEQUAL(a.q.b,1))return 1;break;case DOUBLE:if(1===a.d)return 1}return 0},isminusone=function(a){switch(a.k){case NUM:if(MEQUAL(a.q.a,-1)&&MEQUAL(a.q.b,1))return 1;break;case DOUBLE:if(-1===a.d)return 1}return 0},isone=function(a){return isplusone(a)||isminusone(a)},isinteger=function(a){return a.k===NUM&&MEQUAL(a.q.b,1)?1:0},isnonnegativeinteger=function(a){return isrational(a)&&MEQUAL(a.q.b,1)&&1===MSIGN(a.q.a)?1:0},isposint=function(a){return isinteger(a)&&1===MSIGN(a.q.a)?1:0},ispoly=function(a,b){return Find(a,b)?ispoly_expr(a,b):0},ispoly_expr=function(a,b){if(car(a)===symbol(ADD)){for(a=cdr(a);iscons(a);){if(!ispoly_term(car(a),b))return 0;a=cdr(a)}return 1}return ispoly_term(a,b)},ispoly_term=function(a,b){if(car(a)===symbol(MULTIPLY)){for(a=cdr(a);iscons(a);){if(!ispoly_factor(car(a),b))return 0;a=cdr(a)}return 1}return ispoly_factor(a,b)},ispoly_factor=function(a,b){return equal(a,b)?1:car(a)===symbol(POWER)&&equal(cadr(a),b)?isposint(caddr(a))?1:0:Find(a,b)?0:1},isnegativeterm=function(a){return isnegativenumber(a)?1:car(a)===symbol(MULTIPLY)&&isnegativenumber(cadr(a))?1:0},hasNegativeRationalExponent=function(a){return car(a)===symbol(POWER)&&isrational(car(cdr(cdr(a))))&&isnegativenumber(car(cdr(a)))?(DEBUG_IS&&console.log("hasNegativeRationalExponent: "+a.toString()+" has imaginary component"),1):(DEBUG_IS&&console.log("hasNegativeRationalExponent: "+a.toString()+" has NO imaginary component"),0)},isimaginarynumberdouble=function(a){return car(a)===symbol(MULTIPLY)&&3===length(a)&&isdouble(cadr(a))&&hasNegativeRationalExponent(caddr(a))||equal(a,imaginaryunit)?1:0},isimaginarynumber=function(a){return car(a)===symbol(MULTIPLY)&&3===length(a)&&isnum(cadr(a))&&equal(caddr(a),imaginaryunit)||equal(a,imaginaryunit)||hasNegativeRationalExponent(caddr(a))?(DEBUG_IS&&console.log("isimaginarynumber: "+a.toString()+" is imaginary number"),1):(DEBUG_IS&&console.log("isimaginarynumber: "+a.toString()+" isn't an imaginary number"),0)},iscomplexnumberdouble=function(a){return car(a)===symbol(ADD)&&3===length(a)&&isdouble(cadr(a))&&isimaginarynumberdouble(caddr(a))||isimaginarynumberdouble(a)?1:0},iscomplexnumber=function(a){return car(a)===symbol(ADD)&&3===length(a)&&isnum(cadr(a))&&isimaginarynumber(caddr(a))||isimaginarynumber(a)?(DEBUG&&console.log("iscomplexnumber: "+a.toString()+" is imaginary number"),1):(DEBUG&&console.log("iscomplexnumber: "+a.toString()+" is imaginary number"),0)},iseveninteger=function(a){return isinteger(a)&&a.q.a.isEven()?1:0},isnegative=function(a){return car(a)===symbol(ADD)&&isnegativeterm(cadr(a))?1:isnegativeterm(a)?1:0},issymbolic=function(a){if(issymbol(a))return 1;for(;iscons(a);){if(issymbolic(car(a)))return 1;a=cdr(a)}return 0},isintegerfactor=function(a){return isinteger(a)||car(a)===symbol(POWER)&&isinteger(cadr(a))&&isinteger(caddr(a))?1:0},isoneover=function(a){return car(a)===symbol(POWER)&&isminusone(caddr(a))?1:0},isfraction=function(a){return a.k!==NUM||MEQUAL(a.q.b,1)?0:1},equaln=function(a,b){switch(a.k){case NUM:if(MEQUAL(a.q.a,b)&&MEQUAL(a.q.b,1))return 1;break;case DOUBLE:if(a.d===b)return 1}return 0},equalq=function(a,b,c){switch(a.k){case NUM:if(MEQUAL(a.q.a,b)&&MEQUAL(a.q.b,c))return 1;break;case DOUBLE:if(a.d===b/c)return 1}return 0},isoneovertwo=function(a){return equalq(a,1,2)?1:0},isminusoneovertwo=function(a){return equalq(a,-1,2)?1:0},isoneoversqrttwo=function(a){return car(a)===symbol(POWER)&&equaln(cadr(a),2)&&equalq(caddr(a),-1,2)?1:0},isminusoneoversqrttwo=function(a){return car(a)===symbol(MULTIPLY)&&equaln(cadr(a),-1)&&isoneoversqrttwo(caddr(a))&&3===length(a)?1:0},isfloating=function(a){if(a.k===DOUBLE||a===symbol(FLOATF))return 1;for(;iscons(a);){if(isfloating(car(a)))return 1;a=cdr(a)}return 0},isimaginaryunit=function(a){return equal(a,imaginaryunit)?1:0},isquarterturn=function(a){var b,c;if(c=0,b=0,car(a)!==symbol(MULTIPLY))return 0;if(equal(cadr(a),imaginaryunit))return caddr(a)!==symbol(PI)?0:3!==length(a)?0:2;if(!isnum(cadr(a)))return 0;if(!equal(caddr(a),imaginaryunit))return 0;if(cadddr(a)!==symbol(PI))return 0;if(4!==length(a))return 0;if(push(cadr(a)),push_integer(2),multiply(),c=pop_integer(),isNaN(c))return 0;switch(c<1&&(b=1,c=-c),c%4){case 0:c=1;break;case 1:c=b?4:3;break;case 2:c=2;break;case 3:c=b?3:4}return c},isnpi=function(a){var c;return c=0,a===symbol(PI)?2:car(a)===symbol(MULTIPLY)&&isnum(cadr(a))&&caddr(a)===symbol(PI)&&3===length(a)?(0,push(cadr(a)),push_integer(2),multiply(),c=pop_integer(),isNaN(c)?0:c=c<0?4- -c%4:1+(c-1)%4):0},$.iszero=iszero,$.isnegativenumber=isnegativenumber,$.isplusone=isplusone,$.isminusone=isminusone,$.isinteger=isinteger,$.isnonnegativeinteger=isnonnegativeinteger,$.isposint=isposint,$.isnegativeterm=isnegativeterm,$.isimaginarynumber=isimaginarynumber,$.iscomplexnumber=iscomplexnumber,$.iseveninteger=iseveninteger,$.isnegative=isnegative,$.issymbolic=issymbolic,$.isintegerfactor=isintegerfactor,$.isoneover=isoneover,$.isfraction=isfraction,$.isoneoversqrttwo=isoneoversqrttwo,$.isminusoneoversqrttwo=isminusoneoversqrttwo,$.isfloating=isfloating,$.isimaginaryunit=isimaginaryunit,$.isquarterturn=isquarterturn,$.isnpi=isnpi,Eval_isprime=function(){return push(cadr(p1)),Eval(),p1=pop(),push_integer(isnonnegativeinteger(p1)&&mprime(p1.q.a)?1:0)},Eval_laguerre=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),p2=pop(),p2===symbol(NIL)?push_integer(0):push(p2),laguerre()},laguerre=function(){var a;return a=0,save(),p3=pop(),p2=pop(),p1=pop(),push(p2),(a=pop_integer())<0||isNaN(a)?(push_symbol(LAGUERRE),push(p1),push(p2),push(p3),list(4),void restore()):(issymbol(p1)?laguerre2(a):(p4=p1,p1=symbol(SECRETX),laguerre2(a),p1=p4,push(symbol(SECRETX)),push(p1),subst(),Eval()),restore())},laguerre2=function(a){var b,c,d,e;for(b=0,push_integer(1),push_integer(0),p6=pop(),e=[],b=c=0,d=a;0<=d?c<d:c>d;b=0<=d?++c:--c)p5=p6,p6=pop(),push_integer(2*b+1),push(p1),subtract(),push(p3),add(),push(p6),multiply(),push_integer(b),push(p3),add(),push(p5),multiply(),subtract(),push_integer(b+1),e.push(divide());return e},Eval_lcm=function(){var a;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),a=[];iscons(p1);)push(car(p1)),Eval(),lcm(),a.push(p1=cdr(p1));return a},lcm=function(){var a;return a=expanding,save(),yylcm(),restore(),expanding=a},yylcm=function(){return expanding=1,p2=pop(),p1=pop(),push(p1),push(p2),gcd(),push(p1),divide(),push(p2),divide(),inverse()},Eval_leading=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),p1=pop(),p1===symbol(NIL)?guess():push(p1),leading()},leading=function(){return save(),p2=pop(),p1=pop(),push(p1),push(p2),degree(),p3=pop(),push(p1),push(p2),push(p3),power(),divide(),push(p2),filter(),restore()},Eval_legendre=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),p2=pop(),p2===symbol(NIL)?push_integer(0):push(p2),legendre()},legendre=function(){return save(),__legendre(),restore()},__legendre=function(){var a,b;return a=0,b=0,p3=pop(),p2=pop(),p1=pop(),push(p2),b=pop_integer(),push(p3),a=pop_integer(),b<0||isNaN(b)||a<0||isNaN(a)?(push_symbol(LEGENDRE),push(p1),push(p2),push(p3),void list(4)):(issymbol(p1)?__legendre2(b,a):(p4=p1,p1=symbol(SECRETX),__legendre2(b,a),p1=p4,push(symbol(SECRETX)),push(p1),subst(),Eval()),__legendre3(a))},__legendre2=function(a,b){var c,d,e,f,g,h;for(d=0,push_integer(1),push_integer(0),p6=pop(),d=e=0,f=a;0<=f?e<f:e>f;d=0<=f?++e:--e)p5=p6,p6=pop(),push_integer(2*d+1),push(p1),multiply(),push(p6),multiply(),push_integer(d),push(p5),multiply(),subtract(),push_integer(d+1),divide();for(h=[],d=c=0,g=b;0<=g?c<g:c>g;d=0<=g?++c:--c)push(p1),h.push(derivative());return h},__legendre3=function(a){if(0!==a)return car(p1)===symbol(COS)?(push(cadr(p1)),sine(),square()):car(p1)===symbol(SIN)?(push(cadr(p1)),cosine(),square()):(push_integer(1),push(p1),square(),subtract()),push_integer(a),push_rational(1,2),multiply(),power(),multiply(),a%2?negate():void 0},list=function(a){var c,d,e;for(0,push(symbol(NIL)),e=[],c=0,d=a;0<=d?c<d:c>d;0<=d?++c:--c)e.push(cons());return e},Eval_log=function(){return push(cadr(p1)),Eval(),logarithm()},logarithm=function(){return save(),yylog(),restore()},yylog=function(){var a;if(a=0,(p1=pop())===symbol(E))return void push_integer(1);if(equaln(p1,1))return void push_integer(0);if(isnegativenumber(p1))return push(p1),negate(),logarithm(),push(imaginaryunit),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),multiply(),void add();if(isdouble(p1))return a=Math.log(p1.d),void push_double(a);if(isfraction(p1))return push(p1),numerator(),logarithm(),push(p1),denominator(),logarithm(),void subtract();if(car(p1)===symbol(POWER))return push(caddr(p1)),push(cadr(p1)),logarithm(),void multiply();if(car(p1)!==symbol(MULTIPLY))return push_symbol(LOG),push(p1),list(2);for(push_integer(0),p1=cdr(p1);iscons(p1);)push(car(p1)),logarithm(),add(),p1=cdr(p1)},Eval_lookup=function(){return p1=cadr(p1),iscons(p1)||cadr(p1).k!==SYM||(p1=get_binding(p1)),push(p1)},madd=function(a,b){return a.add(b)},msub=function(a,b){return a.subtract(b)},addf=function(a,b){return a.add(b)},subf=function(a,b){return a.subtract(b)},ucmp=function(a,b){return a.compareAbs(b)},mgcd=function(a,b){return bigInt.gcd(a,b)},new_string=function(a){return save(),p1=new U,p1.k=STR,p1.str=a,push(p1),restore()},out_of_memory=function(){return stop("out of memory")},push_zero_matrix=function(a,b){return push(alloc_tensor(a*b)),stack[tos-1].tensor.ndim=2,stack[tos-1].tensor.dim[0]=a,stack[tos-1].tensor.dim[1]=b},push_identity_matrix=function(a){var b,c,d;for(push_zero_matrix(a,a),b=0,b=c=0,d=a;0<=d?c<d:c>d;b=0<=d?++c:--c)stack[tos-1].tensor.elem[b*a+b]=one;return check_tensor_dimensions(stack[tos-1])},push_cars=function(a){var b;for(b=[];iscons(a);)push(car(a)),b.push(a=cdr(a));return b},peek=function(){return save(),p1=pop(),push(p1),restore()},equal=function(a,b){return 0===cmp_expr(a,b)?1:0},lessp=function(a,b){return cmp_expr(a,b)<0?1:0},sign=function(a){return a<0?-1:a>0?1:0},cmp_expr=function(a,b){var c;if(c=0,a===b)return 0;if(a===symbol(NIL))return-1;if(b===symbol(NIL))return 1;if(isnum(a)&&isnum(b))return sign(compare_numbers(a,b));if(isnum(a))return-1;if(isnum(b))return 1;if(isstr(a)&&isstr(b))return sign(strcmp(a.str,b.str));if(isstr(a))return-1;if(isstr(b))return 1;if(issymbol(a)&&issymbol(b))return sign(strcmp(get_printname(a),get_printname(b)));if(issymbol(a))return-1;if(issymbol(b))return 1;if(istensor(a)&&istensor(b))return compare_tensors(a,b);if(istensor(a))return-1;if(istensor(b))return 1;for(;iscons(a)&&iscons(b);){if(0!==(c=cmp_expr(car(a),car(b))))return c;a=cdr(a),b=cdr(b)}return iscons(b)?-1:iscons(a)?1:0},length=function(a){var b;for(b=0;iscons(a);)a=cdr(a),b++;return b},unique=function(a){return save(),p1=symbol(NIL),p2=symbol(NIL),unique_f(a),p2!==symbol(NIL)&&(p1=symbol(NIL)),a=p1,restore(),a},unique_f=function(a){if(isstr(a))return void(p1===symbol(NIL)?p1=a:a!==p1&&(p2=a));for(;iscons(a);){if(unique_f(car(a)),p2!==symbol(NIL))return;a=cdr(a)}},ssqrt=function(){return push_rational(1,2),power()},yyexpand=function(){var a;return a=expanding,expanding=1,Eval(),expanding=a},exponential=function(){return push_symbol(E),swap(),power()},square=function(){return push_integer(2),power()},sort_stack=function(a){var b,c;return b=tos-a,c=stack.slice(b,b+a),c.sort(cmp_expr),stack=stack.slice(0,b).concat(c).concat(stack.slice(b+a))},$.equal=equal,$.length=length,mmul=function(a,b){return a.multiply(b)},mdiv=function(a,b){return a.divide(b)},mmod=function(a,b){return a.mod(b)},mdivrem=function(a,b){var c;return c=a.divmod(b),[c.quotient,c.remainder]},Eval_mod=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),mod()},mod=function(){var a;return a=0,save(),p2=pop(),p1=pop(),iszero(p2)&&stop("mod function: divide by zero"),isnum(p1)&&isnum(p2)?(isdouble(p1)&&(push(p1),a=pop_integer(),isNaN(a)&&stop("mod function: cannot convert float value to integer"),push_integer(a),p1=pop()),isdouble(p2)&&(push(p2),a=pop_integer(),isNaN(a)&&stop("mod function: cannot convert float value to integer"),push_integer(a),p2=pop()),isinteger(p1)&&isinteger(p2)||stop("mod function: integer arguments expected"),p3=new U,p3.k=NUM,p3.q.a=mmod(p1.q.a,p2.q.a),p3.q.b=mint(1),push(p3),restore()):(push_symbol(MOD),push(p1),push(p2),list(3),void restore())},mpow=function(a,b){return a.pow(b)},mprime=function(a){return a.isProbablePrime()},mroot=function(a,b){var c,d,e,f,g,h,i;for(a=a.abs(),c=0,d=0,e=0,0===b&&stop("root index is zero"),e=0;a.shiftRight(e)>0;)e++;if(0===e)return mint(0);for(e=Math.floor((e-1)/b),d=Math.floor(e/32+1),h=bigInt(d),c=f=0,g=d;0<=g?f<g:f>g;c=0<=g?++f:--f)h=h.and(bigInt(1).shiftLeft(c).not());for(;e>=0;){switch(h=h.or(bigInt(1).shiftLeft(e)),i=mpow(h,b),mcmp(i,a)){case 0:return h;case 1:h=h.and(bigInt(1).shiftLeft(e).not())}e--}return 0},Eval_multiply=function(){var a;for(push(cadr(p1)),Eval(),p1=cddr(p1),a=[];iscons(p1);)push(car(p1)),Eval(),multiply(),a.push(p1=cdr(p1));return a},multiply=function(){return esc_flag&&stop("escape key stop"),isnum(stack[tos-2])&&isnum(stack[tos-1])?multiply_numbers():(save(),yymultiply(),restore())},yymultiply=function(){var a,b,c,d,e,f;if(a=0,b=0,c=0,p2=pop(),p1=pop(),a=tos,iszero(p1)||iszero(p2))return void(evaluatingAsFloats?push_double(0):push(zero));if(expanding&&isadd(p1))for(p1=cdr(p1),evaluatingAsFloats?push_double(0):push(zero);iscons(p1);)push(car(p1)),push(p2),multiply(),add(),p1=cdr(p1);else if(expanding&&isadd(p2))for(p2=cdr(p2),evaluatingAsFloats?push_double(0):push(zero);iscons(p2);)push(p1),push(car(p2)),multiply(),add(),p2=cdr(p2);else{if(!istensor(p1)&&istensor(p2))return push(p1),push(p2),void scalar_times_tensor();if(istensor(p1)&&!istensor(p2))return push(p1),push(p2),void tensor_times_scalar();for(car(p1)===symbol(MULTIPLY)?p1=cdr(p1):(push(p1),list(1),p1=pop()),car(p2)===symbol(MULTIPLY)?p2=cdr(p2):(push(p2),list(1),p2=pop()),isnum(car(p1))&&isnum(car(p2))?(push(car(p1)),push(car(p2)),multiply_numbers(),p1=cdr(p1),p2=cdr(p2)):isnum(car(p1))?(push(car(p1)),p1=cdr(p1)):isnum(car(p2))?(push(car(p2)),p2=cdr(p2)):evaluatingAsFloats?push_double(1):push(one),parse_p1(),parse_p2();iscons(p1)&&iscons(p2);)if(caar(p1)!==symbol(OPERATOR)||caar(p2)!==symbol(OPERATOR))switch(cmp_expr(p3,p4)){case-1:push(car(p1)),p1=cdr(p1),parse_p1();break;case 1:push(car(p2)),p2=cdr(p2),parse_p2();break;case 0:combine_factors(a),p1=cdr(p1),p2=cdr(p2),parse_p1(),parse_p2();break;default:stop("internal error 2")}else push_symbol(OPERATOR),push(cdar(p1)),push(cdar(p2)),append(),cons(),p1=cdr(p1),p2=cdr(p2),parse_p1(),parse_p2();for(;iscons(p1);)push(car(p1)),p1=cdr(p1);for(;iscons(p2);)push(car(p2)),p2=cdr(p2);if(__normalize_radical_factors(a),expanding)for(b=d=e=a,f=tos;e<=f?d<f:d>f;b=e<=f?++d:--d)if(isadd(stack[b]))return void multiply_all(tos-a);if(1!==(c=tos-a))return isrational(stack[a])&&equaln(stack[a],1)?void(2===c?(p7=pop(),pop(),push(p7)):(stack[a]=symbol(MULTIPLY),list(c))):(list(c),p7=pop(),push_symbol(MULTIPLY),push(p7),cons())}},parse_p1=function(){if(p3=car(p1),p5=evaluatingAsFloats?one_as_double:one,car(p3)===symbol(POWER))return p5=caddr(p3),p3=cadr(p3)},parse_p2=function(){if(p4=car(p2),p6=evaluatingAsFloats?one_as_double:one,car(p4)===symbol(POWER))return p6=caddr(p4),p4=cadr(p4)},combine_factors=function(a){return push(p4),push(p5),push(p6),add(),power(),p7=pop(),isnum(p7)?(push(stack[a]),push(p7),multiply_numbers(),stack[a]=pop()):car(p7)===symbol(MULTIPLY)&&isnum(cadr(p7))&&cdddr(p7)===symbol(NIL)?(push(stack[a]),push(cadr(p7)),multiply_numbers(),stack[a]=pop(),push(caddr(p7))):push(p7)},gp=[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,-6,-7,-8,-3,-4,-5,13,14,15,-16,9,10,11,-12],[0,0,6,-1,-11,10,-2,-15,14,12,-5,4,-9,16,-8,7,-13],[0,0,7,11,-1,-9,15,-2,-13,5,12,-3,-10,8,16,-6,-14],[0,0,8,-10,9,-1,-14,13,-2,-4,3,12,-11,-7,6,16,-15],[0,0,3,2,15,-14,1,11,-10,16,-8,7,13,12,-5,4,9],[0,0,4,-15,2,13,-11,1,9,8,16,-6,14,5,12,-3,10],[0,0,5,14,-13,2,10,-9,1,-7,6,16,15,-4,3,12,11],[0,0,13,12,-5,4,16,-8,7,-1,-11,10,-3,-2,-15,14,-6],[0,0,14,5,12,-3,8,16,-6,11,-1,-9,-4,15,-2,-13,-7],[0,0,15,-4,3,12,-7,6,16,-10,9,-1,-5,-14,13,-2,-8],[0,0,16,-9,-10,-11,-13,-14,-15,-3,-4,-5,1,-6,-7,-8,2],[0,0,9,-16,8,-7,-12,5,-4,-2,-15,14,6,-1,-11,10,3],[0,0,10,-8,-16,6,-5,-12,3,15,-2,-13,7,11,-1,-9,4],[0,0,11,7,-6,-16,4,-3,-12,-14,13,-2,8,-10,9,-1,5],[0,0,12,13,14,15,9,10,11,-6,-7,-8,-2,-3,-4,-5,-1]],combine_gammas=function(a){var b;if(b=gp[Math.floor(p1.gamma)][Math.floor(p2.gamma)],b<0&&(b=-b,push(stack[a]),negate(),stack[a]=pop()),b>1)return push(_gamma[b])},multiply_noexpand=function(){var a;return a=expanding,expanding=0,multiply(),expanding=a},multiply_all=function(a){var b,c,d,e;if(c=0,1!==a){if(0===a)return void push(evaluatingAsFloats?one_as_double:one);for(b=tos-a,push(stack[b]),c=d=1,e=a;1<=e?d<e:d>e;c=1<=e?++d:--d)push(stack[b+c]),multiply();return stack[b]=pop(),tos=b+1}},multiply_all_noexpand=function(a){var b;return b=expanding,expanding=0,multiply_all(a),expanding=b},divide=function(){return isnum(stack[tos-2])&&isnum(stack[tos-1])?divide_numbers():(inverse(),multiply())},inverse=function(){return isnum(stack[tos-1])?invert_number():(push_integer(-1),power())},reciprocate=function(){return inverse()},negate=function(){return isnum(stack[tos-1])?negate_number():(evaluatingAsFloats?push_double(-1):push_integer(-1),multiply())},negate_expand=function(){var a;return a=expanding,expanding=1,negate(),expanding=a},negate_noexpand=function(){var a;return a=expanding,expanding=0,negate(),expanding=a},__normalize_radical_factors=function(a){var b,c,d,e,f,g,h,i,j,k;if(d=0,!(isplusone(stack[a])||isminusone(stack[a])||isdouble(stack[a]))){for(d=e=f=a+1,g=tos;(f<=g?e<g:e>g)&&!__is_radical_number(stack[d]);d=f<=g?++e:--e);if(d!==tos){for(save(),push(stack[a]),mp_numerator(),p1=pop(),d=b=h=a+1,i=tos;(h<=i?b<i:b>i)&&(!isplusone(p1)&&!isminusone(p1));d=h<=i?++b:--b)__is_radical_number(stack[d])&&(p3=cadr(stack[d]),p4=caddr(stack[d]),isnegativenumber(p4)&&(push(p1),push(p3),divide(),p5=pop(),isinteger(p5)&&(p1=p5,push_symbol(POWER),push(p3),push(evaluatingAsFloats?one_as_double:one),push(p4),add(),list(3),stack[d]=pop())));for(push(stack[a]),mp_denominator(),p2=pop(),d=c=j=a+1,k=tos;(j<=k?c<k:c>k)&&!isplusone(p2);d=j<=k?++c:--c)if(__is_radical_number(stack[d])&&(p3=cadr(stack[d]),p4=caddr(stack[d]),!isnegativenumber(p4)&&(push(p2),push(p3),divide(),p5=pop(),isinteger(p5)))){if(p2=p5,push_symbol(POWER),push(p3),push(p4),push(one),subtract(),dontCreateNewRadicalsInDenominatorWhenEvalingMultiplication&&isinteger(p3)&&!isinteger(stack[tos-1])&&isnegativenumber(stack[tos-1])){pop(),pop(),pop(),push(p1),push(p3),divide(),p1=pop();break}list(3),stack[d]=pop()}return push(p1),push(p2),divide(),stack[a]=pop(),restore()}}},__is_radical_number=function(a){return car(a)===symbol(POWER)&&isnum(cadr(a))&&isnum(caddr(a))&&!isminusone(cadr(a))?1:0},NROOTS_YMAX=101,NROOTS_DELTA=1e-6,NROOTS_EPSILON=1e-9,NROOTS_ABS=function(a){return Math.sqrt(a.r*a.r+a.i*a.i)},theRandom=0,NROOTS_RANDOM=function(){return 4*Math.random()-2},numericRootOfPolynomial=function(){function a(){}return a.prototype.r=0,a.prototype.i=0,a}(),nroots_a=new numericRootOfPolynomial,nroots_b=new numericRootOfPolynomial,nroots_x=new numericRootOfPolynomial,nroots_y=new numericRootOfPolynomial,nroots_fa=new numericRootOfPolynomial,nroots_fb=new numericRootOfPolynomial,nroots_dx=new numericRootOfPolynomial,nroots_df=new numericRootOfPolynomial,nroots_c=[],initNRoots=o=0,ref=NROOTS_YMAX;0<=ref?o<ref:o>ref;initNRoots=0<=ref?++o:--o)nroots_c[initNRoots]=new numericRootOfPolynomial;for(Eval_nroots=function(){var a,b,c,d,e,f,g,h,j;for(d=0,e=0,f=0,g=0,push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),p2=pop(),p2===symbol(NIL)?guess():push(p2),p2=pop(),p1=pop(),ispoly(p1,p2)||stop("nroots: polynomial?"),d=tos,push(p1),push(p2),g=coeff(),g>NROOTS_YMAX&&stop("nroots: degree?"),e=a=0,h=g;0<=h?a<h:a>h;e=0<=h?++a:--a)push(stack[d+e]),real(),yyfloat(),Eval(),p1=pop(),push(stack[d+e]),imag(),yyfloat(),Eval(),p2=pop(),isdouble(p1)&&isdouble(p2)||stop("nroots: coefficients?"),nroots_c[e].r=p1.d,nroots_c[e].i=p2.d;for(tos=d,monic(g),f=b=g;b>1;f=b+=-1)findroot(f),Math.abs(nroots_a.r)<NROOTS_DELTA&&(nroots_a.r=0),Math.abs(nroots_a.i)<NROOTS_DELTA&&(nroots_a.i=0),push_double(nroots_a.r),push_double(nroots_a.i),push(imaginaryunit),multiply(),add(),NROOTS_divpoly(f);if((g=tos-d)>1){for(sort_stack(g),p1=alloc_tensor(g),p1.tensor.ndim=1,p1.tensor.dim[0]=g,e=c=0,j=g;0<=j?c<j:c>j;e=0<=j?++c:--c)p1.tensor.elem[e]=stack[d+e];return tos=d,push(p1)}},monic=function(a){var b,c,d,e;for(c=0,e=0,nroots_y.r=nroots_c[a-1].r,nroots_y.i=nroots_c[a-1].i,e=nroots_y.r*nroots_y.r+nroots_y.i*nroots_y.i,c=b=0,d=a-1;0<=d?b<d:b>d;c=0<=d?++b:--b)nroots_c[c].r=(nroots_c[c].r*nroots_y.r+nroots_c[c].i*nroots_y.i)/e,nroots_c[c].i=(nroots_c[c].i*nroots_y.r-nroots_c[c].r*nroots_y.i)/e;return nroots_c[a-1].r=1,nroots_c[a-1].i=0},findroot=function(a){var b,c,f,g;if(0,0,g=0,NROOTS_ABS(nroots_c[0])<NROOTS_DELTA)return nroots_a.r=0,void(nroots_a.i=0);for(b=0;b<100;++b)for(nroots_a.r=NROOTS_RANDOM(),nroots_a.i=NROOTS_RANDOM(),compute_fa(a),nroots_b.r=nroots_a.r,nroots_b.i=nroots_a.i,nroots_fb.r=nroots_fa.r,nroots_fb.i=nroots_fa.i,nroots_a.r=NROOTS_RANDOM(),nroots_a.i=NROOTS_RANDOM(),c=0;c<1e3;++c){if(compute_fa(a),f=NROOTS_ABS(nroots_fa),DEBUG&&console.log("nrabs: "+f),f<NROOTS_EPSILON)return;if(NROOTS_ABS(nroots_fa)<NROOTS_ABS(nroots_fb)&&(nroots_x.r=nroots_a.r,nroots_x.i=nroots_a.i,nroots_a.r=nroots_b.r,nroots_a.i=nroots_b.i,nroots_b.r=nroots_x.r,nroots_b.i=nroots_x.i,nroots_x.r=nroots_fa.r,nroots_x.i=nroots_fa.i,nroots_fa.r=nroots_fb.r,nroots_fa.i=nroots_fb.i,nroots_fb.r=nroots_x.r,nroots_fb.i=nroots_x.i),nroots_dx.r=nroots_b.r-nroots_a.r,nroots_dx.i=nroots_b.i-nroots_a.i,nroots_df.r=nroots_fb.r-nroots_fa.r,nroots_df.i=nroots_fb.i-nroots_fa.i,0===(g=nroots_df.r*nroots_df.r+nroots_df.i*nroots_df.i))break;nroots_y.r=(nroots_dx.r*nroots_df.r+nroots_dx.i*nroots_df.i)/g,nroots_y.i=(nroots_dx.i*nroots_df.r-nroots_dx.r*nroots_df.i)/g,nroots_a.r=nroots_b.r-(nroots_y.r*nroots_fb.r-nroots_y.i*nroots_fb.i),nroots_a.i=nroots_b.i-(nroots_y.r*nroots_fb.i+nroots_y.i*nroots_fb.r)}return stop("nroots: convergence error")},compute_fa=function(a){var b,c,d,e,f;for(c=0,f=0,nroots_x.r=nroots_a.r,nroots_x.i=nroots_a.i,nroots_fa.r=nroots_c[0].r+nroots_c[1].r*nroots_x.r-nroots_c[1].i*nroots_x.i,nroots_fa.i=nroots_c[0].i+nroots_c[1].r*nroots_x.i+nroots_c[1].i*nroots_x.r,e=[],c=b=2,d=a;2<=d?b<d:b>d;c=2<=d?++b:--b)f=nroots_a.r*nroots_x.r-nroots_a.i*nroots_x.i,nroots_x.i=nroots_a.r*nroots_x.i+nroots_a.i*nroots_x.r,nroots_x.r=f,nroots_fa.r+=nroots_c[c].r*nroots_x.r-nroots_c[c].i*nroots_x.i,e.push(nroots_fa.i+=nroots_c[c].r*nroots_x.i+nroots_c[c].i*nroots_x.r);return e},NROOTS_divpoly=function(a){var b,c,d,e,f,g;for(d=0,d=b=e=a-1;e<=0?b<0:b>0;d=e<=0?++b:--b)nroots_c[d-1].r+=nroots_c[d].r*nroots_a.r-nroots_c[d].i*nroots_a.i,nroots_c[d-1].i+=nroots_c[d].i*nroots_a.r+nroots_c[d].r*nroots_a.i;for(NROOTS_ABS(nroots_c[0])>NROOTS_DELTA&&stop("nroots: residual error"),g=[],d=c=0,f=a-1;0<=f?c<f:c>f;d=0<=f?++c:--c)nroots_c[d].r=nroots_c[d+1].r,g.push(nroots_c[d].i=nroots_c[d+1].i);return g},Eval_numerator=function(){return push(cadr(p1)),Eval(),numerator()},numerator=function(){var a;if(a=0,save(),p1=pop(),car(p1)===symbol(ADD)&&(push(p1),rationalize(),p1=pop()),car(p1)===symbol(MULTIPLY)){for(a=tos,p1=cdr(p1);iscons(p1);)push(car(p1)),numerator(),p1=cdr(p1);multiply_all(tos-a)}else isrational(p1)?(push(p1),mp_numerator()):push(car(p1)===symbol(POWER)&&isnegativeterm(caddr(p1))?one:p1);return restore()},Eval_outer=function(){var a;for(p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),a=[];iscons(p1);)push(car(p1)),Eval(),outer(),a.push(p1=cdr(p1));return a},outer=function(){return save(),p2=pop(),p1=pop(),istensor(p1)&&istensor(p2)?yyouter():(push(p1),push(p2),istensor(p1)?tensor_times_scalar():istensor(p2)?scalar_times_tensor():multiply()),restore()},yyouter=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m;for(e=0,f=0,g=0,h=0,i=0,h=p1.tensor.ndim+p2.tensor.ndim,h>MAXDIM&&stop("outer: rank of result exceeds maximum"),i=p1.tensor.nelem*p2.tensor.nelem,p3=alloc_tensor(i),p3.tensor.ndim=h,e=a=0,j=p1.tensor.ndim;0<=j?a<j:a>j;e=0<=j?++a:--a)p3.tensor.dim[e]=p1.tensor.dim[e];for(f=e,e=b=0,k=p2.tensor.ndim;0<=k?b<k:b>k;e=0<=k?++b:--b)p3.tensor.dim[f+e]=p2.tensor.dim[e];for(g=0,e=c=0,l=p1.tensor.nelem;0<=l?c<l:c>l;e=0<=l?++c:--c)for(f=d=0,m=p2.tensor.nelem;0<=m?d<m:d>m;f=0<=m?++d:--d)push(p1.tensor.elem[e]),push(p2.tensor.elem[f]),multiply(),p3.tensor.elem[g++]=pop();return push(p3)},partition=function(){for(save(),p2=pop(),p1=pop(),push_integer(1),p3=pop(),p4=p3,p1=cdr(p1);iscons(p1);)Find(car(p1),p2)?(push(p4),push(car(p1)),multiply(),p4=pop()):(push(p3),push(car(p1)),multiply(),p3=pop()),p1=cdr(p1);return push(p3),push(p4),restore()},Eval_silentpattern=function(){return Eval_pattern(),pop(),push_symbol(NIL)},Eval_pattern=function(){var a,b,c,d,e;return iscons(cdr(p1))||stop("pattern needs at least a template and a transformed version"),a=car(cdr(p1)),c=car(cdr(cdr(p1))),c===symbol(NIL)&&stop("pattern needs at least a template and a transformed version"),e=iscons(cdr(cdr(p1)))?car(cdr(cdr(cdr(p1)))):symbol(NIL),equal(a,c)&&stop("recursive pattern"),d="template: "+print_list(a),d+=" tests: "+print_list(e),DEBUG&&console.log("pattern stringkey: "+d),b=userSimplificationsInStringForm.indexOf(d),-1===b?(userSimplificationsInStringForm.push(d),userSimplificationsInListForm.push(cdr(p1))):(DEBUG&&console.log("pattern already exists, replacing. "+cdr(p1)),userSimplificationsInStringForm[b]=d,userSimplificationsInListForm[b]=cdr(p1)),push_symbol(PATTERN),push(cdr(p1)),list(2)},do_clearPatterns=function(){return userSimplificationsInListForm=[],userSimplificationsInStringForm=[]},Eval_clearpatterns=function(){return do_clearPatterns(),push_symbol(NIL)},Eval_patternsinfo=function(){var a;return a=patternsinfo(),""!==a?new_string(a):push_symbol(NIL)},patternsinfo=function(){var a,c,d;for(d="",a=0,c=userSimplificationsInListForm.length;a<c;a++)userSimplificationsInListForm[a],d+=userSimplificationsInListForm+"\n";return d},Eval_polar=function(){return push(cadr(p1)),Eval(),polar()},polar=function(){return evaluatingPolar++,save(),p1=pop(),push(p1),abs(),push(imaginaryunit),push(p1),arg(),multiply(),exponential(),multiply(),evaluatingPolar--,restore()},n_factor_number=0,factor_number=function(){var a;return a=0,save(),p1=pop(),equaln(p1,0)||equaln(p1,1)||equaln(p1,-1)?(push(p1),void restore()):(n_factor_number=p1.q.a,a=tos,factor_a(),tos-a>1&&(list(tos-a),push_symbol(MULTIPLY),swap(),cons()),restore())},factor_a=function(){var a,b;for(b=0,n_factor_number.isNegative()&&(n_factor_number=setSignTo(n_factor_number,1),push_integer(-1)),b=a=0;a<1e4;b=++a)if(try_kth_prime(b),0===n_factor_number.compare(1))return;return factor_b()},try_kth_prime=function(a){var b,c,d,e,f;for(b=0,c=mint(primetab[a]),b=0;;){if(0===n_factor_number.compare(1))return void(b&&push_factor(c,b));if(f=mdivrem(n_factor_number,c),d=f[0],e=f[1],!e.isZero())break;b++,n_factor_number=d}if(b&&push_factor(c,b),-1===mcmp(d,c))return push_factor(n_factor_number,1),n_factor_number=mint(1)},factor_b=function(){var a,b,c,d,e,f,g;for(c=0,d=0,a=mint(1),f=mint(5),g=mint(2),c=1,d=1;;){if(mprime(n_factor_number))return push_factor(n_factor_number,1),0;for(;;){if(esc_flag&&stop("esc"),e=msub(g,f),e=setSignTo(e,1),b=mgcd(e,n_factor_number),!MEQUAL(b,1)){if(push_factor(b,1),0===mcmp(b,n_factor_number))return-1;e=mdiv(n_factor_number,b),n_factor_number=e,e=mmod(f,n_factor_number),f=e,e=mmod(g,n_factor_number),g=e;break}0==--c&&(g=f,d*=2,c=d),e=mmul(f,f),f=madd(e,a),e=mmod(f,n_factor_number),f=e}}},push_factor=function(a,b){if(p1=new U,p1.k=NUM,p1.q.a=a,p1.q.b=mint(1),push(p1),b>1)return push_symbol(POWER),swap(),p1=new U,p1.k=NUM,p1.q.a=mint(b),p1.q.b=mint(1),push(p1),list(3)},DEBUG_POWER=!1,Eval_power=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),power()},power=function(){return save(),yypower(),restore()},yypower=function(){var a,b,c,d,e,f,g;if(g=0,p2=pop(),p1=pop(),d=p2,c=p1,DEBUG_POWER&&console.log("POWER: "+p1+" ^ "+p2),equal(p1,one)||iszero(p2))return evaluatingAsFloats?push_double(1):push(one),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(equal(p2,one))return push(p1),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(isminusone(p1)&&isminusone(p2))return evaluatingAsFloats?push_double(1):push(one),negate(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(isminusone(p1)&&isoneovertwo(p2))return push(imaginaryunit),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(isminusone(p1)&&isminusoneovertwo(p2))return push(imaginaryunit),negate(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(isminusone(p1)&&!isdouble(p1)&&isrational(p2)&&!isinteger(p2)&&ispositivenumber(p2)&&!evaluatingAsFloats)return DEBUG_POWER&&console.log("   power: -1 ^ rational"),DEBUG_POWER&&console.log(" trick: p2.q.a , p2.q.b "+p2.q.a+" , "+p2.q.b),p2.q.a<p2.q.b?(push_symbol(POWER),push(p1),push(p2),list(3)):(push_symbol(MULTIPLY),push(p1),push_symbol(POWER),push(p1),push_rational(p2.q.a.mod(p2.q.b),p2.q.b),list(3),list(3),DEBUG_POWER&&console.log(" trick applied : "+stack[tos-1])),rect(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(isrational(p1)&&isrational(p2))return DEBUG_POWER&&console.log("   power: isrational(p1) && isrational(p2)"),push(p1),push(p2),qpow(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(isnum(p1)&&isnum(p2))return DEBUG_POWER&&console.log("   power: both base and exponent are either rational or double "),DEBUG_POWER&&console.log("POWER - isnum(p1) && isnum(p2)"),push(p1),push(p2),dpow(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(istensor(p1))return DEBUG_POWER&&console.log("   power: istensor(p1) "),power_tensor(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(car(p1)===symbol(ABS)&&iseveninteger(p2)&&!iszero(get_binding(symbol(ASSUME_REAL_VARIABLES))))return DEBUG_POWER&&console.log("   power: even power of absolute of real value "),push(cadr(p1)),push(p2),power(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(p1===symbol(E)&&car(p2)===symbol(LOG))return push(cadr(p2)),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(p1===symbol(E)&&isdouble(p2))return DEBUG_POWER&&console.log("   power: p1 == symbol(E) && isdouble(p2) "),push_double(Math.exp(p2.d)),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(p1===symbol(E)&&0!==Find(p2,imaginaryunit)&&0!==Find(p2,symbol(PI))&&!evaluatingPolar&&(push_symbol(POWER),push(p1),push(p2),list(3),DEBUG_POWER&&console.log("   power: turning complex exponential to rect: "+stack[tos-1]),rect(),b=pop(),0===Find(b,symbol(PI))))return DEBUG_POWER&&console.log("   power: turned complex exponential to rect: "+b),void push(b);if(car(p1)===symbol(MULTIPLY)&&isinteger(p2)){for(DEBUG_POWER&&console.log("   power: (a * b) ^ c\t->\t(a ^ c) * (b ^ c) "),p1=cdr(p1),push(car(p1)),push(p2),power(),p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),power(),multiply(),p1=cdr(p1);return void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]))}if(f=!1,isnum(cadr(p1))&&(f=sign(compare_numbers(cadr(p1),zero))),car(p1)===symbol(POWER)&&(isinteger(p2)||f))return push(cadr(p1)),push(caddr(p1)),push(p2),multiply(),power(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(a=!1,iseveninteger(caddr(p1))&&(push(caddr(p1)),push(p2),multiply(),e=pop(),isone(e)&&(a=!0)),car(p1)===symbol(POWER)&&a)return DEBUG_POWER&&console.log("   power: car(p1) == symbol(POWER) && b_isEven_and_c_isItsInverse "),push(cadr(p1)),abs(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(expanding&&isadd(p1)&&isnum(p2)&&(push(p2),(g=pop_integer())>1&&!isNaN(g)))return DEBUG_POWER&&console.log("   power: expanding && isadd(p1) && isnum(p2) "),power_sum(g),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(1===trigmode&&car(p1)===symbol(SIN)&&iseveninteger(p2))return DEBUG_POWER&&console.log("   power: trigmode == 1 && car(p1) == symbol(SIN) && iseveninteger(p2) "),push_integer(1),push(cadr(p1)),cosine(),push_integer(2),power(),subtract(),push(p2),push_rational(1,2),multiply(),power(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(2===trigmode&&car(p1)===symbol(COS)&&iseveninteger(p2))return DEBUG_POWER&&console.log("   power: trigmode == 2 && car(p1) == symbol(COS) && iseveninteger(p2) "),push_integer(1),push(cadr(p1)),sine(),push_integer(2),power(),subtract(),push(p2),push_rational(1,2),multiply(),power(),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(iscomplexnumber(p1)){if(DEBUG_POWER&&console.log(" power - handling the case (a + ib) ^ n"),isinteger(p2))return push(p1),conjugate(),p3=pop(),push(p3),push(p3),push(p1),multiply(),divide(),isone(p2)||(push(p2),negate(),power()),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]));if(isnum(p2))return push(p1),abs(),push(p2),power(),push_integer(-1),push(p1),arg(),push(p2),multiply(),evaluatingAsFloats||iscomplexnumberdouble(p1)&&isdouble(p2)?push_double(Math.PI):push(symbol(PI)),divide(),power(),multiply(),avoidCalculatingPowersIntoArctans&&Find(stack[tos-1],symbol(ARCTAN))&&(pop(),push_symbol(POWER),push(p1),push(p2),list(3)),void(DEBUG_POWER&&console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]))}return simplify_polar()?void(DEBUG_POWER&&console.log("   power: using simplify_polar")):(DEBUG_POWER&&console.log("   power: nothing can be done "),push_symbol(POWER),push(p1),push(p2),list(3),DEBUG_POWER?console.log("   power of "+c+" ^ "+d+": "+stack[tos-1]):void 0)},power_sum=function(a){var b,c,d,e,f,g,h,i,j,k;for(b=[],f=0,g=0,h=0,h=length(p1)-1,push_frame(h*(a+1)),p1=cdr(p1),f=c=0,i=h;0<=i?c<i:c>i;f=0<=i?++c:--c){for(g=d=0,j=a;0<=j?d<=j:d>=j;g=0<=j?++d:--d)push(car(p1)),push_integer(g),power(),stack[frame+f*(a+1)+g]=pop();p1=cdr(p1)}for(push_integer(a),factorial(),p1=pop(),f=e=0,k=h;0<=k?e<k:e>k;f=0<=k?++e:--e)b[f]=0;return push(zero),multinomial_sum(h,a,b,0,a),pop_frame(h*(a+1))},multinomial_sum=function(a,b,c,d,e){var f,g,h,i,j,k,l;i=0;{if(!(d<a-1)){for(c[d]=e,push(p1),i=g=0,k=a;0<=k?g<k:g>k;i=0<=k?++g:--g)push_integer(c[i]),factorial(),divide();for(i=h=0,l=a;0<=l?h<l:h>l;i=0<=l?++h:--h)push(stack[frame+i*(b+1)+c[i]]),multiply();return add()}for(i=f=0,j=e;0<=j?f<=j:f>=j;i=0<=j?++f:--f)c[d]=i,multinomial_sum(a,b,c,d+1,e-i)}},simplify_polar=function(){var b;switch(b=0,b=isquarterturn(p2)){case 0:1;break;case 1:return push_integer(1),1;case 2:return push_integer(-1),1;case 3:return push(imaginaryunit),1;case 4:return push(imaginaryunit),negate(),1}if(car(p2)===symbol(ADD)){for(p3=cdr(p2);iscons(p3)&&!(b=isquarterturn(car(p3)));)p3=cdr(p3);switch(b){case 0:return 0;case 1:push_integer(1);break;case 2:push_integer(-1);break;case 3:push(imaginaryunit);break;case 4:push(imaginaryunit),negate()}return push(p2),push(car(p3)),subtract(),exponential(),multiply(),1}return 0},Eval_prime=function(){return push(cadr(p1)),Eval(),prime()},prime=function(){var a;return a=0,a=pop_integer(),(a<1||a>MAXPRIMETAB)&&stop("prime: Argument out of range."),a=primetab[a-1],push_integer(a)},power_str="^",codeGen=!1,Eval_print=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),environment_printmode),push(symbol(NIL))},Eval_print2dascii=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_2DASCII),push(symbol(NIL))},Eval_printfull=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_FULL),push(symbol(NIL))},Eval_printlatex=function(){return stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_LATEX),push(symbol(NIL))},Eval_printplain=function(){var a;return a=test_flag,test_flag=0,stringsEmittedByUserPrintouts+=_print(cdr(p1),PRINTMODE_PLAIN),test_flag=a,push(symbol(NIL))},Eval_printlist=function(){var a;return a=_print(cdr(p1),PRINTMODE_LIST),stringsEmittedByUserPrintouts+=a,push(symbol(NIL))},_print=function(a,b){var c,d;for(c="";iscons(a);)push(car(a)),Eval(),p2=pop(),d=printMode,b===PRINTMODE_FULL?(printMode=PRINTMODE_FULL,c=printline(p2),rememberPrint(c,LAST_FULL_PRINT)):b===PRINTMODE_PLAIN?(printMode=PRINTMODE_PLAIN,c=printline(p2),rememberPrint(c,LAST_PLAIN_PRINT)):b===PRINTMODE_2DASCII?(printMode=PRINTMODE_2DASCII,c=print2dascii(p2),rememberPrint(c,LAST_2DASCII_PRINT)):b===PRINTMODE_LATEX?(printMode=PRINTMODE_LATEX,c=printline(p2),rememberPrint(c,LAST_LATEX_PRINT)):b===PRINTMODE_LIST&&(printMode=PRINTMODE_LIST,c=print_list(p2),rememberPrint(c,LAST_LIST_PRINT)),printMode=d,a=cdr(a);return DEBUG&&console.log("emttedString from display: "+stringsEmittedByUserPrintouts),c},rememberPrint=function(a,b){var c;return scan('"'+a+'"'),c=pop(),set_binding(symbol(b),c)},print_str=function(a){return DEBUG&&console.log("emttedString from print_str: "+stringsEmittedByUserPrintouts),a},print_char=function(a){return a},collectLatexStringFromReturnValue=function(a){var b,c,d;return b=printMode,printMode=PRINTMODE_LATEX,c=codeGen,codeGen=!1,d=print_expr(a),d=d.replace(/_/g,"\\_"),printMode=b,codeGen=c,DEBUG&&console.log("emttedString from collectLatexStringFromReturnValue: "+stringsEmittedByUserPrintouts),d},printline=function(a){var b;return b="",b+=print_expr(a)},print_base_of_denom=function(a){var b;return b="",isfraction(a)||car(a)===symbol(ADD)||car(a)===symbol(MULTIPLY)||car(a)===symbol(POWER)||lessp(a,zero)?(b+=print_char("("),b+=print_expr(a),b+=print_char(")")):b+=print_expr(a),b},print_expo_of_denom=function(a){var b;return b="",isfraction(a)||car(a)===symbol(ADD)||car(a)===symbol(MULTIPLY)||car(a)===symbol(POWER)?(b+=print_char("("),b+=print_expr(a),b+=print_char(")")):b+=print_expr(a),b},print_denom=function(a,b){var c;return c="",save(),p1=cadr(a),p2=caddr(a),isminusone(p2)?(c+=print_base_of_denom(p1),restore(),c):(1===b&&(c+=print_char("(")),push(p2),negate(),p2=pop(),c+=print_power(p1,p2),1===b&&(c+=print_char(")")),restore(),c)},print_a_over_b=function(a){var b,c,e;for(b="",flag=0,e=0,c=0,save(),e=0,c=0,p1=cdr(a),p2=car(p1),isrational(p2)?(push(p2),mp_numerator(),absval(),p3=pop(),push(p2),mp_denominator(),p4=pop(),isplusone(p3)||e++,isplusone(p4)||c++,p1=cdr(p1)):(p3=one,p4=one);iscons(p1);)p2=car(p1),is_denominator(p2)?c++:e++,p1=cdr(p1);if(printMode===PRINTMODE_LATEX&&(b+=print_str("\\frac{")),0===e)b+=print_char("1");else for(flag=0,p1=cdr(a),isrational(car(p1))&&(p1=cdr(p1)),isplusone(p3)||(b+=print_factor(p3),flag=1);iscons(p1);)p2=car(p1),is_denominator(p2)?1:(flag&&(b+=print_multiply_sign()),b+=print_factor(p2),flag=1),p1=cdr(p1);for(b+=print_str(printMode===PRINTMODE_LATEX?"}{":printMode!==PRINTMODE_PLAIN||test_flag?"/":" / "),c>1&&printMode!==PRINTMODE_LATEX&&(b+=print_char("(")),flag=0,p1=cdr(a),isrational(car(p1))&&(p1=cdr(p1)),isplusone(p4)||(b+=print_factor(p4),flag=1);iscons(p1);)p2=car(p1),is_denominator(p2)&&(flag&&(b+=print_multiply_sign()),b+=print_denom(p2,c),flag=1),p1=cdr(p1);return c>1&&printMode!==PRINTMODE_LATEX&&(b+=print_char(")")),printMode===PRINTMODE_LATEX&&(b+=print_str("}")),restore(),b},print_expr=function(a){var b;if(b="",isadd(a))for(a=cdr(a),"-"===sign_of_term(car(a))&&(b+=print_str("-")),b+=print_term(car(a)),a=cdr(a);iscons(a);)"+"===sign_of_term(car(a))?b+=print_str(printMode!==PRINTMODE_PLAIN||test_flag?"+":" + "):b+=print_str(printMode!==PRINTMODE_PLAIN||test_flag?"-":" - "),b+=print_term(car(a)),a=cdr(a);else"-"===sign_of_term(a)&&(b+=print_str("-")),b+=print_term(a);return b},sign_of_term=function(a){var b;return b="",car(a)===symbol(MULTIPLY)&&isnum(cadr(a))&&lessp(cadr(a),zero)?b+="-":isnum(a)&&lessp(a,zero)?b+="-":b+="+",b},print_term=function(a){var b,c;if(b="",car(a)===symbol(MULTIPLY)&&any_denominators(a))return b+=print_a_over_b(a);if(car(a)===symbol(MULTIPLY))for(a=cdr(a),isminusone(car(a))&&(a=cdr(a)),c=!1,isnum(car(a))&&(c=!0),b+=print_factor(car(a)),a=cdr(a);iscons(a);)printMode===PRINTMODE_LATEX&&c&&caar(a)===symbol(POWER)&&isnum(car(cdr(car(a))))&&(isfraction(car(cdr(cdr(car(a)))))||(b+=" \\cdot ")),b+=print_multiply_sign(),b+=print_factor(car(a)),c=!1,isnum(car(a))&&(c=!0),a=cdr(a);else b+=print_factor(a);return b},print_subexpr=function(a){var b;return b="",b+=print_char("("),b+=print_expr(a),b+=print_char(")")},print_factorial_function=function(a){var b;return b="",a=cadr(a),car(a)===symbol(ADD)||car(a)===symbol(MULTIPLY)||car(a)===symbol(POWER)||car(a)===symbol(FACTORIAL)?b+=print_subexpr(a):b+=print_expr(a),b+=print_char("!")},print_ABS_latex=function(a){var b;return b="",b+=print_str("\\left |"),b+=print_expr(cadr(a)),b+=print_str(" \\right |")},print_BINOMIAL_latex=function(a){var b;return b="",b+=print_str("\\binom{"),b+=print_expr(cadr(a)),b+=print_str("}{"),b+=print_expr(caddr(a)),b+=print_str("} ")},print_DOT_latex=function(a){var b;return b="",b+=print_expr(cadr(a)),b+=print_str(" \\cdot "),b+=print_expr(caddr(a))},print_DOT_codegen=function(a){var b;return b="dot(",b+=print_expr(cadr(a)),b+=", ",b+=print_expr(caddr(a)),b+=")"},print_SIN_codegen=function(a){var b;return b="Math.sin(",b+=print_expr(cadr(a)),b+=")"},print_COS_codegen=function(a){var b;return b="Math.cos(",b+=print_expr(cadr(a)),b+=")"},print_SQRT_latex=function(a){var b;return b="",b+=print_str("\\sqrt{"),b+=print_expr(cadr(a)),b+=print_str("} ")},print_TRANSPOSE_latex=function(a){var b;return b="",b+=print_str("{"),iscons(cadr(a))&&(b+=print_str("(")),b+=print_expr(cadr(a)),iscons(cadr(a))&&(b+=print_str(")")),b+=print_str("}"),b+=print_str("^T")},print_TRANSPOSE_codegen=function(a){var b;return b="",b+=print_str("transpose("),b+=print_expr(cadr(a)),b+=print_str(")")},print_INV_latex=function(a){var b;return b="",b+=print_str("{"),iscons(cadr(a))&&(b+=print_str("(")),b+=print_expr(cadr(a)),iscons(cadr(a))&&(b+=print_str(")")),b+=print_str("}"),b+=print_str("^{-1}")},print_INV_codegen=function(a){var b;return b="",b+=print_str("inv("),b+=print_expr(cadr(a)),b+=print_str(")")},print_DEFINT_latex=function(a){var b,c,d,e,f,g,h,i,j;for(c="",d=car(cdr(a)),a=cdr(a),g=a,f=0;iscons(cdr(cdr(a)));)f++,i=cdr(cdr(a)),c+=print_str("\\int^{"),c+=print_expr(car(cdr(i))),c+=print_str("}_{"),c+=print_expr(car(i)),c+=print_str("} \\! "),a=cdr(i);for(c+=print_expr(d),c+=print_str(" \\,"),a=g,e=b=1,h=f;1<=h?b<=h:b>=h;e=1<=h?++b:--b)j=cdr(a),c+=print_str(" \\mathrm{d} "),c+=print_expr(car(j)),e<f&&(c+=print_str(" \\, ")),a=cdr(cdr(j));return c},print_tensor=function(a){var b;return b="",b+=print_tensor_inner(a,0,0)[1]},print_tensor_inner=function(a,b,c){var d,e,f,g,h,i,j,k;if(e="",e+=print_str("["),b<a.tensor.ndim-1)for(g=d=0,h=a.tensor.dim[b];0<=h?d<h:d>h;g=0<=h?++d:--d)i=print_tensor_inner(a,b+1,c),c=i[0],k=i[1],e+=k,g!==a.tensor.dim[b]-1&&(e+=print_str(","));else for(g=f=0,j=a.tensor.dim[b];0<=j?f<j:f>j;g=0<=j?++f:--f)e+=print_expr(a.tensor.elem[c]),g!==a.tensor.dim[b]-1&&(e+=print_str(",")),c++;return e+=print_str("]"),[c,e]},print_tensor_latex=function(a){var b;return b="",a.tensor.ndim<=2&&(b+=print_tensor_inner_latex(!0,a,0,0)[1]),b},print_tensor_inner_latex=function(a,b,c,d){var e,f,g,h,i,j,k,l;if(f="",a&&(f+="\\begin{bmatrix} "),c<b.tensor.ndim-1)for(h=e=0,i=b.tensor.dim[c];0<=i?e<i:e>i;h=0<=i?++e:--e)j=print_tensor_inner_latex(0,b,c+1,d),d=j[0],l=j[1],f+=l,h!==b.tensor.dim[c]-1&&(f+=print_str(called_from_Algebra_block?" \\\\\\ ":" \\\\ "));else for(h=g=0,k=b.tensor.dim[c];0<=k?g<k:g>k;h=0<=k?++g:--g)f+=print_expr(b.tensor.elem[d]),h!==b.tensor.dim[c]-1&&(f+=print_str(" & ")),d++;return a&&(f+=" \\end{bmatrix}"),[d,f]},print_base=function(a){var b;return b="",isadd(cadr(a))||caadr(a)===symbol(MULTIPLY)||caadr(a)===symbol(POWER)||isnegativenumber(cadr(a))?(b+=print_str("("),b+=print_expr(cadr(a)),b+=print_str(")")):isnum(cadr(a))&&(lessp(cadr(a),zero)||isfraction(cadr(a)))?(b+=print_str("("),b+=print_factor(cadr(a)),b+=print_str(")")):b+=print_factor(cadr(a)),b},print_exponent=function(a){var b;return b="",iscons(caddr(a))||isfraction(caddr(a))||isnum(caddr(a))&&lessp(caddr(a),zero)?(b+=print_str("("),b+=print_expr(caddr(a)),b+=print_str(")")):b+=print_factor(caddr(a)),b},print_power=function(a,b){var c,d,e,f;if(c="",DEBUG&&console.log("power base: "+a+"  exponent: "+b),isoneovertwo(b))if(equaln(a,2)){if(codeGen)return c+=print_str("Math.SQRT2")}else{if(printMode===PRINTMODE_LATEX)return c+=print_str("\\sqrt{"),c+=print_expr(a),c+=print_str("}");if(codeGen)return c+=print_str("Math.sqrt("),c+=print_expr(a),c+=print_str(")")}if(equaln(get_binding(symbol(PRINT_LEAVE_E_ALONE)),1)&&a===symbol(E))return codeGen?(c+=print_str("Math.exp("),c+=print_expo_of_denom(b),c+=print_str(")")):(printMode===PRINTMODE_LATEX?(c+=print_str("e^{"),c+=print_expr(b),c+=print_str("}")):(c+=print_str("exp("),c+=print_expr(b),c+=print_str(")")),c);if(codeGen)return c+=print_str("Math.pow("),c+=print_base_of_denom(a),c+=print_str(", "),c+=print_expo_of_denom(b),c+=print_str(")");if(equaln(get_binding(symbol(PRINT_LEAVE_X_ALONE)),0)||"x"!==a.printname){if(a!==symbol(E)){if(isminusone(b))return c+=print_str(printMode===PRINTMODE_LATEX?"\\frac{1}{":printMode!==PRINTMODE_PLAIN||test_flag?"1/":"1 / "),iscons(a)&&printMode!==PRINTMODE_LATEX?(c+=print_str("("),c+=print_expr(a),c+=print_str(")")):c+=print_expr(a),printMode===PRINTMODE_LATEX&&(c+=print_str("}")),c;if(isnegativeterm(b))return c+=print_str(printMode===PRINTMODE_LATEX?"\\frac{1}{":printMode!==PRINTMODE_PLAIN||test_flag?"1/":"1 / "),push(b),push_integer(-1),multiply(),e=pop(),iscons(a)&&printMode!==PRINTMODE_LATEX?(c+=print_str("("),c+=print_power(a,e),c+=print_str(")")):c+=print_power(a,e),printMode===PRINTMODE_LATEX&&(c+=print_str("}")),c}if(isfraction(b)&&printMode===PRINTMODE_LATEX)return c+=print_str("\\sqrt"),push(b),denominator(),d=pop(),isplustwo(d)||(c+=print_str("["),c+=print_expr(d),c+=print_str("]")),c+=print_str("{"),push(b),numerator(),f=pop(),b=f,c+=print_power(a,b),c+=print_str("}")}return printMode===PRINTMODE_LATEX&&isplusone(b)?c+=print_expr(a):(isadd(a)||isnegativenumber(a)?(c+=print_str("("),c+=print_expr(a),c+=print_str(")")):car(a)===symbol(MULTIPLY)||car(a)===symbol(POWER)?(printMode!==PRINTMODE_LATEX&&(c+=print_str("(")),c+=print_factor(a,!0),printMode!==PRINTMODE_LATEX&&(c+=print_str(")"))):isnum(a)&&(lessp(a,zero)||isfraction(a))?(c+=print_str("("),c+=print_factor(a),c+=print_str(")")):c+=print_factor(a),c+=print_str(printMode!==PRINTMODE_PLAIN||test_flag?"^":power_str),printMode===PRINTMODE_LATEX?print_expr(b).length>1?(c+=print_str("{"),c+=print_expr(b),c+=print_str("}")):c+=print_expr(b):iscons(b)||isfraction(b)||isnum(b)&&lessp(b,zero)?(c+=print_str("("),c+=print_expr(b),c+=print_str(")")):c+=print_factor(b)),c},print_index_function=function(a){var b;if(b="",a=cdr(a),caar(a)===symbol(ADD)||caar(a)===symbol(MULTIPLY)||caar(a)===symbol(POWER)||caar(a)===symbol(FACTORIAL)?b+=print_subexpr(car(a)):b+=print_expr(car(a)),b+=print_str("["),a=cdr(a),iscons(a))for(b+=print_expr(car(a)),a=cdr(a);iscons(a);)b+=print_str(","),b+=print_expr(car(a)),a=cdr(a);return b+=print_str("]")},print_factor=function(a,b){var c,d,e,f,g,h;if(c="",isnum(a))return c+=print_number(a,!1);if(isstr(a))return c+=print_str('"'),c+=print_str(a.str),c+=print_str('"');if(istensor(a))return c+=printMode===PRINTMODE_LATEX?print_tensor_latex(a):print_tensor(a);if(car(a)===symbol(MULTIPLY))return b||"-"!==sign_of_term(a)&&printMode===PRINTMODE_LATEX||(c+=print_str(printMode===PRINTMODE_LATEX?" \\left (":"(")),c+=print_expr(a),b||"-"!==sign_of_term(a)&&printMode===PRINTMODE_LATEX||(c+=print_str(printMode===PRINTMODE_LATEX?" \\right ) ":")")),c;if(isadd(a))return b||(c+=print_str("(")),c+=print_expr(a),b||(c+=print_str(")")),c;if(car(a)===symbol(POWER))return d=cadr(a),e=caddr(a),c+=print_power(d,e);if(car(a)===symbol(FUNCTION))return f=cadr(a),codeGen||(g=caddr(a),c+=print_str("function "),DEBUG&&console.log("emittedString from print_factor "+stringsEmittedByUserPrintouts),h=print_list(g),c+=h,c+=print_str(" -> ")),c+=print_expr(f);if(car(a)===symbol(PATTERN))return c+=print_expr(caadr(a)),c+=print_str(printMode===PRINTMODE_LATEX?" \\rightarrow ":printMode!==PRINTMODE_PLAIN||test_flag?"->":" -> "),c+=print_expr(car(cdr(cadr(a))));if(car(a)===symbol(INDEX)&&issymbol(cadr(a)))return c+=print_index_function(a);if(car(a)===symbol(FACTORIAL))return c+=print_factorial_function(a);if(car(a)===symbol(ABS)&&printMode===PRINTMODE_LATEX)return c+=print_ABS_latex(a);if(car(a)===symbol(SQRT)&&printMode===PRINTMODE_LATEX)return c+=print_SQRT_latex(a);if(car(a)===symbol(TRANSPOSE)){if(printMode===PRINTMODE_LATEX)return c+=print_TRANSPOSE_latex(a);if(codeGen)return c+=print_TRANSPOSE_codegen(a)}else if(car(a)===symbol(INV)){if(printMode===PRINTMODE_LATEX)return c+=print_INV_latex(a);if(codeGen)return c+=print_INV_codegen(a)}else{if(car(a)===symbol(BINOMIAL)&&printMode===PRINTMODE_LATEX)return c+=print_BINOMIAL_latex(a);if(car(a)===symbol(DEFINT)&&printMode===PRINTMODE_LATEX)return c+=print_DEFINT_latex(a);if(isinnerordot(a)){if(printMode===PRINTMODE_LATEX)return c+=print_DOT_latex(a);if(codeGen)return c+=print_DOT_codegen(a)}else if(car(a)===symbol(SIN)){if(codeGen)return c+=print_SIN_codegen(a)}else if(car(a)===symbol(COS)&&codeGen)return c+=print_COS_codegen(a)}if(iscons(a)){if(c+=print_factor(car(a)),a=cdr(a),b||(c+=print_str("(")),iscons(a))for(c+=print_expr(car(a)),a=cdr(a);iscons(a);)c+=print_str(","),c+=print_expr(car(a)),a=cdr(a);return b||(c+=print_str(")")),c}return a===symbol(DERIVATIVE)?c+=print_char("d"):a===symbol(E)?c+=print_str(codeGen?"Math.E":"e"):a===symbol(PI)?c+=print_str(printMode===PRINTMODE_LATEX?"\\pi":"pi"):c+=print_str(get_printname(a)),c},print_list=function(a){var b;switch(b="",a.k){case CONS:for(b+="(",b+=print_list(car(a)),a===cdr(a)&&a!==symbol(NIL)&&console.log("oh no recursive!"),a=cdr(a);iscons(a);)b+=" ",b+=print_list(car(a)),(a=cdr(a))===cdr(a)&&a!==symbol(NIL)&&console.log("oh no recursive!");a!==symbol(NIL)&&(b+=" . ",b+=print_list(a)),b+=")";break;case STR:b+=a.str;break;case NUM:case DOUBLE:b+=print_number(a,!0);break;case SYM:b+=get_printname(a);break;default:b+="<tensor>"}return b},print_multiply_sign=function(){var a;if(a="",printMode===PRINTMODE_LATEX){if(printMode!==PRINTMODE_PLAIN||test_flag)return a;a+=print_str(" ")}return a+=print_str(printMode!==PRINTMODE_PLAIN||test_flag||codeGen?"*":" ")},is_denominator=function(a){return car(a)===symbol(POWER)&&cadr(a)!==symbol(E)&&isnegativeterm(caddr(a))?1:0},any_denominators=function(a){var b;for(a=cdr(a);iscons(a);){if(b=car(a),is_denominator(b))return 1;a=cdr(a)}return 0},YMAX=1e4,glyph=function(){function a(){}return a.prototype.c=0,a.prototype.x=0,a.prototype.y=0,a}(),chartab=[],charTabIndex=ac=0,ref1=YMAX;0<=ref1?ac<ref1:ac>ref1;charTabIndex=0<=ref1?++ac:--ac)chartab[charTabIndex]=new glyph;for(yindex=0,level=0,emit_x=0,expr_level=0,display_flag=0,printchar_nowrap=function(a){var b;return b="",b+=a},printchar=function(a){return printchar_nowrap(a)},print2dascii=function(a){var b,d,e;return 0,e=0,0,save(),yindex=0,level=0,emit_x=0,emit_top_expr(a),d=get_size(0,yindex),d[0],e=d[1],d[2],e>100?(printline(a),void restore()):(b=print_glyphs(),restore(),b)},emit_top_expr=function(a){return car(a)===symbol(SETQ)?(emit_expr(cadr(a)),__emit_str(" = "),void emit_expr(caddr(a))):istensor(a)?emit_tensor(a):emit_expr(a)},will_be_displayed_as_fraction=function(a){if(level>0)return 0;if(isfraction(a))return 1;if(car(a)!==symbol(MULTIPLY))return 0;if(isfraction(cadr(a)))return 1;for(;iscons(a);){if(isdenominator(car(a)))return 1;a=cdr(a)}return 0},emit_expr=function(a){if(expr_level++,car(a)===symbol(ADD))for(a=cdr(a),__is_negative(car(a))&&(__emit_char("-"),will_be_displayed_as_fraction(car(a))&&__emit_char(" ")),emit_term(car(a)),a=cdr(a);iscons(a);)__is_negative(car(a))?(__emit_char(" "),__emit_char("-"),__emit_char(" ")):(__emit_char(" "),__emit_char("+"),__emit_char(" ")),emit_term(car(a)),a=cdr(a);else __is_negative(a)&&(__emit_char("-"),will_be_displayed_as_fraction(a)&&__emit_char(" ")),emit_term(a);return expr_level--},emit_unsigned_expr=function(a){var b;if(car(a)===symbol(ADD)){for(a=cdr(a),emit_term(car(a)),a=cdr(a),b=[];iscons(a);)__is_negative(car(a))?(__emit_char(" "),__emit_char("-"),__emit_char(" ")):(__emit_char(" "),__emit_char("+"),__emit_char(" ")),emit_term(car(a)),b.push(a=cdr(a));return b}return emit_term(a)},__is_negative=function(a){return isnegativenumber(a)?1:car(a)===symbol(MULTIPLY)&&isnegativenumber(cadr(a))?1:0},emit_term=function(a){var b;return car(a)===symbol(MULTIPLY)?(b=count_denominators(a),b&&0===level?emit_fraction(a,b):emit_multiply(a,b)):emit_factor(a)},isdenominator=function(a){return car(a)===symbol(POWER)&&cadr(a)!==symbol(E)&&__is_negative(caddr(a))?1:0},count_denominators=function(a){var b,c;for(b=0,a=cdr(a);iscons(a);)c=car(a),isdenominator(c)&&b++,a=cdr(a);return b},emit_multiply=function(a,b){var c;if(0===b){for(a=cdr(a),(isplusone(car(a))||isminusone(car(a)))&&(a=cdr(a)),emit_factor(car(a)),a=cdr(a),c=[];iscons(a);)__emit_char(" "),emit_factor(car(a)),c.push(a=cdr(a));return c}return emit_numerators(a),__emit_char("/"),b>1||isfraction(cadr(a))?(__emit_char("("),emit_denominators(a),__emit_char(")")):emit_denominators(a)},emit_fraction=function(a,b){var c,e,f,g,h;for(c=0,e=0,f=0,g=0,h=0,save(),p3=one,p4=one,isrational(cadr(a))&&(push(cadr(a)),mp_numerator(),absval(),p3=pop(),push(cadr(a)),mp_denominator(),p4=pop()),isdouble(cadr(a))&&(push(cadr(a)),absval(),p3=pop()),g=isplusone(p3)?0:1,p1=cdr(a),isnum(car(p1))&&(p1=cdr(p1));iscons(p1);)p2=car(p1),isdenominator(p2)?1:g++,p1=cdr(p1);for(h=emit_x,e=yindex,c=0,isplusone(p3)||(emit_number(p3,0),c++),p1=cdr(a),isnum(car(p1))&&(p1=cdr(p1));iscons(p1);)p2=car(p1),isdenominator(p2)?1:(c>0&&__emit_char(" "),1===g?emit_expr(p2):emit_factor(p2),c++),p1=cdr(p1);for(0===c&&__emit_char("1"),f=yindex,c=0,isplusone(p4)||(emit_number(p4,0),c++,b++),p1=cdr(a),isrational(car(p1))&&(p1=cdr(p1));iscons(p1);)p2=car(p1),isdenominator(p2)&&(c>0&&__emit_char(" "),emit_denominator(p2,b),c++),p1=cdr(p1);return fixup_fraction(h,e,f),restore()},emit_numerators=function(a){var c;for(save(),c=0,p1=one,a=cdr(a),isrational(car(a))?(push(car(a)),mp_numerator(),absval(),p1=pop(),a=cdr(a)):isdouble(car(a))&&(push(car(a)),absval(),p1=pop(),a=cdr(a)),c=0,isplusone(p1)||(emit_number(p1,0),c++);iscons(a);)isdenominator(car(a))?1:(c>0&&__emit_char(" "),emit_factor(car(a)),c++),a=cdr(a);return 0===c&&__emit_char("1"),restore()},emit_denominators=function(a){var b;for(save(),b=0,a=cdr(a),isfraction(car(a))&&(push(car(a)),mp_denominator(),p1=pop(),emit_number(p1,0),b++,a=cdr(a));iscons(a);)isdenominator(car(a))&&(b>0&&__emit_char(" "),emit_denominator(car(a),0),b++),a=cdr(a);return restore()},emit_factor=function(a){return istensor(a)?void emit_flat_tensor(a):isdouble(a)?void emit_number(a,0):car(a)===symbol(ADD)||car(a)===symbol(MULTIPLY)?void emit_subexpr(a):car(a)===symbol(POWER)?void emit_power(a):iscons(a)?void emit_function(a):isnum(a)?void(0===level?emit_numerical_fraction(a):emit_number(a,0)):issymbol(a)?void emit_symbol(a):void(isstr(a)&&emit_string(a))},emit_numerical_fraction=function(a){var b,c,d;return b=0,c=0,d=0,save(),push(a),mp_numerator(),absval(),p3=pop(),push(a),mp_denominator(),p4=pop(),isplusone(p4)?(emit_number(p3,0),void restore()):(d=emit_x,b=yindex,emit_number(p3,0),c=yindex,emit_number(p4,0),fixup_fraction(d,b,c),restore())},isfactor=function(a){return iscons(a)&&car(a)!==symbol(ADD)&&car(a)!==symbol(MULTIPLY)&&car(a)!==symbol(POWER)?1:issymbol(a)?1:isfraction(a)?0:isnegativenumber(a)?0:isnum(a)?1:0},emit_power=function(a){var b,c,d;return b=0,c=0,d=0,cadr(a)===symbol(E)?(__emit_str("exp("),emit_expr(caddr(a)),void __emit_char(")")):level>0?void(isminusone(caddr(a))?(__emit_char("1"),__emit_char("/"),isfactor(cadr(a))?emit_factor(cadr(a)):emit_subexpr(cadr(a))):(isfactor(cadr(a))?emit_factor(cadr(a)):emit_subexpr(cadr(a)),__emit_char("^"),isfactor(caddr(a))?emit_factor(caddr(a)):emit_subexpr(caddr(a)))):__is_negative(caddr(a))?(d=emit_x,b=yindex,__emit_char("1"),c=yindex,emit_denominator(a,1),void fixup_fraction(d,b,c)):(b=yindex,isfactor(cadr(a))?emit_factor(cadr(a)):emit_subexpr(cadr(a)),c=yindex,level++,emit_expr(caddr(a)),level--,fixup_power(b,c))},emit_denominator=function(a,b){var c,d;return c=0,d=0,isminusone(caddr(a))?void(1===b?emit_expr(cadr(a)):emit_factor(cadr(a))):(c=yindex,isfactor(cadr(a))?emit_factor(cadr(a)):emit_subexpr(cadr(a)),d=yindex,level++,emit_unsigned_expr(caddr(a)),level--,fixup_power(c,d))},emit_function=function(a){if(car(a)===symbol(INDEX)&&issymbol(cadr(a)))return void emit_index_function(a);if(car(a)===symbol(FACTORIAL))return void emit_factorial_function(a);if(car(a)===symbol(DERIVATIVE)?__emit_char("d"):emit_symbol(car(a)),__emit_char("("),a=cdr(a),iscons(a))for(emit_expr(car(a)),a=cdr(a);iscons(a);)__emit_char(","),emit_expr(car(a)),a=cdr(a);return __emit_char(")")},emit_index_function=function(a){if(a=cdr(a),caar(a)===symbol(ADD)||caar(a)===symbol(MULTIPLY)||caar(a)===symbol(POWER)||caar(a)===symbol(FACTORIAL)?emit_subexpr(car(a)):emit_expr(car(a)),__emit_char("["),a=cdr(a),iscons(a))for(emit_expr(car(a)),a=cdr(a);iscons(a);)__emit_char(","),emit_expr(car(a)),a=cdr(a);return __emit_char("]")},emit_factorial_function=function(a){return a=cadr(a),car(a)===symbol(ADD)||car(a)===symbol(MULTIPLY)||car(a)===symbol(POWER)||car(a)===symbol(FACTORIAL)?emit_subexpr(a):emit_expr(a),__emit_char("!")},emit_subexpr=function(a){return __emit_char("("),emit_expr(a),__emit_char(")")},emit_symbol=function(a){var b,c,d,e,f;if(c=0,a===symbol(E))return void __emit_str("exp(1)");for(d=get_printname(a),f=[],c=b=0,e=d.length;0<=e?b<e:b>e;c=0<=e?++b:--b)f.push(__emit_char(d[c]));return f},emit_string=function(a){var b,c,d,e;for(c=0,d=a.str,__emit_char('"'),c=b=0,e=d.length;0<=e?b<e:b>e;c=0<=e?++b:--b)__emit_char(d[c]);return __emit_char('"')},fixup_fraction=function(a,b,c){var d,e,f,g,j,k,l,m,n,o,p,q,r,s;for(e=0,f=0,0,n=0,q=0,g=0,o=0,r=0,0,p=0,s=0,j=get_size(b,c),g=j[0],o=j[1],r=j[2],k=get_size(c,yindex),k[0],p=k[1],s=k[2],e=p>o?(p-o)/2:0,e++,q=r+g-1,f=-q-1,move(b,c,e,f),e=p>o?-o:(o-p)/2-o,e++,f=1-s,move(c,yindex,e,f),n=p>o?p:o,n+=2,emit_x=a,m=[],d=0,l=n;0<=l?d<l:d>l;0<=l?++d:--d)m.push(__emit_char("-"));return m},fixup_power=function(a,b){var c,e,f,g,j,k;return c=0,0,0,j=0,e=0,0,k=0,f=get_size(a,b),f[0],f[1],j=f[2],g=get_size(b,yindex),e=g[0],g[1],k=g[2],c=-k-e+1,c+=j-1,move(b,yindex,0,c)},move=function(a,b,c,d){var e,f,g,h,i;for(f=0,i=[],f=e=g=a,h=b;g<=h?e<h:e>h;f=g<=h?++e:--e)chartab[f].x+=c,i.push(chartab[f].y+=d);return i},get_size=function(a,b){var c,d,e,f,g,h,i,j,k,l,m;for(e=0,h=chartab[a].x,f=chartab[a].x,i=chartab[a].y,g=chartab[a].y,e=c=j=a+1,k=b;j<=k?c<k:c>k;e=j<=k?++c:--c)chartab[e].x<h&&(h=chartab[e].x),chartab[e].x>f&&(f=chartab[e].x),chartab[e].y<i&&(i=chartab[e].y),chartab[e].y>g&&(g=chartab[e].y);return d=g-i+1,l=f-h+1,m=i,[d,l,m]},displaychar=function(a){return __emit_char(a)},__emit_char=function(a){if(yindex!==YMAX)return chartab[yindex],chartab[yindex].c=a,chartab[yindex].x=emit_x,chartab[yindex].y=0,yindex++,emit_x++},__emit_str=function(a){var b,c,d,e;for(c=0,e=[],c=b=0,d=a.length;0<=d?b<d:b>d;c=0<=d?++b:--b)e.push(__emit_char(a[c]));return e},emit_number=function(a,b){var c,d,e,f,g,h,i,j,k,l;switch(l="",f=0,a.k){case NUM:for(l=a.q.a.toString(),"-"===l[0]&&0===b&&(l=l.substring(1)),f=c=0,g=l.length;0<=g?c<g:c>g;f=0<=g?++c:--c)__emit_char(l[f]);if("1"===(l=a.q.b.toString()))break;for(__emit_char("/"),j=[],f=d=0,h=l.length;0<=h?d<h:d>h;f=0<=h?++d:--d)j.push(__emit_char(l[f]));return j;case DOUBLE:for(l=doubleToReasonableString(a.d),"-"===l[0]&&0===b&&(l=l.substring(1)),k=[],f=e=0,i=l.length;0<=i?e<i:e>i;f=0<=i?++e:--e)k.push(__emit_char(l[f]));return k}},cmpGlyphs=function(a,b){return a.y<b.y?-1:a.y>b.y?1:a.x<b.x?-1:a.x>b.x?1:0},print_glyphs=function(){var a,b,c,d,e,f,g;for(c=0,a="",e=chartab.slice(0,yindex),e.sort(cmpGlyphs),chartab=[].concat(e).concat(chartab.slice(yindex)),f=0,g=chartab[0].y,c=b=0,d=yindex;0<=d?b<d:b>d;c=0<=d?++b:--b){for(;chartab[c].y>g;)a+=printchar("\n"),f=0,g++;for(;chartab[c].x>f;)a+=printchar_nowrap(" "),f++;a+=printchar_nowrap(chartab[c].c),f++}return a},buffer="",getdisplaystr=function(){return yindex=0,level=0,emit_x=0,emit_expr(pop()),fill_buf(),buffer},fill_buf=function(){var a,b,c,d,e,f,g,h;for(f=buffer,d=0,b=0,e=chartab.slice(0,yindex),e.sort(cmpGlyphs),chartab=[].concat(e).concat(chartab.slice(yindex)),g=0,h=chartab[0].y,b=a=0,c=yindex;0<=c?a<c:a>c;b=0<=c?++a:--a){for(;chartab[b].y>h;)f[d++]="\n",g=0,h++;for(;chartab[b].x>g;)f[d++]=" ",g++;f[d++]=chartab[b].c,g++}return f[d++]="\n"},N=100,oneElement=function(){function a(){}return a.prototype.x=0,a.prototype.y=0,a.prototype.h=0,a.prototype.w=0,a.prototype.index=0,a.prototype.count=0,a}(),elem=[],elelmIndex=ad=0;ad<1e4;elelmIndex=++ad)elem[elelmIndex]=new oneElement;SPACE_BETWEEN_COLUMNS=3,SPACE_BETWEEN_ROWS=1,emit_tensor=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x;if(l=0,m=0,o=0,n=0,w=0,x=0,k=0,v=0,g=0,h=0,i=0,j=0,u=0,f=0,a.tensor.ndim>2)return void emit_flat_tensor(a);if(o=a.tensor.dim[0],n=2===a.tensor.ndim?a.tensor.dim[1]:1,(m=o*n)>N)return void emit_flat_tensor(a);for(w=emit_x,l=b=0,p=m;0<=p?b<p:b>p;l=0<=p?++b:--b)elem[l].index=yindex,elem[l].x=emit_x,emit_expr(a.tensor.elem[l]),elem[l].count=yindex-elem[l].index,q=get_size(elem[l].index,yindex),elem[l].h=q[0],elem[l].w=q[1],elem[l].y=q[2];for(i=0,j=0,l=c=0,r=m;0<=r?c<r:c>r;l=0<=r?++c:--c)elem[l].h>i&&(i=elem[l].h),elem[l].w>j&&(j=elem[l].w);for(k=o*i+(o-1)*SPACE_BETWEEN_ROWS,v=n*j+(n-1)*SPACE_BETWEEN_COLUMNS,x=-k/2,u=d=0,s=o;0<=s?d<s:d>s;u=0<=s?++d:--d)for(f=e=0,t=n;0<=t?e<t:e>t;f=0<=t?++e:--e)l=u*n+f,g=w-elem[l].x,h=x-elem[l].y,move(elem[l].index,elem[l].index+elem[l].count,g,h),g=0,f>0&&(g=f*(j+SPACE_BETWEEN_COLUMNS)),h=0,u>0&&(h=u*(i+SPACE_BETWEEN_ROWS)),g+=(j-elem[l].w)/2,h+=(i-elem[l].h)/2,move(elem[l].index,elem[l].index+elem[l].count,g,h);return emit_x=w+v},emit_flat_tensor=function(a){return emit_tensor_inner(a,0,0)},emit_tensor_inner=function(a,b,c){var d,e,f;for(e=0,__emit_char("("),e=d=0,f=a.tensor.dim[b];0<=f?d<f:d>f;e=0<=f?++d:--d)b+1===a.tensor.ndim?(emit_expr(a.tensor.elem[c]),c+=1):c=emit_tensor_inner(a,b+1,c),e+1<a.tensor.dim[b]&&__emit_char(",");return __emit_char(")"),c},Eval_product=function(){var a,b,c,d,e,f,g,h;for(b=0,d=0,e=0,c=cadr(p1),issymbol(c)||stop("product: 1st arg?"),push(caddr(p1)),Eval(),d=pop_integer(),isNaN(d)&&stop("product: 2nd arg?"),push(cadddr(p1)),Eval(),e=pop_integer(),isNaN(e)&&stop("product: 3rd arg?"),p1=caddddr(p1),f=get_binding(c),push_integer(1),b=a=g=d,h=e;g<=h?a<=h:a>=h;b=g<=h?++a:--a)push_integer(b),p5=pop(),set_binding(c,p5),push(p1),Eval(),DEBUG&&(console.log("product - factor 1: "+stack[tos-1].toString()),console.log("product - factor 2: "+stack[tos-2].toString())),multiply(),DEBUG&&console.log("product - result: "+stack[tos-1].toString());return set_binding(c,f)},qadd=function(){var a,b,c,d,e;return save(),p2=pop(),p1=pop(),b=mmul(p1.q.a,p2.q.b),d=mmul(p1.q.b,p2.q.a),a=madd(b,d),MZERO(a)?(push(zero),void restore()):(c=mmul(p1.q.b,p2.q.b),e=mgcd(a,c),e=makeSignSameAs(e,c),p1=new U,p1.k=NUM,p1.q.a=mdiv(a,e),p1.q.b=mdiv(c,e),push(p1),restore())},qdiv=function(){var a,b,c;return save(),p2=pop(),p1=pop(),MZERO(p2.q.a)&&stop("divide by zero"),MZERO(p1.q.a)?(push(zero),void restore()):(a=mmul(p1.q.a,p2.q.b),b=mmul(p1.q.b,p2.q.a),c=mgcd(a,b),c=makeSignSameAs(c,b),p1=new U,p1.k=NUM,p1.q.a=mdiv(a,c),p1.q.b=mdiv(b,c),push(p1),restore())},qmul=function(){var a,b,c;return save(),p2=pop(),p1=pop(),MZERO(p1.q.a)||MZERO(p2.q.a)?(push(zero),void restore()):(a=mmul(p1.q.a,p2.q.a),b=mmul(p1.q.b,p2.q.b),c=mgcd(a,b),c=makeSignSameAs(c,b),p1=new U,p1.k=NUM,p1.q.a=mdiv(a,c),p1.q.b=mdiv(b,c),push(p1),restore())},qpow=function(){return save(),qpowf(),restore()},qpowf=function(){var a,b,c,d,e,f;return c=0,p2=pop(),p1=pop(),isplusone(p1)||iszero(p2)?void push_integer(1):isminusone(p1)&&isoneovertwo(p2)?void push(imaginaryunit):iszero(p1)?(isnegativenumber(p2)&&stop("divide by zero"),void push(zero)):isplusone(p2)?void push(p1):isinteger(p2)?(push(p2),c=pop_integer(),isNaN(c)?(push_symbol(POWER),push(p1),push(p2),void list(3)):(e=mpow(p1.q.a,Math.abs(c)),f=mpow(p1.q.b,Math.abs(c)),c<0&&(d=e,e=f,f=d,e=makeSignSameAs(e,f),f=makePositive(f)),p3=new U,p3.k=NUM,p3.q.a=e,p3.q.b=f,void push(p3))):isminusone(p1)?(push(p2),void normalize_angle()):isnegativenumber(p1)?(push(p1),negate(),push(p2),qpow(),push_integer(-1),push(p2),qpow(),void multiply()):isinteger(p1)?is_small_integer(p1)?(push(p1),push(p2),void quickfactor()):p2.q.a.isSmall&&p2.q.b.isSmall?(a=p2.q.a,b=p2.q.b,0===(e=mroot(p1.q.a,b))?(push_symbol(POWER),push(p1),push(p2),void list(3)):(f=mpow(e,a),p3=new U,p3.k=NUM,p2.q.a.isNegative()?(p3.q.a=bigInt(1),p3.q.b=f):(p3.q.a=f,p3.q.b=bigInt(1)),push(p3))):(push_symbol(POWER),push(p1),push(p2),void list(3)):(push(p1),mp_numerator(),push(p2),qpow(),push(p1),mp_denominator(),push(p2),negate(),qpow(),void multiply())},normalize_angle=function(){return save(),p1=pop(),isinteger(p1)?(push_integer(p1.q.a.isOdd()?-1:1),void restore()):(push(p1),bignum_truncate(),p2=pop(),isnegativenumber(p1)&&(push(p2),push_integer(-1),add(),p2=pop()),push(p1),push(p2),subtract(),p3=pop(),push_symbol(POWER),push_integer(-1),push(p3),list(3),p2.q.a.isOdd()&&negate(),restore())},is_small_integer=function(a){return a.q.a.isSmall},quickfactor=function(){var a,b,c,d,e,f;for(c=0,save(),p2=pop(),p1=pop(),b=tos,push(p1),factor_small_number(),d=tos-b,f=b,c=a=0,e=d;a<e;c=a+=2)push(stack[f+c]),push(stack[f+c+1]),push(p2),multiply(),quickpower();return multiply_all(tos-b-d),p1=pop(),tos=b,push(p1),restore()},quickpower=function(){var a;return a=0,save(),p2=pop(),p1=pop(),push(p2),bignum_truncate(),p3=pop(),push(p2),push(p3),subtract(),p4=pop(),iszero(p4)||(push_symbol(POWER),push(p1),push(p4),list(3)),push(p3),a=pop_integer(),isNaN(a)?(push_symbol(POWER),push(p1),push(p3),list(3),void restore()):0===a?void restore():(push(p1),bignum_power_number(a),restore())},Eval_quotient=function(){return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),push(cadddr(p1)),Eval(),p1=pop(),p1===symbol(NIL)&&(p1=symbol(SYMBOL_X)),push(p1),divpoly()},divpoly=function(){var a,b,c,d,e,f,g,h,i;for(d=0,e=0,f=0,g=0,i=0,save(),p3=pop(),p2=pop(),p1=pop(),d=tos,b=tos,push(p1),push(p3),f=coeff()-1,c=tos,push(p2),push(p3),g=coeff()-1,i=f-g,push_integer(0),p5=pop();i>=0;){for(push(stack[b+f]),push(stack[c+g]),divide(),p4=pop(),e=a=0,h=g;0<=h?a<=h:a>=h;e=0<=h?++a:--a)push(stack[b+i+e]),push(stack[c+e]),push(p4),multiply(),subtract(),stack[b+i+e]=pop();push(p5),push(p4),push(p3),push_integer(i),power(),multiply(),add(),p5=pop(),f--,i--}return tos=d,push(p5),restore()},Eval_rationalize=function(){return push(cadr(p1)),Eval(),rationalize()},rationalize=function(){var a;return a=expanding,save(),yyrationalize(),restore(),expanding=a},yyrationalize=function(){if(p1=pop(),istensor(p1))return void __rationalize_tensor();if(expanding=0,car(p1)!==symbol(ADD))return void push(p1);for(DEBUG&&(printf("rationalize: this is the input expr:\n"),printline(p1)),push(one),multiply_denominators(p1),p2=pop(),DEBUG&&(printf("rationalize: this is the common denominator:\n"),printline(p2)),push(zero),p3=cdr(p1);iscons(p3);)push(p2),push(car(p3)),multiply(),add(),p3=cdr(p3);return DEBUG&&(printf("rationalize: original expr times common denominator:\n"),printline(stack[tos-1])),Condense(),DEBUG&&(printf("rationalize: after factoring:\n"),printline(stack[tos-1])),push(p2),divide(),DEBUG?(printf("rationalize: after dividing by common denom. (and we're done):\n"),printline(stack[tos-1])):void 0},multiply_denominators=function(a){var b;if(car(a)===symbol(ADD)){for(a=cdr(a),b=[];iscons(a);)multiply_denominators_term(car(a)),b.push(a=cdr(a));return b}return multiply_denominators_term(a)},multiply_denominators_term=function(a){var b;if(car(a)===symbol(MULTIPLY)){for(a=cdr(a),b=[];iscons(a);)multiply_denominators_factor(car(a)),b.push(a=cdr(a));return b}return multiply_denominators_factor(a)},multiply_denominators_factor=function(a){if(car(a)===symbol(POWER))return push(a),a=caddr(a),isnegativenumber(a)?(inverse(),void __lcm()):car(a)===symbol(MULTIPLY)&&isnegativenumber(cadr(a))?(inverse(),void __lcm()):pop()},__rationalize_tensor=function(){var a,b,c,d;if(b=0,push(p1),Eval(),p1=pop(),!istensor(p1))return void push(p1);for(c=p1.tensor.nelem,b=a=0,d=c;0<=d?a<d:a>d;b=0<=d?++a:--a)push(p1.tensor.elem[b]),rationalize(),p1.tensor.elem[b]=pop();return check_tensor_dimensions(p1),push(p1)},__lcm=function(){return save(),p1=pop(),p2=pop(),push(p1),push(p2),multiply(),push(p1),push(p2),gcd(),divide(),restore()},Eval_real=function(){return push(cadr(p1)),Eval(),real()},real=function(){return save(),rect(),p1=pop(),push(p1),push(p1),conjugate(),add(),push_integer(2),divide(),restore()},DEBUG_RECT=!1,Eval_rect=function(){return push(cadr(p1)),Eval(),rect()},rect=function(){var a;if(save(),p1=pop(),a=p1,DEBUG_RECT&&console.log("RECT of "+a),DEBUG_RECT&&console.log("any clock forms in : "+a+" ? "+findPossibleClockForm(a)),issymbol(p1))DEBUG_RECT&&console.log(" rect: simple symbol: "+a),iszero(get_binding(symbol(ASSUME_REAL_VARIABLES)))?(push_symbol(YYRECT),push(p1),list(2)):push(p1);else if(iszero(get_binding(symbol(ASSUME_REAL_VARIABLES)))||findPossibleExponentialForm(p1)||findPossibleClockForm(p1)||Find(p1,symbol(SIN))&&Find(p1,symbol(COS))&&Find(p1,imaginaryunit))if(car(p1)===symbol(MULTIPLY)&&isimaginaryunit(cadr(p1))&&!iszero(get_binding(symbol(ASSUME_REAL_VARIABLES))))push(p1);else if(car(p1)===symbol(ADD))for(DEBUG_RECT&&console.log(" rect - "+a+" is a sum "),push_integer(0),p1=cdr(p1);iscons(p1);)push(car(p1)),rect(),add(),p1=cdr(p1);else DEBUG_RECT&&console.log(" rect - "+a+" is NOT a sum "),push(p1),abs(),DEBUG_RECT&&console.log(" rect - "+a+" abs: "+stack[tos-1].toString()),push(p1),arg(),DEBUG_RECT&&console.log(" rect - "+a+" arg of "+p1+" : "+stack[tos-1].toString()),p1=pop(),push(p1),cosine(),DEBUG_RECT&&console.log(" rect - "+a+" cosine: "+stack[tos-1].toString()),push(imaginaryunit),push(p1),sine(),DEBUG_RECT&&console.log(" rect - "+a+" sine: "+stack[tos-1].toString()),multiply(),DEBUG_RECT&&console.log(" rect - "+a+" i * sine: "+stack[tos-1].toString()),add(),DEBUG_RECT&&console.log(" rect - "+a+" cos + i * sine: "+stack[tos-1].toString()),multiply();else DEBUG_RECT&&console.log(" rect: simple symbol: "+a),push(p1);if(restore(),DEBUG_RECT)return console.log("rect of "+a+" : "+stack[tos-1])},show_power_debug=!1,performing_roots=!1,Eval_roots=function(){return p2=cadr(p1),car(p2)===symbol(SETQ)||car(p2)===symbol(TESTEQ)?(push(cadr(p2)),Eval(),push(caddr(p2)),Eval(),subtract()):(push(p2),Eval(),p2=pop(),car(p2)===symbol(SETQ)||car(p2)===symbol(TESTEQ)?(push(cadr(p2)),Eval(),push(caddr(p2)),Eval(),subtract()):push(p2)),push(caddr(p1)),Eval(),p2=pop(),p2===symbol(NIL)?guess():push(p2),p2=pop(),p1=pop(),ispoly(p1,p2)||stop("roots: 1st argument is not a polynomial"),push(p1),push(p2),roots()},hasImaginaryCoeff=function(a){var b,d,e;for(e=!1,tos,d=b=a;b>0;d=b+=-1)if(iscomplexnumber(stack[tos-d])){e=!0;break}return e},isSimpleRoot=function(a){var b,d,e;if(a>2){for(e=!0,tos,iszero(stack[tos-a])&&(e=!1),d=b=a-1;b>1;d=b+=-1)if(!iszero(stack[tos-d])){e=!1;break}}else e=!1;return e},normalisedCoeff=function(){var a,b,c,d,e,f,g,h;for(e=coeff(),c=stack[tos-1],f=[],d=a=1,g=e;1<=g?a<=g:a>=g;d=1<=g?++a:--a)f.push(pop());for(d=b=h=e-1;h<=0?b<=0:b>=0;d=h<=0?++b:--b)push(f[d]),push(c),divide();return e},roots=function(){var a,b,c,d,e,f,g,h;if(b=0,c=0,g=0,save(),recursionLevelNestedRadicalsRemoval>1)return pop(),pop(),push(symbol(NIL)),void restore();if(performing_roots=!0,b=tos-2,DEBUG&&console.log("checking if "+stack[tos-1].toString()+" is a case of simple roots"),p2=pop(),p1=pop(),push(p1),push(p2),push(p1),push(p2),d=normalisedCoeff(),isSimpleRoot(d)?(DEBUG&&console.log("yes, "+stack[tos-1].toString()+" is a case of simple roots"),e=stack[tos-d],f=stack[tos-1],tos-=d,pop(),pop(),getSimpleRoots(d,f,e)):(tos-=d,roots2()),g=tos-b,0===g&&stop("roots: the polynomial is not factorable, try nroots"),1===g)return performing_roots=!1,void restore();for(sort_stack(g),p1=alloc_tensor(g),p1.tensor.ndim=1,p1.tensor.dim[0]=g,c=a=0,h=g;0<=h?a<h:a>h;c=0<=h?++a:--a)p1.tensor.elem[c]=stack[b+c];return tos=b,push(p1),restore(),performing_roots=!1},getSimpleRoots=function(a,b,c){var d,e,f,g,h,i,j;if(DEBUG&&console.log("getSimpleRoots"),save(),a-=1,push(c),push_rational(1,a),power(),push(b),push_rational(1,a),power(),divide(),g=pop(),a%2==0)for(j=e=1,h=a;e<=h;j=e+=2)push(g),push_integer(-1),push_rational(j,a),power(),multiply(),d=pop(),push(d),push(d),negate();else for(j=f=1,i=a;1<=i?f<=i:f>=i;j=1<=i?++f:--f)push(g),push_integer(-1),push_rational(j,a),power(),multiply(),j%2==0&&negate();return restore()},roots2=function(){var a;if(save(),p2=pop(),p1=pop(),push(p1),push(p2),push(p1),push(p2),a=normalisedCoeff(),hasImaginaryCoeff(a)?(tos-=a,pop(),pop()):(tos-=a,factorpoly(),p1=pop()),car(p1)===symbol(MULTIPLY))for(p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),roots3(),p1=cdr(p1);else push(p1),push(p2),roots3();return restore()},roots3=function(){var a;return save(),p2=pop(),p1=pop(),car(p1)===symbol(POWER)&&ispoly(cadr(p1),p2)&&isposint(caddr(p1))?(push(cadr(p1)),push(p2),a=normalisedCoeff(),mini_solve(a)):ispoly(p1,p2)&&(push(p1),push(p2),a=normalisedCoeff(),mini_solve(a)),restore()},mini_solve=function(a){var b,d,e,f,g,h,i,j,l,m,n,o,p,r,s,t,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,N,O,P,Q,R,S,T,U,X,Z,_,ba,ca,da,ea,fa,ga,ia,ja,ka,la,ma,na,pa,qa,ra,sa,ta,ua,va,wa,xa,ya,za,Aa,Ba;if(save(),2===a)return p3=pop(),p4=pop(),push(p4),push(p3),divide(),negate(),void restore();if(3===a)return p3=pop(),p4=pop(),p5=pop(),push(p4),push_integer(2),power(),push_integer(4),push(p3),multiply(),push(p5),multiply(),subtract(),push_rational(1,2),power(),p6=pop(),push(p6),push(p4),subtract(),push(p3),push_integer(2),multiply(),divide(),push(p6),push(p4),add(),negate(),push(p3),divide(),push_rational(1,2),multiply(),void restore();if(4===a||5===a){if(p3=pop(),p4=pop(),p5=pop(),p6=pop(),push(p5),push(p5),multiply(),I=pop(),push(I),push(p5),multiply(),J=pop(),push(p4),push(p4),multiply(),E=pop(),push(E),push(p4),multiply(),G=pop(),push(G),push(p6),multiply(),H=pop(),push(H),push_integer(-4),multiply(),S=pop(),push(G),push_integer(2),multiply(),f=pop(),push(p3),push(p3),multiply(),x=pop(),push(x),push(p3),multiply(),A=pop(),push_integer(3),push(p3),multiply(),g=pop(),push(x),push(p6),multiply(),y=pop(),push(y),push(p6),multiply(),z=pop(),push(y),push_integer(27),multiply(),e=pop(),push(z),push_integer(-27),multiply(),Q=pop(),push(g),push_integer(2),multiply(),pop(),push(p3),push(p5),multiply(),D=pop(),push(D),push(p4),multiply(),B=pop(),push(B),push(p6),multiply(),C=pop(),push(D),push_integer(3),multiply(),i=pop(),push_integer(-4),push(p3),push(J),multiply(),multiply(),R=pop(),push(B),push_integer(9),multiply(),negate(),T=pop(),push(C),push_integer(18),multiply(),d=pop(),push(E),push(i),subtract(),p=pop(),push(E),push(I),multiply(),F=pop(),push(p4),negate(),push(g),divide(),U=pop(),4===a){if(DEBUG&&console.log(">>>>>>>>>>>>>>>> actually using cubic formula <<<<<<<<<<<<<<< "),DEBUG&&console.log("cubic: D0: "+p.toString()),push(p),push_integer(3),power(),push_integer(4),multiply(),j=pop(),push(p),simplify(),absValFloat(),r=pop(),DEBUG&&console.log("cubic: D0 as float: "+r.toString()),push(d),push(S),push(F),push(R),push(Q),add(),add(),add(),add(),simplify(),absValFloat(),L=pop(),DEBUG&&console.log("cubic: DETERMINANT: "+L.toString()),push(f),push(T),push(e),add(),add(),s=pop(),DEBUG&&console.log("cubic: D1: "+s.toString()),push(s),push_integer(2),power(),push(j),subtract(),push_rational(1,2),power(),simplify(),t=pop(),iszero(L))return iszero(r)?(DEBUG&&console.log(" cubic: DETERMINANT IS ZERO and delta0 is zero"),push(U),void restore()):(DEBUG&&console.log(" cubic: DETERMINANT IS ZERO and delta0 is not zero"),push(p3),push(p6),push_integer(9),multiply(),multiply(),push(p4),push(p5),multiply(),subtract(),push(p),push_integer(2),multiply(),divide(),za=pop(),push(za),push(za),push(B),push_integer(4),multiply(),push(p3),push(p3),push(p6),push_integer(9),multiply(),multiply(),multiply(),negate(),push(G),negate(),add(),add(),push(p3),push(p),multiply(),divide(),void restore());for(b=!1,na=!1;!b;)push(t),na&&negate(),push(s),add(),push_rational(1,2),multiply(),push_rational(1,3),power(),simplify(),m=pop(),DEBUG&&console.log("cubic: C: "+m.toString()),push(m),simplify(),absValFloat(),o=pop(),DEBUG&&console.log("cubic: C as absval and float: "+o.toString()),iszero(o)?(DEBUG&&console.log(" cubic: C IS ZERO flipping the sign"),na=!0):b=!0;return push(m),push(g),multiply(),h=pop(),push(h),push_integer(2),multiply(),l=pop(),push(imaginaryunit),push_integer(3),push_rational(1,2),power(),multiply(),pa=pop(),push_integer(1),push(pa),add(),ua=pop(),push_integer(1),push(pa),subtract(),ta=pop(),push(m),push(g),divide(),n=pop(),push(U),push(n),negate(),push(p),push(h),divide(),negate(),add(),add(),simplify(),push(U),push(n),push(ua),multiply(),push_integer(2),divide(),push(ta),push(p),multiply(),push(l),divide(),add(),add(),simplify(),push(U),push(n),push(ta),multiply(),push_integer(2),divide(),push(ua),push(p),multiply(),push(l),divide(),add(),add(),simplify(),void restore()}if(5===a){if(DEBUG&&console.log(">>>>>>>>>>>>>>>> actually using quartic formula <<<<<<<<<<<<<<< "),p7=pop(),iszero(p4)&&iszero(p6)&&!iszero(p5)&&!iszero(p7)){for(DEBUG&&console.log("biquadratic case"),push(p3),push(symbol(SECRETX)),push_integer(2),power(),multiply(),push(p5),push(symbol(SECRETX)),multiply(),push(p7),add(),add(),push(symbol(SECRETX)),roots(),ga=pop(),va=ga.tensor.elem,da=0,qa=va.length;da<qa;da++)ma=va[da],push(ma),push_rational(1,2),power(),simplify(),push(ma),push_rational(1,2),power(),negate(),simplify();return void restore()}if(push(p6),push(p6),multiply(),K=pop(),push(p7),push(p7),multiply(),N=pop(),push(N),push(p7),multiply(),O=pop(),push_integer(256),push(A),push(O),multiply(),multiply(),push_integer(-192),push(y),push(N),push(p4),multiply(),multiply(),multiply(),push_integer(-128),push(x),push(I),push(N),multiply(),multiply(),multiply(),push_integer(144),push(z),push(p5),push(p7),multiply(),multiply(),multiply(),push(Q),push(K),multiply(),push_integer(144),push(B),push(p4),push(N),multiply(),multiply(),multiply(),push_integer(-6),push(p3),push(E),push(K),push(p7),multiply(),multiply(),multiply(),multiply(),push_integer(-80),push(C),push(p5),push(p7),multiply(),multiply(),multiply(),push_integer(18),push(C),push(K),multiply(),multiply(),push_integer(16),push(D),push(J),push(p7),multiply(),multiply(),multiply(),push_integer(-4),push(D),push(I),push(K),multiply(),multiply(),multiply(),push_integer(-27),push(G),push(p4),push(N),multiply(),multiply(),multiply(),push_integer(18),push(H),push(p5),push(p7),multiply(),multiply(),multiply(),push(S),push(K),multiply(),push_integer(-4),push(F),push(p5),push(p7),multiply(),multiply(),multiply(),push(F),push(K),multiply(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),add(),L=pop(),DEBUG&&console.log("R_determinant: "+L.toString()),push(I),push_integer(-3),push(p4),push(p6),multiply(),multiply(),push_integer(12),push(p3),push(p7),multiply(),multiply(),add(),add(),p=pop(),DEBUG&&console.log("R_DELTA0: "+p.toString()),push_integer(2),push(J),multiply(),push_integer(-9),push(p4),push(p5),push(p6),multiply(),multiply(),multiply(),push_integer(27),push(E),push(p7),multiply(),multiply(),push_integer(27),push(p3),push(K),multiply(),multiply(),push_integer(-72),push(D),push(p7),multiply(),multiply(),add(),add(),add(),add(),s=pop(),DEBUG&&console.log("R_DELTA1: "+s.toString()),push_integer(8),push(D),multiply(),push_integer(-3),push(E),multiply(),add(),push_integer(8),push(x),multiply(),divide(),X=pop(),DEBUG&&console.log("p: "+X.toString()),push(G),push_integer(-4),push(B),multiply(),push_integer(8),push(y),multiply(),add(),add(),push_integer(8),push(A),multiply(),divide(),Z=pop(),DEBUG&&console.log("q: "+Z.toString()),DEBUG&&console.log("tos 1 "+tos),iszero(p4)){for(X=p5,Z=p6,_=p7,push_rational(5,2),push(X),multiply(),ia=pop(),push_integer(2),push(X),push_integer(2),power(),multiply(),push(_),subtract(),ja=pop(),push(X),push_integer(3),power(),push_integer(2),divide(),push_rational(-1,2),push(X),push(_),multiply(),multiply(),push_rational(-1,8),push(Z),push_integer(2),power(),multiply(),add(),add(),ka=pop(),push(symbol(SECRETX)),push_integer(3),power(),push(ia),push(symbol(SECRETX)),push_integer(2),power(),multiply(),push(ja),push(symbol(SECRETX)),multiply(),push(ka),add(),add(),add(),DEBUG&&console.log("resolventCubic: "+stack[tos-1].toString()),push(symbol(SECRETX)),roots(),ya=pop(),DEBUG&&console.log("resolventCubicSolutions: "+ya),P=null,xa=ya.tensor.elem,fa=0,sa=xa.length;fa<sa;fa++)if(ma=xa[fa],DEBUG&&console.log("examining solution: "+ma),push(ma),push_integer(2),multiply(),push(X),add(),absValFloat(),Ba=pop(),DEBUG&&console.log("abs value is: "+ma),!iszero(Ba)){P=ma;break}return DEBUG&&console.log("chosen solution: "+P),push(P),push_integer(2),multiply(),push(X),add(),push_rational(1,2),power(),simplify(),Aa=pop(),push(Z),push_integer(2),multiply(),push(Aa),divide(),simplify(),ca=pop(),push(X),push_integer(3),multiply(),push(P),push_integer(2),multiply(),add(),ba=pop(),push(Aa),push(ba),push(ca),add(),negate(),push_rational(1,2),power(),simplify(),add(),push_integer(2),divide(),push(Aa),push(ba),push(ca),add(),negate(),push_rational(1,2),power(),simplify(),subtract(),push_integer(2),divide(),push(Aa),negate(),push(ba),push(ca),subtract(),negate(),push_rational(1,2),power(),simplify(),add(),push_integer(2),divide(),push(Aa),negate(),push(ba),push(ca),subtract(),negate(),push_rational(1,2),power(),simplify(),subtract(),push_integer(2),divide(),void restore()}for(DEBUG&&console.log("tos 2 "+tos),push_integer(8),push(p5),push(p3),multiply(),multiply(),push_integer(-3),push(p4),push_integer(2),power(),multiply(),add(),push_integer(8),push(p3),push_integer(2),power(),multiply(),divide(),X=pop(),DEBUG&&console.log("p for depressed quartic: "+X.toString()),push(p4),push_integer(3),power(),push_integer(-4),push(p3),push(p4),push(p5),multiply(),multiply(),multiply(),push_integer(8),push(p6),push(p3),push_integer(2),power(),multiply(),multiply(),add(),add(),push_integer(8),push(p3),push_integer(3),power(),multiply(),divide(),Z=pop(),DEBUG&&console.log("q for depressed quartic: "+Z.toString()),push(p4),push_integer(4),power(),push_integer(-3),multiply(),push_integer(256),push(A),push(p7),multiply(),multiply(),push_integer(-64),push(y),push(p4),multiply(),multiply(),push_integer(16),push(E),push(p3),push(p5),multiply(),multiply(),multiply(),add(),add(),add(),push_integer(256),push(p3),push_integer(4),power(),multiply(),divide(),_=pop(),DEBUG&&console.log("r for depressed quartic: "+_.toString()),DEBUG&&console.log("tos 4 "+tos),push(symbol(SECRETX)),push_integer(4),power(),DEBUG&&console.log("4 * x^4: "+stack[tos-1].toString()),push(X),push(symbol(SECRETX)),push_integer(2),power(),multiply(),DEBUG&&console.log("R_p * x^2: "+stack[tos-1].toString()),push(Z),push(symbol(SECRETX)),multiply(),DEBUG&&console.log("R_q * x: "+stack[tos-1].toString()),push(_),DEBUG&&console.log("R_r: "+stack[tos-1].toString()),add(),add(),add(),simplify(),DEBUG&&console.log("solving depressed quartic: "+stack[tos-1].toString()),push(symbol(SECRETX)),roots(),la=pop(),DEBUG&&console.log("depressedSolutions: "+la),wa=la.tensor.elem,ea=0,ra=wa.length;ea<ra;ea++)ma=wa[ea],push(ma),push(p4),push_integer(4),push(p3),multiply(),divide(),subtract(),simplify(),DEBUG&&console.log("solution from depressed: "+stack[tos-1].toString());return void restore()}}return tos-=a,restore()},T_INTEGER=1001,T_DOUBLE=1002,T_SYMBOL=1003,T_FUNCTION=1004,T_NEWLINE=1006,T_STRING=1007,T_GTEQ=1008,T_LTEQ=1009,T_EQ=1010,T_NEQ=1011,T_QUOTASSIGN=1012,token="",newline_flag=0,meta_mode=0,input_str=0,scan_str=0,token_str=0,token_buf=0,lastFoundSymbol=null,symbolsRightOfAssignment=null,symbolsLeftOfAssignment=null,isSymbolLeftOfAssignment=null,scanningParameters=null,functionInvokationsScanningStack=null,skipRootVariableToBeSolved=!1,assignmentFound=null,scanned="",scan=function(a){return DEBUG&&console.log("#### scanning "+a),lastFoundSymbol=null,symbolsRightOfAssignment=[],symbolsLeftOfAssignment=[],isSymbolLeftOfAssignment=!0,scanningParameters=[],functionInvokationsScanningStack=[""],assignmentFound=!1,scanned=a,meta_mode=0,expanding++,input_str=0,scan_str=0,get_next_token(),""===token?(push(symbol(NIL)),expanding--,0):(scan_stmt(),expanding--,assignmentFound||(symbolsInExpressionsWithoutAssignments=symbolsInExpressionsWithoutAssignments.concat(symbolsLeftOfAssignment)),token_str-input_str)},scan_meta=function(a){return scanned=a,meta_mode=1,expanding++,input_str=0,scan_str=0,get_next_token(),""===token?(push(symbol(NIL)),expanding--,0):(scan_stmt(),expanding--,token_str-input_str)},scan_stmt=function(){var a,b,c,d,e,f,g,h,i;if(scan_relation(),c=!1,token===T_QUOTASSIGN&&(c=!0),(token===T_QUOTASSIGN||"="===token)&&(i=lastFoundSymbol,DEBUG&&console.log("assignment!"),assignmentFound=!0,isSymbolLeftOfAssignment=!1,get_next_token(),push_symbol(SETQ),swap(),c&&push_symbol(QUOTE),scan_relation(),c&&list(2),list(3),isSymbolLeftOfAssignment=!0,codeGen)){if(f=symbolsRightOfAssignment.indexOf(i),-1!==f&&(symbolsRightOfAssignment.splice(f,1),symbolsHavingReassignments.push(i)),DEBUG)for(console.log("locally, "+i+" depends on: "),a=0,g=symbolsRightOfAssignment.length;a<g;a++)e=symbolsRightOfAssignment[a],console.log("\t"+e);for(null==symbolsDependencies[i]&&(symbolsDependencies[i]=[]),d=symbolsDependencies[i],b=0,h=symbolsRightOfAssignment.length;b<h;b++)e=symbolsRightOfAssignment[b],-1===d.indexOf(e)&&d.push(e);return symbolsRightOfAssignment=[]}},scan_relation=function(){switch(scan_expression(),token){case T_EQ:return push_symbol(TESTEQ),swap(),get_next_token(),scan_expression(),list(3);case T_NEQ:return push_symbol(NOT),swap(),push_symbol(TESTEQ),swap(),get_next_token(),scan_expression(),list(3),list(2);case T_LTEQ:return push_symbol(TESTLE),swap(),get_next_token(),scan_expression(),list(3);case T_GTEQ:return push_symbol(TESTGE),swap(),get_next_token(),scan_expression(),list(3);case"<":return push_symbol(TESTLT),swap(),get_next_token(),scan_expression(),list(3);case">":return push_symbol(TESTGT),swap(),get_next_token(),scan_expression(),list(3)}},scan_expression=function(){var a;switch(a=tos,token){case"+":get_next_token(),scan_term();break;case"-":get_next_token(),scan_term(),negate();break;default:scan_term()}for(;0===newline_flag&&("+"===token||"-"===token);)"+"===token?(get_next_token(),scan_term()):(get_next_token(),scan_term(),negate());if(tos-a>1)return list(tos-a),push_symbol(ADD),swap(),cons()},is_factor=function(){if(("function"==typeof token.charCodeAt?token.charCodeAt(0):void 0)===dotprod_unicode)return 1;switch(token){case"*":case"/":return 1;case"(":case T_SYMBOL:case T_FUNCTION:case T_INTEGER:case T_DOUBLE:case T_STRING:return newline_flag?(scan_str=token_str,0):1}return 0},simplify_1_in_products=function(a,b){if(a>b&&isrational(stack[a-1])&&equaln(stack[a-1],1))return pop()},multiply_consecutive_constants=function(a,b){if(a>b+1&&isnum(stack[a-2])&&isnum(stack[a-1]))return multiply()},scan_term=function(){var a;for(a=tos,scan_factor(),parse_time_simplifications&&simplify_1_in_products(tos,a);is_factor();)"*"===token?(get_next_token(),scan_factor()):"/"===token?(simplify_1_in_products(tos,a),get_next_token(),scan_factor(),inverse()):("function"==typeof token.charCodeAt?token.charCodeAt(0):void 0)===dotprod_unicode?(get_next_token(),push_symbol(INNER),swap(),scan_factor(),list(3)):scan_factor(),parse_time_simplifications&&(multiply_consecutive_constants(tos,a),simplify_1_in_products(tos,a));return a===tos?push_integer(1):tos-a>1?(list(tos-a),push_symbol(MULTIPLY),swap(),cons()):void 0},scan_power=function(){if("^"===token)return get_next_token(),push_symbol(POWER),swap(),scan_factor(),list(3)},scan_index=function(a){for(get_next_token(),push_symbol(INDEX),swap(),scan_expression();","===token;)get_next_token(),scan_expression();return"]"!==token&&scan_error("] expected"),get_next_token(),list(tos-a)},scan_factor=function(){var a;for(a=tos,"("===token?scan_subexpr():token===T_SYMBOL?scan_symbol():token===T_FUNCTION?scan_function_call_with_function_name():"["===token?scan_tensor():token===T_INTEGER?(bignum_scan_integer(token_buf),get_next_token()):token===T_DOUBLE?(bignum_scan_float(token_buf),get_next_token()):token===T_STRING?scan_string():scan_error("syntax error");"["===token||"("===token&&0===newline_flag;)"["===token?scan_index(a):"("===token&&scan_function_call_without_function_name();for(;"!"===token;)get_next_token(),push_symbol(FACTORIAL),swap(),list(2);for(;("function"==typeof token.charCodeAt?token.charCodeAt(0):void 0)===transpose_unicode;)get_next_token(),push_symbol(TRANSPOSE),swap(),list(2);return scan_power()},addSymbolRightOfAssignment=function(a){var b,c,d,e;if(-1===predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(a)&&-1===symbolsRightOfAssignment.indexOf(a)&&-1===symbolsRightOfAssignment.indexOf("'"+a)&&!skipRootVariableToBeSolved){for(DEBUG&&console.log("... adding symbol: "+a+" to the set of the symbols right of assignment"),d="",c=b=1,e=functionInvokationsScanningStack.length;1<=e?b<e:b>e;c=1<=e?++b:--b)""!==functionInvokationsScanningStack[c]&&(d+=functionInvokationsScanningStack[c]+"_"+c+"_");return a=d+a,symbolsRightOfAssignment.push(a)}},addSymbolLeftOfAssignment=function(a){var b,c,d,e;if(-1===predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(a)&&-1===symbolsLeftOfAssignment.indexOf(a)&&-1===symbolsLeftOfAssignment.indexOf("'"+a)&&!skipRootVariableToBeSolved){for(DEBUG&&console.log("... adding symbol: "+a+" to the set of the symbols left of assignment"),d="",c=b=1,e=functionInvokationsScanningStack.length;1<=e?b<e:b>e;c=1<=e?++b:--b)""!==functionInvokationsScanningStack[c]&&(d+=functionInvokationsScanningStack[c]+"_"+c+"_");return a=d+a,symbolsLeftOfAssignment.push(a)}},scan_symbol=function(){if(token!==T_SYMBOL&&scan_error("symbol expected"),meta_mode&&1===token_buf.length)switch(token_buf[0]){case"a":push(symbol(METAA));break;case"b":push(symbol(METAB));break;case"x":push(symbol(METAX));break;default:push(usr_symbol(token_buf))}else push(usr_symbol(token_buf));return 0===scanningParameters.length?(DEBUG&&console.log("out of scanning parameters, processing "+token_buf),lastFoundSymbol=token_buf,isSymbolLeftOfAssignment&&addSymbolLeftOfAssignment(token_buf)):(DEBUG&&console.log("still scanning parameters, skipping "+token_buf),isSymbolLeftOfAssignment&&addSymbolRightOfAssignment("'"+token_buf)),DEBUG&&console.log("found symbol: "+token_buf+" left of assignment: "+isSymbolLeftOfAssignment),isSymbolLeftOfAssignment||addSymbolRightOfAssignment(token_buf),get_next_token()},scan_string=function(){return new_string(token_buf),get_next_token()},scan_function_call_with_function_name=function(){var a,b,c,d,e,f;if(DEBUG&&console.log("-- scan_function_call_with_function_name start"),d=1,e=new U,e=usr_symbol(token_buf),push(e),get_next_token(),b=token_buf,"roots"!==b&&"defint"!==b||functionInvokationsScanningStack.push(token_buf),lastFoundSymbol=token_buf,isSymbolLeftOfAssignment||addSymbolRightOfAssignment(token_buf),get_next_token(),scanningParameters.push(!0),")"!==token){for(scan_stmt(),d++;","===token;)get_next_token(),2===d&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("roots")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter(function(a){return!new RegExp("roots_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(a)}),skipRootVariableToBeSolved=!0),-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("defint")&&(2===d||d>2&&(d-2)%3==0)&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter(function(a){return!new RegExp("defint_"+(functionInvokationsScanningStack.length-1)+"_"+token_buf).test(a)}),skipRootVariableToBeSolved=!0),scan_stmt(),skipRootVariableToBeSolved=!1,d++;2===d&&-1!==functionInvokationsScanningStack[functionInvokationsScanningStack.length-1].indexOf("roots")&&(symbolsRightOfAssignment=symbolsRightOfAssignment.filter(function(a){return!new RegExp("roots_"+(functionInvokationsScanningStack.length-1)+"_x").test(a)}))}for(scanningParameters.pop(),c=a=0,f=symbolsRightOfAssignment.length;0<=f?a<=f:a>=f;c=0<=f?++a:--a)null!=symbolsRightOfAssignment[c]&&("roots"===b&&(symbolsRightOfAssignment[c]=symbolsRightOfAssignment[c].replace(new RegExp("roots_"+(functionInvokationsScanningStack.length-1)+"_"),"")),"defint"===b&&(symbolsRightOfAssignment[c]=symbolsRightOfAssignment[c].replace(new RegExp("defint_"+(functionInvokationsScanningStack.length-1)+"_"),"")));if(")"!==token&&scan_error(") expected"),get_next_token(),list(d),"roots"!==b&&"defint"!==b||functionInvokationsScanningStack.pop(),b===symbol(PATTERN).printname&&(patternHasBeenFound=!0),DEBUG)return console.log("-- scan_function_call_with_function_name end")},scan_function_call_without_function_name=function(){var a;if(DEBUG&&console.log("-- scan_function_call_without_function_name start"),push_symbol(EVAL),swap(),list(2),a=1,get_next_token(),scanningParameters.push(!0),")"!==token)for(scan_stmt(),a++;","===token;)get_next_token(),scan_stmt(),a++;if(scanningParameters.pop(),")"!==token&&scan_error(") expected"),get_next_token(),list(a),DEBUG)return console.log("-- scan_function_call_without_function_name end: "+stack[tos-1])},scan_subexpr=function(){return 0,"("!==token&&scan_error("( expected"),get_next_token(),scan_stmt(),")"!==token&&scan_error(") expected"),get_next_token()},scan_tensor=function(){var a;for(a=0,"["!==token&&scan_error("[ expected"),get_next_token(),scan_stmt(),a=1;","===token;)get_next_token(),scan_stmt(),a++;return build_tensor(a),"]"!==token&&scan_error("] expected"),get_next_token()},scan_error=function(a){for(errorMessage="";input_str!==scan_str&&("\n"!==scanned[input_str]&&"\r"!==scanned[input_str]||input_str+1!==scan_str);)errorMessage+=scanned[input_str++];for(errorMessage+=" ? ";scanned[input_str]&&"\n"!==scanned[input_str]&&"\r"!==scanned[input_str];)errorMessage+=scanned[input_str++];return errorMessage+="\n",stop(a)},build_tensor=function(a){var b,c,d;for(c=0,save(),p2=alloc_tensor(a),p2.tensor.ndim=1,p2.tensor.dim[0]=a,c=b=0,d=a;0<=d?b<d:b>d;c=0<=d?++b:--b)p2.tensor.elem[c]=stack[tos-a+c];return check_tensor_dimensions(p2),tos-=a,push(p2),restore()},get_next_token=function(){for(newline_flag=0;;){if(get_token(),token!==T_NEWLINE)break;newline_flag=1}if(DEBUG)return console.log("get_next_token token: "+token)},get_token=function(){for(;isspace(scanned[scan_str]);){if("\n"===scanned[scan_str]||"\r"===scanned[scan_str])return token=T_NEWLINE,void scan_str++;scan_str++}if(token_str=scan_str,scan_str===scanned.length)return void(token="");if(isdigit(scanned[scan_str])||"."===scanned[scan_str]){for(;isdigit(scanned[scan_str]);)scan_str++;if("."===scanned[scan_str]){for(scan_str++;isdigit(scanned[scan_str]);)scan_str++;if("e"===scanned[scan_str]&&("+"===scanned[scan_str+1]||"-"===scanned[scan_str+1]||isdigit(scanned[scan_str+1])))for(scan_str+=2;isdigit(scanned[scan_str]);)scan_str++;token=T_DOUBLE}else token=T_INTEGER;return void update_token_buf(token_str,scan_str)}if(isalpha(scanned[scan_str])){for(;isalnumorunderscore(scanned[scan_str]);)scan_str++;return token="("===scanned[scan_str]?T_FUNCTION:T_SYMBOL,void update_token_buf(token_str,scan_str)}if('"'===scanned[scan_str]){for(scan_str++;'"'!==scanned[scan_str];)scan_str===scanned.length-1&&(scan_str++,scan_error("runaway string"),scan_str--),scan_str++;return scan_str++,token=T_STRING,void update_token_buf(token_str+1,scan_str-1)}if("#"===scanned[scan_str]||"-"===scanned[scan_str]&&"-"===scanned[scan_str+1]){for(;scanned[scan_str]&&"\n"!==scanned[scan_str]&&"\r"!==scanned[scan_str];)scan_str++;return scanned[scan_str]&&scan_str++,void(token=T_NEWLINE)}return":"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_QUOTASSIGN)):"="===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_EQ)):"!"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_NEQ)):"<"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_LTEQ)):">"===scanned[scan_str]&&"="===scanned[scan_str+1]?(scan_str+=2,void(token=T_GTEQ)):token=scanned[scan_str++]},update_token_buf=function(a,b){return token_buf=scanned.substring(a,b)},$.scan=scan,Eval_sgn=function(){return push(cadr(p1)),Eval(),sgn()},sgn=function(){return save(),yysgn(),restore()},yysgn=function(){return p1=pop(),isdouble(p1)?p1.d>0?void push_integer(1):0===p1.d?void push_integer(1):void push_integer(-1):isrational(p1)?-1===MSIGN(mmul(p1.q.a,p1.q.b))?void push_integer(-1):MZERO(mmul(p1.q.a,p1.q.b))?void push_integer(0):void push_integer(1):iscomplexnumber(p1)?(push_integer(-1),push(p1),absval(),power(),push(p1),void multiply()):isnegativeterm(p1)?(push_symbol(SGN),push(p1),negate(),list(2),push_integer(-1),void multiply()):(push_symbol(SGN),push(p1),list(2))},Eval_shape=function(){return push(cadr(p1)),Eval(),shape()},shape=function(){var a,b,c,d,e,f,g,h;for(e=0,f=0,0,c=[],d=[],e=a=0,g=MAXDIM;0<=g?a<g:a>g;e=0<=g?++a:--a)c[e]=0,d[e]=0;if(save(),p1=pop(),!istensor(p1))return iszero(p1)||stop("transpose: tensor expected, 1st arg is not a tensor"),push(zero),void restore();for(f=p1.tensor.ndim,p2=alloc_tensor(f),p2.tensor.ndim=1,p2.tensor.dim[0]=f,e=b=0,h=f;0<=h?b<h:b>h;e=0<=h?++b:--b)push_integer(p1.tensor.dim[e]),p2.tensor.elem[e]=pop();return push(p2),restore()},Eval_simfac=function(){return push(cadr(p1)),Eval(),simfac()},simfac=function(){var a;if(a=0,save(),p1=pop(),car(p1)===symbol(ADD)){for(a=tos,p1=cdr(p1);p1!==symbol(NIL);)push(car(p1)),simfac_term(),p1=cdr(p1);add_all(tos-a)}else push(p1),simfac_term();return restore()},simfac_term=function(){var b;if(b=0,save(),p1=pop(),car(p1)!==symbol(MULTIPLY))return push(p1),void restore();for(b=tos,p1=cdr(p1);p1!==symbol(NIL);)push(car(p1)),p1=cdr(p1);for(;yysimfac(b);)1;return multiply_all_noexpand(tos-b),restore()},yysimfac=function(a){var b,c,d,e,f,g,h,i;for(d=0,e=0,d=b=f=a,g=tos;f<=g?b<g:b>g;d=f<=g?++b:--b)for(p1=stack[d],e=c=h=a,i=tos;h<=i?c<i:c>i;e=h<=i?++c:--c)if(d!==e){if(p2=stack[e],car(p1)===symbol(FACTORIAL)&&car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&equal(cadr(p1),cadr(p2)))return push(cadr(p1)),push(one),subtract(),factorial(),stack[d]=pop(),stack[e]=one,1;if(car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&caadr(p2)===symbol(FACTORIAL)&&equal(p1,cadadr(p2)))return push(p1),push_integer(-1),add(),factorial(),reciprocate(),stack[d]=pop(),stack[e]=one,1;if(car(p2)===symbol(FACTORIAL)&&(push(p1),push(cadr(p2)),subtract(),p3=pop(),isplusone(p3)))return push(p1),factorial(),stack[d]=pop(),stack[e]=one,1;if(car(p1)===symbol(POWER)&&isminusone(caddr(p1))&&car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&caadr(p2)===symbol(FACTORIAL)&&(push(cadr(p1)),push(cadr(cadr(p2))),subtract(),p3=pop(),isplusone(p3)))return push(cadr(p1)),factorial(),reciprocate(),stack[d]=pop(),stack[e]=one,1;if(car(p1)===symbol(FACTORIAL)&&car(p2)===symbol(POWER)&&isminusone(caddr(p2))&&caadr(p2)===symbol(FACTORIAL)){if(push(cadr(p1)),push(cadr(cadr(p2))),subtract(),p3=pop(),isplusone(p3))return stack[d]=cadr(p1),stack[e]=one,1;if(isminusone(p3))return push(cadr(cadr(p2))),reciprocate(),stack[d]=pop(),stack[e]=one,1;if(equaln(p3,2))return stack[d]=cadr(p1),push(cadr(p1)),push_integer(-1),add(),stack[e]=pop(),1;if(equaln(p3,-2))return push(cadr(cadr(p2))),reciprocate(),stack[d]=pop(),push(cadr(cadr(p2))),push_integer(-1),add(),reciprocate(),stack[e]=pop(),1}}return 0},Eval_simplify=function(){return push(cadr(p1)),runUserDefinedSimplifications(),Eval(),simplify()},runUserDefinedSimplifications=function(){var a,b,c,d,e,f,g,h,i,j;if(0!==userSimplificationsInListForm.length&&!Find(cadr(p1),symbol(INTEGRAL))){for(i=expanding,expanding=!1,DEBUG&&console.log("runUserDefinedSimplifications passed: "+stack[tos-1].toString()),Eval(),DEBUG&&console.log("runUserDefinedSimplifications after eval no expanding: "+stack[tos-1].toString()),expanding=i,p1=stack[tos-1],DEBUG&&console.log("patterns to be checked: "),a=0,f=userSimplificationsInListForm.length;a<f;a++)e=userSimplificationsInListForm[a],DEBUG&&console.log("..."+e);for(c=!0,h=0;c&&h<MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES;)for(c=!1,h++,b=0,g=userSimplificationsInListForm.length;b<g;b++){for(e=userSimplificationsInListForm[b],j=!0,d=0;j&&d<MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE;)d++,DEBUG&&console.log("simplify - tos: "+tos+" checking pattern: "+e+" on: "+p1),push_symbol(NIL),j=transform(e,!0),j&&(c=!0),p1=stack[tos-1],DEBUG&&console.log("p1 at this stage of simplification: "+p1);d===MAX_CONSECUTIVE_APPLICATIONS_OF_SINGLE_RULE&&stop("maximum application of single transformation rule exceeded: "+e)}if(h===MAX_CONSECUTIVE_APPLICATIONS_OF_ALL_RULES&&stop("maximum application of all transformation rules exceeded "),DEBUG)return console.log("METAX = "+get_binding(symbol(METAX))),console.log("METAA = "+get_binding(symbol(METAA))),console.log("METAB = "+get_binding(symbol(METAB)))}},simplifyForCodeGeneration=function(){return save(),runUserDefinedSimplifications(),codeGen=!0,simplify_main(),codeGen=!1,restore()},simplify=function(){return save(),simplify_main(),restore()},simplify_main=function(){var args,fbody;return p1=pop(),codeGen&&car(p1)===symbol(FUNCTION)&&(fbody=cadr(p1),push(fbody),eval(),simplify(),p3=pop(),args=caddr(p1),push_symbol(FUNCTION),push(p3),push(args),list(3),p1=pop()),istensor(p1)?void simplify_tensor():(Find(p1,symbol(FACTORIAL))&&(push(p1),simfac(),p2=pop(),push(p1),rationalize(),simfac(),p3=pop(),p1=count(p2)<count(p3)?p2:p3),f10(),f1(),f2(),f3(),f4(),f5(),f9(),simplify_polarRect(),do_simplify_nested_radicals&&simplify_nested_radicals()?(DEBUG&&console.log("de-nesting successful into: "+p1.toString()),push(p1),void simplify()):(simplify_rectToClock(),push(p1)))},simplify_tensor=function(){var a,b,c,d,e;for(c=0,p2=alloc_tensor(p1.tensor.nelem),p2.tensor.ndim=p1.tensor.ndim,c=a=0,d=p1.tensor.ndim;0<=d?a<d:a>d;c=0<=d?++a:--a)p2.tensor.dim[c]=p1.tensor.dim[c];for(c=b=0,e=p1.tensor.nelem;0<=e?b<e:b>e;c=0<=e?++b:--b)push(p1.tensor.elem[c]),simplify(),p2.tensor.elem[c]=pop();return check_tensor_dimensions(p2),iszero(p2)&&(p2=zero),push(p2)},f1=function(){if(car(p1)===symbol(ADD))return push(p1),rationalize(),p2=pop(),count(p2)<count(p1)?p1=p2:void 0},f2=function(){if(car(p1)===symbol(ADD))return push(p1),Condense(),p2=pop(),count(p2)<=count(p1)?p1=p2:void 0},f3=function(){if(push(p1),rationalize(),negate(),rationalize(),negate(),rationalize(),p2=pop(),count(p2)<count(p1))return p1=p2},f10=function(){var a,b,c,e;if(c=car(p1),cdr(p1),(c===symbol(MULTIPLY)||isinnerordot(p1))&&car(car(cdr(p1)))===symbol(TRANSPOSE)&&car(car(cdr(cdr(p1))))===symbol(TRANSPOSE)&&(DEBUG&&console.log("maybe collecting a transpose "+p1),a=cadr(car(cdr(p1))),b=cadr(car(cdr(cdr(p1)))),c===symbol(MULTIPLY)?(push(a),push(b),multiply()):isinnerordot(p1)&&(push(b),push(a),inner()),push_integer(1),push_integer(2),e=expanding,expanding=!1,transpose(),expanding=e,p2=pop(),count(p2)<count(p1)&&(p1=p2),DEBUG))return console.log("collecting a transpose "+p2)},f4=function(){if(!iszero(p1))return push(p1),rationalize(),inverse(),rationalize(),inverse(),rationalize(),p2=pop(),count(p2)<count(p1)?p1=p2:void 0},simplify_trig=function(){return save(),p1=pop(),f5(),push(p1),restore()},f5=function(){if(0!==Find(p1,symbol(SIN))||0!==Find(p1,symbol(COS)))return p2=p1,trigmode=1,push(p2),Eval(),p3=pop(),trigmode=2,push(p2),Eval(),p4=pop(),trigmode=0,(count(p4)<count(p3)||nterms(p4)<nterms(p3))&&(p3=p4),count(p3)<count(p1)||nterms(p3)<nterms(p1)?p1=p3:void 0},f9=function(){if(car(p1)===symbol(ADD)){for(push_integer(0),p2=cdr(p1);iscons(p2);)push(car(p2)),simplify(),add(),p2=cdr(p2);return p2=pop(),count(p2)<count(p1)?p1=p2:void 0}},simplify_rectToClock=function(){if(0!==Find(p1,symbol(SIN))||0!==Find(p1,symbol(COS)))return push(p1),Eval(),clockform(),p2=pop(),DEBUG&&console.log("before simplification clockform: "+p1+" after: "+p2),count(p2)<count(p1)?p1=p2:void 0},simplify_polarRect=function(){if(push(p1),polarRectAMinusOneBase(),Eval(),p2=pop(),count(p2)<count(p1))return p1=p2},polarRectAMinusOneBase=function(){var a;if(save(),p1=pop(),isimaginaryunit(p1))return push(p1),void restore();if(equal(car(p1),symbol(POWER))&&isminusone(cadr(p1)))push(one),negate(),push(caddr(p1)),polarRectAMinusOneBase(),power(),polar(),rect();else if(iscons(p1)){for(a=tos;iscons(p1);)push(car(p1)),polarRectAMinusOneBase(),p1=cdr(p1);list(tos-a)}else push(p1);restore()},nterms=function(a){return car(a)!==symbol(ADD)?1:length(a)-1},simplify_nested_radicals=function(){var a,b,c,d;return recursionLevelNestedRadicalsRemoval>0?(DEBUG&&console.log("denesting bailing out because of too much recursion"),!1):(push(p1),d=take_care_of_nested_radicals(),c=stack[tos-1],a=expanding,expanding=0,yycondense(),expanding=a,b=pop(),push(countOccurrencesOfSymbol(symbol(POWER),c)<countOccurrencesOfSymbol(symbol(POWER),b)?c:b),p1=pop(),d)},take_care_of_nested_radicals=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M;if(recursionLevelNestedRadicalsRemoval>0)return DEBUG&&console.log("denesting bailing out because of too much recursion"),!1;if(save(),p1=pop(),equal(car(p1),symbol(POWER))){if(j=cadr(p1),p=caddr(p1),!isminusone(p)&&equal(car(j),symbol(ADD))&&isfraction(p)&&(equalq(p,1,3)||equalq(p,1,2))){for(q=cadr(j),push(q),take_care_of_nested_radicals(),pop(),J=caddr(j),push(J),take_care_of_nested_radicals(),pop(),B=0,n=j;cdr(n)!==symbol(NIL);)B++,n=cdr(n);if(B>2)return push(p1),restore(),!1;if(m=null,l=[],L=[],car(J)===symbol(MULTIPLY)){if(K=cdr(J),iscons(K))for(;iscons(K);)G=car(K),car(G)===symbol(POWER)?(t=cadr(G),u=caddr(G),equalq(u,1,2)&&(null==m?(m=u,l.push(t)):equal(u,m)&&l.push(t))):L.push(G),K=cdr(K)}else car(J)===symbol(POWER)&&(t=cadr(J),u=caddr(J),null==m&&equalq(u,1,2)&&(m=u,l.push(t)));if(0===l.length)return push(p1),restore(),!1;for(a=q,push_integer(1),e=0,v=l.length;e<v;e++)s=l[e],push(s),multiply();for(c=pop(),push_integer(1),f=0,w=L.length;f<w;f++)s=L[f],push(s),multiply();if(b=pop(),equalq(p,1,3)){if(push(a),negate(),push(c),multiply(),push(b),divide(),k=pop(),push(k),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return push(p1),restore(),!1;if(push(k),push_integer(3),push(c),multiply(),k=pop(),push(k),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return pop(),push(p1),restore(),!1;if(push(k),push(symbol(SECRETX)),multiply(),push_integer(-3),push(a),multiply(),push(b),divide(),k=pop(),push(k),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return pop(),pop(),push(p1),restore(),!1;push(k),push(symbol(SECRETX)),push_integer(2),power(),multiply(),push_integer(1),push(symbol(SECRETX)),push_integer(3),power(),multiply(),add(),add(),add()}else if(equalq(p,1,2)){if(push(c),k=pop(),push(k),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return push(p1),restore(),!1;if(push(k),push_integer(-2),push(a),multiply(),push(b),divide(),k=pop(),push(k),real(),yyfloat(),Math.abs(pop().d)>Math.pow(2,32))return pop(),push(p1),restore(),!1;push(k),push(symbol(SECRETX)),multiply(),push_integer(1),push(symbol(SECRETX)),push_integer(2),power(),multiply(),add(),add()}if(push(symbol(SECRETX)),recursionLevelNestedRadicalsRemoval++,roots(),recursionLevelNestedRadicalsRemoval--,equal(stack[tos-1],symbol(NIL)))return DEBUG&&console.log("roots bailed out because of too much recursion"),pop(),push(p1),restore(),!1;for(F=[],I=stack[tos-1].tensor.elem,g=0,x=I.length;g<x;g++)o=I[g],Find(o,symbol(POWER))||F.push(o);if(pop(),0===F.length)return push(p1),restore(),!1;for(E=[],H=[],h=0,y=F.length;h<y;h++)s=F[h],push(s),real(),yyfloat(),E.push(s),H.push(pop().d);return M=H.indexOf(Math.max.apply(Math,H)),(d=E[M],equalq(p,1,3)?(push(a),push(d),push_integer(3),power(),push_integer(3),push(c),multiply(),push(d),multiply(),add(),divide(),push_rational(1,3),power()):equalq(p,1,2)&&(push(a),push(d),push_integer(2),power(),push(c),add(),divide(),push_rational(1,2),power()),null==(A=pop()))?(push(p1),restore(),!1):(push(A),push(d),multiply(),equalq(p,1,3)?(z=pop(),push(A),push(c),push_rational(1,2),power(),multiply(),push(z),add(),simplify()):equalq(p,1,2)&&(z=pop(),push(A),push(c),push_rational(1,2),power(),multiply(),push(z),add(),simplify(),C=pop(),push(C),real(),yyfloat(),D=pop(),isnegativenumber(D)?(push(A),negate(),A=pop(),push(z),negate(),z=pop(),push(A),push(c),push_rational(1,2),power(),multiply(),push(z),add(),simplify()):push(C)),p1=pop(),push(p1),restore(),!0)}return push(p1),restore(),!1}if(iscons(p1)){for(r=tos,i=!1;iscons(p1);)push(car(p1)),i=i||take_care_of_nested_radicals(),p1=cdr(p1);return list(tos-r),restore(),i}return push(p1),restore(),!1},Eval_sin=function(){return push(cadr(p1)),Eval(),sine()},sine=function(){return save(),p1=pop(),car(p1)===symbol(ADD)?sine_of_angle_sum():sine_of_angle(),restore()},sine_of_angle_sum=function(){for(p2=cdr(p1);iscons(p2);){if(p4=car(p2),isnpi(p4))return push(p1),push(p4),subtract(),p3=pop(),push(p3),sine(),push(p4),cosine(),multiply(),push(p3),cosine(),push(p4),sine(),multiply(),void add();p2=cdr(p2)}return sine_of_angle()},sine_of_angle=function(){var a,b;if(car(p1)===symbol(ARCSIN))return void push(cadr(p1));if(isdouble(p1))return a=Math.sin(p1.d),Math.abs(a)<1e-10&&(a=0),void push_double(a);if(isnegative(p1))return push(p1),negate(),sine(),void negate();if(car(p1)===symbol(ARCTAN))return push(cadr(p1)),push_integer(1),push(cadr(p1)),push_integer(2),power(),add(),push_rational(-1,2),power(),void multiply();if(push(p1),push_integer(180),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),divide(),(b=pop_integer())<0||isNaN(b))return push(symbol(SIN)),push(p1),void list(2);switch(b%360){case 0:case 180:return push_integer(0);case 30:case 150:return push_rational(1,2);case 210:case 330:return push_rational(-1,2);case 45:case 135:return push_rational(1,2),push_integer(2),push_rational(1,2),power(),multiply();case 225:case 315:return push_rational(-1,2),push_integer(2),push_rational(1,2),power(),multiply();case 60:case 120:return push_rational(1,2),push_integer(3),push_rational(1,2),power(),multiply();case 240:case 300:return push_rational(-1,2),push_integer(3),push_rational(1,2),power(),multiply();case 90:return push_integer(1);case 270:return push_integer(-1);default:return push(symbol(SIN)),push(p1),list(2)}},Eval_sinh=function(){return push(cadr(p1)),Eval(),ysinh()},ysinh=function(){return save(),yysinh(),restore()},yysinh=function(){var a;return a=0,p1=pop(),car(p1)===symbol(ARCSINH)?void push(cadr(p1)):isdouble(p1)?(a=Math.sinh(p1.d),Math.abs(a)<1e-10&&(a=0),void push_double(a)):iszero(p1)?void push(zero):(push_symbol(SINH),push(p1),list(2))},subst=function(){var a,b,c,d,e;if(c=0,save(),p3=pop(),(p2=pop())===symbol(NIL)||p3===symbol(NIL))return void restore();if(p1=pop(),istensor(p1)){for(p4=alloc_tensor(p1.tensor.nelem),p4.tensor.ndim=p1.tensor.ndim,c=a=0,d=p1.tensor.ndim;0<=d?a<d:a>d;c=0<=d?++a:--a)p4.tensor.dim[c]=p1.tensor.dim[c];for(c=b=0,e=p1.tensor.nelem;0<=e?b<e:b>e;c=0<=e?++b:--b)push(p1.tensor.elem[c]),push(p2),push(p3),subst(),p4.tensor.elem[c]=pop(),check_tensor_dimensions(p4);push(p4)}else equal(p1,p2)?push(p3):iscons(p1)?(push(car(p1)),push(p2),push(p3),subst(),push(cdr(p1)),push(p2),push(p3),subst(),cons()):push(p1);return restore()},Eval_sum=function(){var a,b,c,d,e,f;for(b=0,c=0,d=0,p6=cadr(p1),issymbol(p6)||stop("sum: 1st arg?"),push(caddr(p1)),Eval(),c=pop_integer(),isNaN(c)&&stop("sum: 2nd arg?"),push(cadddr(p1)),Eval(),d=pop_integer(),isNaN(d)&&stop("sum: 3rd arg?"),p1=caddddr(p1),p4=get_binding(p6),push_integer(0),b=a=e=c,f=d;e<=f?a<=f:a>=f;b=e<=f?++a:--a)push_integer(b),p5=pop(),set_binding(p6,p5),push(p1),Eval(),add();return set_binding(p6,p4)},Eval_tan=function(){return push(cadr(p1)),Eval(),tangent()},tangent=function(){return save(),yytangent(),restore()},yytangent=function(){var a,b;if(b=0,a=0,p1=pop(),car(p1)===symbol(ARCTAN))return void push(cadr(p1));if(isdouble(p1))return a=Math.tan(p1.d),Math.abs(a)<1e-10&&(a=0),void push_double(a);if(isnegative(p1))return push(p1),negate(),tangent(),void negate();if(push(p1),push_integer(180),multiply(),evaluatingAsFloats?push_double(Math.PI):push_symbol(PI),divide(),(b=pop_integer())<0||isNaN(b))return push(symbol(TAN)),push(p1),void list(2);switch(b%360){case 0:case 180:return push_integer(0);case 30:case 210:return push_rational(1,3),push_integer(3),push_rational(1,2),power(),multiply();case 150:case 330:return push_rational(-1,3),push_integer(3),push_rational(1,2),power(),multiply();case 45:case 225:return push_integer(1);case 135:case 315:return push_integer(-1);case 60:case 240:return push_integer(3),push_rational(1,2),power();case 120:case 300:return push_integer(3),push_rational(1,2),power(),negate();default:return push(symbol(TAN)),push(p1),list(2)}},Eval_tanh=function(){var a;return a=0,push(cadr(p1)),Eval(),p1=pop(),car(p1)===symbol(ARCTANH)?void push(cadr(p1)):isdouble(p1)?(a=Math.tanh(p1.d),Math.abs(a)<1e-10&&(a=0),void push_double(a)):iszero(p1)?void push(zero):(push_symbol(TANH),push(p1),list(2))},Eval_taylor=function(){return p1=cdr(p1),push(car(p1)),Eval(),p1=cdr(p1),push(car(p1)),Eval(),p2=pop(),p2===symbol(NIL)?guess():push(p2),p1=cdr(p1),push(car(p1)),Eval(),p2=pop(),p2===symbol(NIL)?push_integer(24):push(p2),p1=cdr(p1),push(car(p1)),Eval(),p2=pop(),p2===symbol(NIL)?push_integer(0):push(p2),taylor()},taylor=function(){var a,b,c,d;if(b=0,c=0,save(),p4=pop(),p3=pop(),p2=pop(),p1=pop(),push(p3),c=pop_integer(),isNaN(c))return push_symbol(TAYLOR),push(p1),push(p2),push(p3),push(p4),list(5),void restore();for(push(p1),push(p2),push(p4),subst(),Eval(),push_integer(1),p5=pop(),b=a=1,d=c;(1<=d?a<=d:a>=d)&&(push(p1),push(p2),derivative(),p1=pop(),!iszero(p1));b=1<=d?++a:--a)push(p5),push(p2),push(p4),subtract(),multiply(),p5=pop(),push(p1),push(p2),push(p4),subst(),Eval(),push(p5),multiply(),push_integer(b),factorial(),divide(),add();return restore()},Eval_tensor=function(){var a,b,c,d,e,f,g,h,i;for(e=0,f=0,g=0,check_tensor_dimensions(p1),g=p1.tensor.nelem,f=p1.tensor.ndim,p2=alloc_tensor(g),p2.tensor.ndim=f,e=b=0,h=f;0<=h?b<h:b>h;e=0<=h?++b:--b)p2.tensor.dim[e]=p1.tensor.dim[e];for(a=p1.tensor.elem,d=p2.tensor.elem,check_tensor_dimensions(p2),e=c=0,i=g;0<=i?c<i:c>i;e=0<=i?++c:--c)push(a[e]),Eval(),d[e]=pop();return check_tensor_dimensions(p1),check_tensor_dimensions(p2),push(p2),promote_tensor()},tensor_plus_tensor=function(){var a,b,c,d,e,f,g,h,i,j,k,l;if(g=0,h=0,i=0,save(),p2=pop(),p1=pop(),(h=p1.tensor.ndim)!==p2.tensor.ndim)return push(symbol(NIL)),void restore();for(g=b=0,j=h;0<=j?b<j:b>j;g=0<=j?++b:--b)if(p1.tensor.dim[g]!==p2.tensor.dim[g])return push(symbol(NIL)),void restore();for(i=p1.tensor.nelem,p3=alloc_tensor(i),p3.tensor.ndim=h,g=c=0,k=h;0<=k?c<k:c>k;g=0<=k?++c:--c)p3.tensor.dim[g]=p1.tensor.dim[g];for(a=p1.tensor.elem,e=p2.tensor.elem,f=p3.tensor.elem,g=d=0,l=i;0<=l?d<l:d>l;g=0<=l?++d:--d)push(a[g]),push(e[g]),add(),f[g]=pop();return push(p3),restore()},tensor_times_scalar=function(){var a,b,c,d,e,f,g,h,i;for(e=0,f=0,g=0,save(),p2=pop(),p1=pop(),f=p1.tensor.ndim,g=p1.tensor.nelem,p3=alloc_tensor(g),p3.tensor.ndim=f,e=b=0,h=f;0<=h?b<h:b>h;e=0<=h?++b:--b)p3.tensor.dim[e]=p1.tensor.dim[e];for(a=p1.tensor.elem,d=p3.tensor.elem,e=c=0,i=g;0<=i?c<i:c>i;e=0<=i?++c:--c)push(a[e]),push(p2),multiply(),d[e]=pop();return push(p3),restore()},scalar_times_tensor=function(){var a,b,c,d,e,f,g,h,i;for(e=0,f=0,g=0,save(),p2=pop(),p1=pop(),f=p2.tensor.ndim,g=p2.tensor.nelem,p3=alloc_tensor(g),p3.tensor.ndim=f,e=b=0,h=f;0<=h?b<h:b>h;e=0<=h?++b:--b)p3.tensor.dim[e]=p2.tensor.dim[e];for(a=p2.tensor.elem,d=p3.tensor.elem,e=c=0,i=g;0<=i?c<i:c>i;e=0<=i?++c:--c)push(p1),push(a[e]),multiply(),d[e]=pop();return push(p3),restore()},check_tensor_dimensions=function(a){a.tensor.nelem!==a.tensor.elem.length&&console.log("something wrong in tensor dimensions")},is_square_matrix=function(a){return istensor(a)&&2===a.tensor.ndim&&a.tensor.dim[0]===a.tensor.dim[1]?1:0},d_tensor_tensor=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m;if(g=0,h=0,i=0,j=0,i=p1.tensor.ndim,j=p1.tensor.nelem,i+1>=MAXDIM)return push_symbol(DERIVATIVE),push(p1),push(p2),void list(3);for(p3=alloc_tensor(j*p2.tensor.nelem),p3.tensor.ndim=i+1,g=b=0,k=i;0<=k?b<k:b>k;g=0<=k?++b:--b)p3.tensor.dim[g]=p1.tensor.dim[g];for(p3.tensor.dim[i]=p2.tensor.dim[0],a=p1.tensor.elem,e=p2.tensor.elem,f=p3.tensor.elem,g=c=0,l=j;0<=l?c<l:c>l;g=0<=l?++c:--c)for(h=d=0,m=p2.tensor.nelem;0<=m?d<m:d>m;h=0<=m?++d:--d)push(a[g]),push(e[h]),derivative(),f[g*p2.tensor.nelem+h]=pop();return push(p3)},d_scalar_tensor=function(){var a,b,c,d,e;for(p3=alloc_tensor(p2.tensor.nelem),p3.tensor.ndim=1,p3.tensor.dim[0]=p2.tensor.dim[0],a=p2.tensor.elem,c=p3.tensor.elem,d=b=0,e=p2.tensor.nelem;0<=e?b<e:b>e;d=0<=e?++b:--b)push(p1),push(a[d]),derivative(),c[d]=pop();return push(p3)},d_tensor_scalar=function(){var a,b,c,d,e,f,g;for(e=0,p3=alloc_tensor(p1.tensor.nelem),p3.tensor.ndim=p1.tensor.ndim,e=b=0,f=p1.tensor.ndim;0<=f?b<f:b>f;e=0<=f?++b:--b)p3.tensor.dim[e]=p1.tensor.dim[e];for(a=p1.tensor.elem,d=p3.tensor.elem,e=c=0,g=p1.tensor.nelem;0<=g?c<g:c>g;e=0<=g?++c:--c)push(a[e]),push(p2),derivative(),d[e]=pop();return push(p3)},compare_tensors=function(a,b){var c,d,e,f,g;if(e=0,a.tensor.ndim<b.tensor.ndim)return-1;if(a.tensor.ndim>b.tensor.ndim)return 1;for(e=c=0,f=a.tensor.ndim;0<=f?c<f:c>f;e=0<=f?++c:--c){if(a.tensor.dim[e]<b.tensor.dim[e])return-1;if(a.tensor.dim[e]>b.tensor.dim[e])return 1}for(e=d=0,g=a.tensor.nelem;0<=g?d<g:d>g;e=0<=g?++d:--d)if(!equal(a.tensor.elem[e],b.tensor.elem[e]))return lessp(a.tensor.elem[e],b.tensor.elem[e])?-1:1;return 0},power_tensor=function(){var a,b,c,d,e,f,g,h;if(c=0,d=0,e=0,d=p1.tensor.ndim-1,p1.tensor.dim[0]!==p1.tensor.dim[d])return push_symbol(POWER),push(p1),push(p2),void list(3);if(push(p2),e=pop_integer(),isNaN(e))return push_symbol(POWER),push(p1),push(p2),void list(3);if(0===e){for(2!==p1.tensor.ndim&&stop("power(tensor,0) with tensor rank not equal to 2"),e=p1.tensor.dim[0],p1=alloc_tensor(e*e),p1.tensor.ndim=2,p1.tensor.dim[0]=e,p1.tensor.dim[1]=e,c=a=0,f=e;0<=f?a<f:a>f;c=0<=f?++a:--a)p1.tensor.elem[e*c+c]=one;return check_tensor_dimensions(p1),void push(p1)}for(e<0&&(e=-e,push(p1),inv(),p1=pop()),push(p1),h=[],c=b=1,g=e;(1<=g?b<g:b>g)&&(push(p1),inner(),!iszero(stack[tos-1]));c=1<=g?++b:--b)h.push(void 0);return h},copy_tensor=function(){var a,b,c,d,e;for(c=0,save(),p1=pop(),p2=alloc_tensor(p1.tensor.nelem),p2.tensor.ndim=p1.tensor.ndim,c=a=0,d=p1.tensor.ndim;0<=d?a<d:a>d;c=0<=d?++a:--a)p2.tensor.dim[c]=p1.tensor.dim[c];for(c=b=0,e=p1.tensor.nelem;0<=e?b<e:b>e;c=0<=e?++b:--b)p2.tensor.elem[c]=p1.tensor.elem[c];return check_tensor_dimensions(p1),check_tensor_dimensions(p2),push(p2),restore()},promote_tensor=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o;if(f=0,g=0,h=0,j=0,i=0,save(),p1=pop(),!istensor(p1))return push(p1),void restore();for(p2=p1.tensor.elem[0],f=a=1,k=p1.tensor.nelem;1<=k?a<k:a>k;f=1<=k?++a:--a)compatible(p2,p1.tensor.elem[f])||stop("Cannot promote tensor due to inconsistent tensor components.");if(!istensor(p2))return push(p1),void restore();for(i=p1.tensor.ndim+p2.tensor.ndim,i>MAXDIM&&stop("tensor rank > "+MAXDIM),j=p1.tensor.nelem*p2.tensor.nelem,p3=alloc_tensor(j),p3.tensor.ndim=i,f=b=0,l=p1.tensor.ndim;0<=l?b<l:b>l;f=0<=l?++b:--b)p3.tensor.dim[f]=p1.tensor.dim[f];for(g=c=0,m=p2.tensor.ndim;0<=m?c<m:c>m;g=0<=m?++c:--c)p3.tensor.dim[f+g]=p2.tensor.dim[g];for(h=0,f=d=0,n=p1.tensor.nelem;0<=n?d<n:d>n;f=0<=n?++d:--d)for(p2=p1.tensor.elem[f],g=e=0,o=p2.tensor.nelem;0<=o?e<o:e>o;g=0<=o?++e:--e)p3.tensor.elem[h++]=p2.tensor.elem[g];return check_tensor_dimensions(p2),check_tensor_dimensions(p3),push(p3),restore()},compatible=function(a,b){var c,d,e;if(!istensor(a)&&!istensor(b))return 1;if(!istensor(a)||!istensor(b))return 0;if(a.tensor.ndim!==b.tensor.ndim)return 0;for(d=c=0,e=a.tensor.ndim;0<=e?c<e:c>e;d=0<=e?++c:--c)if(a.tensor.dim[d]!==b.tensor.dim[d])return 0;return 1},Eval_test=function(){for(p1=cdr(p1);iscons(p1);){if(cdr(p1)===symbol(NIL))return push(car(p1)),void Eval();if(push(car(p1)),Eval_predicate(),p2=pop(),!iszero(p2))return push(cadr(p1)),void Eval();p1=cddr(p1)}return push_integer(0)},Eval_testeq=function(){var a;return push(cadr(p1)),Eval(),push(caddr(p1)),Eval(),subtract(),a=pop(),iszero(a)?(p1=a,push_integer(1)):(push(cadr(p1)),Eval(),simplify(),push(caddr(p1)),Eval(),simplify(),subtract(),p1=pop(),push_integer(iszero(p1)?1:0))},Eval_testge=function(){return push_integer(cmp_args()>=0?1:0)},Eval_testgt=function(){return push_integer(cmp_args()>0?1:0)},Eval_testle=function(){return push_integer(cmp_args()<=0?1:0)},Eval_testlt=function(){return push_integer(cmp_args()<0?1:0)},Eval_not=function(){return push(cadr(p1)),Eval_predicate(),p1=pop(),push_integer(iszero(p1)?1:0)},Eval_and=function(){for(p1=cdr(p1);iscons(p1);){if(push(car(p1)),Eval_predicate(),p2=pop(),iszero(p2))return void push_integer(0);p1=cdr(p1)}return push_integer(1)},Eval_or=function(){for(p1=cdr(p1);iscons(p1);){if(push(car(p1)),Eval_predicate(),p2=pop(),!iszero(p2))return void push_integer(1);p1=cdr(p1)}return push_integer(0)},cmp_args=function(){var a;if(a=0,push(cadr(p1)),Eval(),simplify(),push(caddr(p1)),Eval(),simplify(),subtract(),p1=pop(),p1.k!==NUM&&p1.k!==DOUBLE&&(push(p1),yyfloat(),Eval(),p1=pop()),iszero(p1))return 0;switch(p1.k){case NUM:a=-1===MSIGN(p1.q.a)?-1:1;break;case DOUBLE:a=p1.d<0?-1:1;break;default:stop("relational operator: cannot determine due to non-numerical comparison of "+p1),a=0}return a},transform=function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s;if(q=0,save(),p1=null,p4=pop(),p3=pop(),DEBUG&&console.log("         !!!!!!!!!   transform on: "+p3),saveMetaBindings(),set_binding(symbol(METAX),p4),q=tos,push_integer(1),push(p3),push(p4),polyform(),push(p4),f=tos-2,decomp(b),k=tos-f,DEBUG)for(console.log("\t"+k+" decomposed elements ====== "),h=c=0,l=k;0<=l?c<l:c>l;h=0<=l?++c:--c)console.log("\tdecomposition element "+h+": "+stack[tos-1-h]);if(r=!1,b){if(!isnum(p3))if(p=a,DEBUG&&console.log("applying transform: "+p),DEBUG&&console.log("scanning table entry "+p),push(p),push(symbol(SYMBOL_A_UNDERSCORE)),push(symbol(METAA)),subst(),push(symbol(SYMBOL_B_UNDERSCORE)),push(symbol(METAB)),subst(),push(symbol(SYMBOL_X_UNDERSCORE)),push(symbol(METAX)),subst(),p1=pop(),p5=car(p1),DEBUG&&console.log("template expression: "+p5),p6=cadr(p1),p7=cddr(p1),f_equals_a(q,b))r=!0;else{for(DEBUG&&console.log("p3 at this point: "+p3),s=[],DEBUG&&console.log("car(p3): "+car(p3)),m=p3,iscons(m)&&(s.push(car(p3)),m=cdr(p3));iscons(m);)n=car(m),m=cdr(m),DEBUG&&console.log("tos before recursive transform: "+tos),push(n),push_symbol(NIL),DEBUG&&console.log("testing: "+n),DEBUG&&console.log("about to try to simplify other term: "+n),o=transform(a,b),r=r||o,s.push(pop()),DEBUG&&console.log("tried to simplify other term: "+n+" ...successful?: "+o+" ...transformed: "+s[s.length-1]);if(0!==s.length){for(d=0,i=s.length;d<i;d++)h=s[d],push(h);list(s.length),p6=pop()}}}else for(e=0,j=a.length;e<j;e++)if(g=a[e],DEBUG&&(console.log("scanning table entry "+g),(g+"").indexOf("f(sqrt(a+b*x),2/3*1/b*sqrt((a+b*x)^3))")),g&&(scan_meta(g),p1=pop(),p5=cadr(p1),p6=caddr(p1),p7=cdddr(p1),f_equals_a(q,b))){r=!0;break}return tos=q,r?(push(p6),Eval(),p1=pop(),r=!0):p1=b?p3:symbol(NIL),restoreMetaBindings(),push(p1),restore(),r},saveMetaBindings=function(){return push(get_binding(symbol(METAA))),push(get_binding(symbol(METAB))),push(get_binding(symbol(METAX)))},restoreMetaBindings=function(){return set_binding(symbol(METAX),pop()),set_binding(symbol(METAB),pop()),set_binding(symbol(METAA),pop())},f_equals_a=function(a,b){var c,d,e,f,g,h,i,j,k;for(e=0,f=0,e=c=h=a,i=tos;h<=i?c<i:c>i;e=h<=i?++c:--c)for(set_binding(symbol(METAA),stack[e]),DEBUG&&console.log("  binding METAA to "+get_binding(symbol(METAA))),f=d=j=a,k=tos;j<=k?d<k:d>k;f=j<=k?++d:--d){for(set_binding(symbol(METAB),stack[f]),DEBUG&&console.log("  binding METAB to "+get_binding(symbol(METAB))),p1=p7;iscons(p1)&&(push(car(p1)),Eval(),p2=pop(),!iszero(p2));)p1=cdr(p1);if(!iscons(p1)&&(push(p3),DEBUG&&console.log("about to evaluate template expression: "+p5+" binding METAA to "+get_binding(symbol(METAA))+" and binding METAB to "+get_binding(symbol(METAB))+" and binding METAX to "+get_binding(symbol(METAX))),push(p5),b&&(g=expanding,expanding=!1),Eval(),b&&(expanding=g),DEBUG&&console.log("  comparing "+stack[tos-1]+" to: "+stack[tos-2]),subtract(),p1=pop(),iszero(p1)))return DEBUG&&(console.log("binding METAA to "+get_binding(symbol(METAA))),console.log("binding METAB to "+get_binding(symbol(METAB))),console.log("binding METAX to "+get_binding(symbol(METAX))),console.log("comparing "+p3+" to: "+p5)),1}return 0},Eval_transpose=function(){return push(cadr(p1)),Eval(),cddr(p1)===symbol(NIL)?(push_integer(1),push_integer(2)):(push(caddr(p1)),Eval(),push(cadddr(p1)),Eval()),transpose()},transpose=function(){var a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D;for(n=0,q=0,r=0,s=0,t=0,u=0,v=0,D=0,g=[],k=[],n=c=0,w=MAXDIM;0<=w?c<w:c>w;n=0<=w?++c:--c)g[n]=0,k[n]=0;if(save(),p3=pop(),p2=pop(),p1=pop(),isnum(p1))return push(p1),void restore();if((isplusone(p2)&&isplustwo(p3)||isplusone(p3)&&isplustwo(p2))&&isidentitymatrix(p1))return push(p1),void restore();if(istranspose(p1)&&(o=car(cdr(cdr(p1))),p=car(cdr(cdr(cdr(p1)))),equal(o,p3)&&equal(p,p2)||equal(p,p3)&&equal(o,p2)||equal(o,symbol(NIL))&&equal(p,symbol(NIL))&&(isplusone(p3)&&isplustwo(p2)||isplusone(p2)&&isplustwo(p3))))return push(car(cdr(p1))),void restore();if(expanding&&isadd(p1)){for(p1=cdr(p1),push(zero);iscons(p1);)push(car(p1)),push(p2),push(p3),transpose(),add(),p1=cdr(p1);return void restore()}if(expanding&&ismultiply(p1)){for(p1=cdr(p1),push(one);iscons(p1);)push(car(p1)),push(p2),push(p3),transpose(),multiply(),p1=cdr(p1);return void restore()}if(expanding&&isinnerordot(p1)){for(p1=cdr(p1),b=[];iscons(p1);)b.push([car(p1),p2,p3]),p1=cdr(p1);for(m=d=x=b.length-1;x<=0?d<=0:d>=0;m=x<=0?++d:--d)push(b[m][0]),push(b[m][1]),push(b[m][2]),transpose(),m!==b.length-1&&inner();return void restore()}if(!istensor(p1))return iszero(p1)?(push(zero),void restore()):(push_symbol(TRANSPOSE),push(p1),isplusone(p2)&&isplustwo(p3)||isplusone(p3)&&isplustwo(p2)?list(2):(push(p2),push(p3),list(4)),void restore());if(u=p1.tensor.ndim,v=p1.tensor.nelem,1===u)return push(p1),void restore();for(push(p2),s=pop_integer(),push(p3),t=pop_integer(),(s<1||s>u||t<1||t>u)&&stop("transpose: index out of range"),s--,t--,p2=alloc_tensor(v),p2.tensor.ndim=u,n=e=0,y=u;0<=y?e<y:e>y;n=0<=y?++e:--e)p2.tensor.dim[n]=p1.tensor.dim[n];for(p2.tensor.dim[s]=p1.tensor.dim[t],p2.tensor.dim[t]=p1.tensor.dim[s],a=p1.tensor.elem,l=p2.tensor.elem,n=f=0,z=u;0<=z?f<z:f>z;n=0<=z?++f:--f)g[n]=0,k[n]=p1.tensor.dim[n];for(n=h=0,A=v;0<=A?h<A:h>A;n=0<=A?++h:--h){for(D=g[s],g[s]=g[t],g[t]=D,D=k[s],k[s]=k[t],k[t]=D,r=0,q=i=0,B=u;0<=B?i<B:i>B;q=0<=B?++i:--i)r=r*k[q]+g[q];for(D=g[s],g[s]=g[t],g[t]=D,D=k[s],k[s]=k[t],k[t]=D,l[r]=a[n],q=j=C=u-1;(C<=0?j<=0:j>=0)&&!(++g[q]<k[q]);q=C<=0?++j:--j)g[q]=0}return push(p2),restore()},Eval_user_function=function(){var a,b;if(DEBUG&&console.log("Eval_user_function evaluating: "+car(p1)),car(p1)===symbol(SYMBOL_D)&&get_binding(symbol(SYMBOL_D))===symbol(SYMBOL_D))return void Eval_derivative();if(push(car(p1)),Eval(),a=pop(),p3=car(cdr(a)),p4=car(cdr(cdr(a))),p5=cdr(p1),a===car(p1)){for(b=tos,push(a),p1=p5;iscons(p1);)push(car(p1)),Eval(),p1=cdr(p1);return void list(tos-b)}for(p1=p4,p2=p5,b=tos;iscons(p1)&&iscons(p2);)push(car(p1)),push(car(p2)),p1=cdr(p1),p2=cdr(p2);return list(tos-b),p6=pop(),push(p3),iscons(p6)&&(push(p6),rewrite_args()),Eval()},rewrite_args=function(){var a,b;if(b=0,save(),p2=pop(),p1=pop(),istensor(p1))return b=rewrite_args_tensor(),restore(),b;if(iscons(p1)){for(a=tos,car(p1)===car(p2)?(push_symbol(EVAL),push(car(cdr(p2))),list(2)):push(car(p1)),p1=cdr(p1);iscons(p1);)push(car(p1)),push(p2),b+=rewrite_args(),p1=cdr(p1);return list(tos-a),restore(),b}if(!issymbol(p1))return push(p1),restore(),0;for(p3=p2;iscons(p3);){if(p1===car(p3))return push(cadr(p3)),restore(),1;p3=cddr(p3)}return p3=get_binding(p1),push(p3),p1!==p3&&(push(p2),0===(b=rewrite_args())&&(pop(),push(p1))),restore(),b},rewrite_args_tensor=function(){var a,b,c,d;for(c=0,b=0,push(p1),copy_tensor(),p1=pop(),b=a=0,d=p1.tensor.nelem;0<=d?a<d:a>d;b=0<=d?++a:--a)push(p1.tensor.elem[b]),push(p2),c+=rewrite_args(),p1.tensor.elem[b]=pop();return check_tensor_dimensions(p1),push(p1),c},Eval_zero=function(){var a,b,c,d,e,f,g,h;for(c=0,d=[],e=0,f=0,c=a=0,g=MAXDIM;0<=g?a<g:a>g;c=0<=g?++a:--a)d[c]=0;for(e=1,f=0,p2=cdr(p1);iscons(p2);){if(push(car(p2)),Eval(),(c=pop_integer())<1||isNaN(c))return void push(zero);e*=c,d[f++]=c,p2=cdr(p2)}if(0===f)return void push(zero);for(p1=alloc_tensor(e),p1.tensor.ndim=f,c=b=0,h=f;0<=h?b<h:b>h;c=0<=h?++b:--b)p1.tensor.dim[c]=d[c];return push(p1)},allocatedId=0,alloc_tensor=function(a){var b,c,d,e;for(c=0,d=new U,d.k=TENSOR,d.tensor=new tensor,d.tensor.nelem=a,c=b=0,e=a;0<=e?b<e:b>e;c=0<=e?++b:--b)d.tensor.elem[c]=zero;return d.tensor.allocatedId=allocatedId,allocatedId++,check_tensor_dimensions(d),d},Find=function(a,b){var c,d,e;if(d=0,equal(a,b))return 1;if(istensor(a)){for(d=c=0,e=a.tensor.nelem;0<=e?c<e:c>e;d=0<=e?++c:--c)if(Find(a.tensor.elem[d],b))return 1;return 0}for(;iscons(a);){if(Find(car(a),b))return 1;a=cdr(a)}return 0},findPossibleClockForm=function(a){var b,c,d;if(c=0,isimaginaryunit(a))return 0;if(car(a)===symbol(POWER)&&!isinteger(caddr(p1))&&Find(cadr(a),imaginaryunit))return 1;if(car(a)===symbol(POWER)&&equaln(cadr(a),-1)&&!isinteger(caddr(p1)))return 1;if(istensor(a)){for(c=b=0,d=a.tensor.nelem;0<=d?b<d:b>d;c=0<=d?++b:--b)if(findPossibleClockForm(a.tensor.elem[c]))return 1;return 0}for(;iscons(a);){if(findPossibleClockForm(car(a)))return 1;a=cdr(a)}return 0},findPossibleExponentialForm=function(a){var b,c,d;if(c=0,car(a)===symbol(POWER)&&cadr(a)===symbol(E))return Find(caddr(a),imaginaryunit);if(istensor(a)){for(c=b=0,d=a.tensor.nelem;0<=d?b<d:b>d;c=0<=d?++b:--b)if(findPossibleExponentialForm(a.tensor.elem[c]))return 1;return 0}for(;iscons(a);){if(findPossibleExponentialForm(car(a)))return 1;a=cdr(a)}return 0},$.Find=Find,init=function(){var a,b,c;if(b=0,flag=0,reset_after_error(),chainOfUserSymbolsNotFunctionsBeingEvaluated=[],!flag){for(flag=1,b=a=0,c=NSYM;0<=c?a<c:a>c;b=0<=c?++a:--a)symtab[b]=new U,symtab[b].k=SYM,binding[b]=symtab[b],isSymbolReclaimable[b]=!1;return defn()}},defn_str=['version="'+version+'"',"e=exp(1)","i=sqrt(-1)","autoexpand=1","assumeRealVariables=1","trange=[-pi,pi]","xrange=[-10,10]","yrange=[-10,10]","last=0","trace=0","printLeaveEAlone=1","printLeaveXAlone=0","cross(u,v)=[u[2]*v[3]-u[3]*v[2],u[3]*v[1]-u[1]*v[3],u[1]*v[2]-u[2]*v[1]]","curl(v)=[d(v[3],y)-d(v[2],z),d(v[1],z)-d(v[3],x),d(v[2],x)-d(v[1],y)]","div(v)=d(v[1],x)+d(v[2],y)+d(v[3],z)","ln(x)=log(x)"],defn=function(){var a,b,c,d,e;for(p0=symbol(NIL),p1=symbol(NIL),p2=symbol(NIL),p3=symbol(NIL),p4=symbol(NIL),p5=symbol(NIL),p6=symbol(NIL),p7=symbol(NIL),p8=symbol(NIL),p9=symbol(NIL),std_symbol("abs",ABS),std_symbol("add",ADD),std_symbol("adj",ADJ),std_symbol("and",AND),std_symbol("approxratio",APPROXRATIO),std_symbol("arccos",ARCCOS),std_symbol("arccosh",ARCCOSH),std_symbol("arcsin",ARCSIN),std_symbol("arcsinh",ARCSINH),std_symbol("arctan",ARCTAN),std_symbol("arctanh",ARCTANH),std_symbol("arg",ARG),std_symbol("atomize",ATOMIZE),std_symbol("besselj",BESSELJ),std_symbol("bessely",BESSELY),std_symbol("binding",BINDING),std_symbol("binomial",BINOMIAL),std_symbol("ceiling",CEILING),std_symbol("check",CHECK),std_symbol("choose",CHOOSE),std_symbol("circexp",CIRCEXP),std_symbol("clear",CLEAR),std_symbol("clearall",CLEARALL),std_symbol("clearpatterns",CLEARPATTERNS),std_symbol("clock",CLOCK),std_symbol("coeff",COEFF),std_symbol("cofactor",COFACTOR),std_symbol("condense",CONDENSE),std_symbol("conj",CONJ),std_symbol("contract",CONTRACT),std_symbol("cos",COS),std_symbol("cosh",COSH),std_symbol("decomp",DECOMP),std_symbol("defint",DEFINT),std_symbol("deg",DEGREE),std_symbol("denominator",DENOMINATOR),std_symbol("det",DET),std_symbol("derivative",DERIVATIVE),std_symbol("dim",DIM),std_symbol("dirac",DIRAC),std_symbol("divisors",DIVISORS),std_symbol("do",DO),std_symbol("dot",DOT),std_symbol("draw",DRAW),std_symbol("dsolve",DSOLVE),std_symbol("erf",ERF),std_symbol("erfc",ERFC),std_symbol("eigen",EIGEN),std_symbol("eigenval",EIGENVAL),std_symbol("eigenvec",EIGENVEC),std_symbol("eval",EVAL),std_symbol("exp",EXP),std_symbol("expand",EXPAND),std_symbol("expcos",EXPCOS),std_symbol("expsin",EXPSIN),std_symbol("factor",FACTOR),std_symbol("factorial",FACTORIAL),std_symbol("factorpoly",FACTORPOLY),std_symbol("filter",FILTER),std_symbol("float",FLOATF),std_symbol("floor",FLOOR),std_symbol("for",FOR),std_symbol("function",FUNCTION),std_symbol("Gamma",GAMMA),std_symbol("gcd",GCD),std_symbol("hermite",HERMITE),std_symbol("hilbert",HILBERT),std_symbol("imag",IMAG),std_symbol("component",INDEX),std_symbol("inner",INNER),std_symbol("integral",INTEGRAL),std_symbol("inv",INV),std_symbol("invg",INVG),std_symbol("isinteger",ISINTEGER),std_symbol("isprime",ISPRIME),std_symbol("laguerre",LAGUERRE),std_symbol("lcm",LCM),std_symbol("leading",LEADING),std_symbol("legendre",LEGENDRE),std_symbol("log",LOG),std_symbol("lookup",LOOKUP),std_symbol("mod",MOD),std_symbol("multiply",MULTIPLY),std_symbol("not",NOT),std_symbol("nroots",NROOTS),std_symbol("number",NUMBER),std_symbol("numerator",NUMERATOR),std_symbol("operator",OPERATOR),std_symbol("or",OR),std_symbol("outer",OUTER),std_symbol("pattern",PATTERN),std_symbol("patternsinfo",PATTERNSINFO),std_symbol("polar",POLAR),std_symbol("power",POWER),std_symbol("prime",PRIME),std_symbol("print",PRINT),std_symbol("print2dascii",PRINT2DASCII),std_symbol("printfull",PRINTFULL),std_symbol("printlatex",PRINTLATEX),std_symbol("printlist",PRINTLIST),std_symbol("printplain",PRINTPLAIN),std_symbol("printLeaveEAlone",PRINT_LEAVE_E_ALONE),std_symbol("printLeaveXAlone",PRINT_LEAVE_X_ALONE),std_symbol("product",PRODUCT),std_symbol("quote",QUOTE),std_symbol("quotient",QUOTIENT),std_symbol("rank",RANK),std_symbol("rationalize",RATIONALIZE),std_symbol("real",REAL),std_symbol("rect",YYRECT),std_symbol("roots",ROOTS),std_symbol("equals",SETQ),std_symbol("sgn",SGN),std_symbol("silentpattern",SILENTPATTERN),std_symbol("simplify",SIMPLIFY),std_symbol("sin",SIN),std_symbol("sinh",SINH),std_symbol("shape",SHAPE),std_symbol("sqrt",SQRT),std_symbol("stop",STOP),std_symbol("subst",SUBST),std_symbol("sum",SUM),std_symbol("symbolsinfo",SYMBOLSINFO),std_symbol("tan",TAN),std_symbol("tanh",TANH),std_symbol("taylor",TAYLOR),std_symbol("test",TEST),std_symbol("testeq",TESTEQ),std_symbol("testge",TESTGE),std_symbol("testgt",TESTGT),std_symbol("testle",TESTLE),std_symbol("testlt",TESTLT),std_symbol("transpose",TRANSPOSE),std_symbol("unit",UNIT),std_symbol("zero",ZERO),std_symbol("nil",NIL),std_symbol("autoexpand",AUTOEXPAND),std_symbol("bake",BAKE),std_symbol("assumeRealVariables",ASSUME_REAL_VARIABLES),std_symbol("last",LAST),std_symbol("lastprint",LAST_PRINT),std_symbol("last2dasciiprint",LAST_2DASCII_PRINT),std_symbol("lastfullprint",LAST_FULL_PRINT),std_symbol("lastlatexprint",LAST_LATEX_PRINT),std_symbol("lastlistprint",LAST_LIST_PRINT),std_symbol("lastplainprint",LAST_PLAIN_PRINT),std_symbol("trace",TRACE),std_symbol("~",YYE),std_symbol("$DRAWX",DRAWX),std_symbol("$METAA",METAA),std_symbol("$METAB",METAB),std_symbol("$METAX",METAX),std_symbol("$SECRETX",SECRETX),std_symbol("version",VERSION),std_symbol("pi",PI),std_symbol("a",SYMBOL_A),std_symbol("b",SYMBOL_B),std_symbol("c",SYMBOL_C),std_symbol("d",SYMBOL_D),std_symbol("i",SYMBOL_I),std_symbol("j",SYMBOL_J),std_symbol("n",SYMBOL_N),std_symbol("r",SYMBOL_R),std_symbol("s",SYMBOL_S),std_symbol("t",SYMBOL_T),std_symbol("x",SYMBOL_X),std_symbol("y",SYMBOL_Y),std_symbol("z",SYMBOL_Z),std_symbol("I",SYMBOL_IDENTITY_MATRIX),std_symbol("a_",SYMBOL_A_UNDERSCORE),std_symbol("b_",SYMBOL_B_UNDERSCORE),std_symbol("x_",SYMBOL_X_UNDERSCORE),std_symbol("$C1",C1),std_symbol("$C2",C2),std_symbol("$C3",C3),std_symbol("$C4",C4),std_symbol("$C5",C5),std_symbol("$C6",C6),defineSomeHandyConstants(),d=codeGen,codeGen=!1,c=a=0,e=defn_str.length;0<=e?a<e:a>e;c=0<=e?++a:--a)b=defn_str[c],scan(b),DEBUG&&(console.log("... evaling "+b),console.log("top of stack:"),console.log(print_list(stack[tos-1]))),Eval(),pop();return codeGen=d},defineSomeHandyConstants=function(){return push_integer(0),zero=pop(),push_integer(1),one=pop(),push_double(1),one_as_double=pop(),push_symbol(POWER),DEBUG&&console.log(print_list(stack[tos-1])),push_integer(-1),DEBUG&&console.log(print_list(stack[tos-1])),push_rational(1,2),DEBUG&&console.log(print_list(stack[tos-1])),list(3),DEBUG&&console.log(print_list(stack[tos-1])),imaginaryunit=pop()},mcmp=function(a,b){return a.compare(b)},mcmpint=function(a,b){var c;return c=bigInt(b),mcmp(a,c)},strcmp=function(a,b){return a===b?0:a>b?1:-1},doubleToReasonableString=function(a){var b;return codeGen?a+"":(b=""+parseFloat(a.toPrecision(6)),-1===b.indexOf(".")&&(b+=".0"),b)},clear_term=function(){},isspace=function(a){return null!=a&&(" "===a||"\t"===a||"\n"===a||"\v"===a||"\f"===a||"\r"===a)},isdigit=function(a){return null!=a&&/^\d+$/.test(a)},isalpha=function(a){return null!=a&&-1===a.search(/[^A-Za-z]/)},isalphaOrUnderscore=function(a){return null!=a&&-1===a.search(/[^A-Za-z_]/)},isunderscore=function(a){return null!=a&&-1===a.search(/_/)},isalnumorunderscore=function(a){return null!=a&&(isalphaOrUnderscore(a)||isdigit(a))},count=function(a){var b;if(iscons(a))for(b=0;iscons(a);)b+=count(car(a))+1,a=cdr(a);else b=1;return b},countOccurrencesOfSymbol=function(a,b){var c;if(c=0,iscons(b))for(;iscons(b);)c+=countOccurrencesOfSymbol(a,car(b)),b=cdr(b);else equal(a,b)&&(c=1);return c},countsize=function(a){var b,c,d,e;if(d=0,istensor(a))for(c=b=0,e=a.tensor.nelem;0<=e?b<e:b>e;c=0<=e?++b:--b)d+=a.tensor.elem[c];else if(iscons(a))for(;iscons(a);)d+=count(car(a))+1,a=cdr(a);else d=1;return d},stop=function(a){var b;throw errorMessage+="Stop: ",errorMessage+=a,b=errorMessage,errorMessage="",tos=0,new Error(b)},findDependenciesInScript=function(a,b){var c,d,e,f,g,h,k,l,m,n,o,q,r,s,t,u,v,z,A,B,C,D,E,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba,ca,da,ea,fa,ga,ha;if(DEBUG&&console.log("stringToBeParsed: "+a),ba=(new Date).getTime(),(CACHE_DEBUGS||CACHE_HITSMISS_DEBUGS||TIMING_DEBUGS)&&(console.log(" --------- findDependenciesInScript input: "+a+" at: "+new Date),q=getStateHash(),console.log("state hash: "+q)),!0,codeGen=!0,symbolsDependencies={},symbolsHavingReassignments=[],symbolsInExpressionsWithoutAssignments=[],patternHasBeenFound=!1,E=0,"","",P=0,t={affectsVariables:[],affectedBy:[]},_=a,ENABLE_CACHING&&"clearall"!==_){if(q=getStateHash(),o=q+" stringToBeRun: "+_+" - "+b,CACHE_DEBUGS&&console.log("cached_findDependenciesInScript key: "+o),null!=(U=cached_findDependenciesInScript.get(o)))return CACHE_HITSMISS_DEBUGS&&console.log("cached_findDependenciesInScript hit on "+_),unfreeze(U),TIMING_DEBUGS&&(ea=(new Date).getTime()-ba,console.log("findDependenciesInScript input: "+_+" time: "+ea+"ms, saved "+(U[U.length-5]-ea)+"ms due to cache hit")),[U[U.length-7],U[U.length-6],U[U.length-5],U[U.length-4],U[U.length-3],U[U.length-2],U[U.length-1]];CACHE_HITSMISS_DEBUGS&&console.log("cached_findDependenciesInScript miss on: "+_),TIMING_DEBUGS&&(new Date).getTime()-ba}for(;;){try{errorMessage="",check_stack(),DEBUG&&console.log("findDependenciesInScript: scanning"),P=scan(a.substring(E)),DEBUG&&console.log("scanned"),pop(),check_stack()}catch(w){v=w,PRINTOUTRESULT&&console.log(v),errorMessage=v+"",reset_after_error();break}if(0===P)break;E+=P}aa="",DEBUG&&console.log("all local dependencies ----------------"),aa+="All local dependencies: ";for(G in symbolsDependencies){for(ga=symbolsDependencies[G],DEBUG&&console.log("variable "+G+" depends on: "),t.affectsVariables.push(G),aa+=" variable "+G+" depends on: ",c=0,H=ga.length;c<H;c++)C=ga[c],DEBUG&&console.log("\t\t"+C),"'"!==C[0]&&t.affectedBy.push(C),aa+=C+", ";aa+="; "}for(aa+=". ",DEBUG&&console.log("Symbols with reassignments ----------------"),aa+="Symbols with reassignments: ",d=0,I=symbolsHavingReassignments.length;d<I;d++)G=symbolsHavingReassignments[d],-1===t.affectedBy.indexOf(G)&&(t.affectedBy.push(G),aa+=G+", ");for(aa+=". ",DEBUG&&console.log("Symbols in expressions without assignments ----------------"),aa+="Symbols in expressions without assignments: ",e=0,J=symbolsInExpressionsWithoutAssignments.length;e<J;e++)G=symbolsInExpressionsWithoutAssignments[e],-1===t.affectedBy.indexOf(G)&&(t.affectedBy.push(G),aa+=G+", ");if(aa+=". ",t.affectedBy.push("PATTERN_DEPENDENCY"),patternHasBeenFound&&(t.affectsVariables.push("PATTERN_DEPENDENCY"),aa+=" - PATTERN_DEPENDENCY inserted - "),DEBUG&&console.log("All dependencies recursively ----------------"),aa+="All dependencies recursively: ",$=["",""],B="",V="",""===errorMessage&&!b){try{"","",$=run(a,!0),"",""}catch(x){v=x,PRINTOUTRESULT&&console.log(v),errorMessage=v+"",init()}if(""===errorMessage)for(G in symbolsDependencies){for(codeGen=!0,DEBUG&&console.log("\tvariable "+G+" is: "+get_binding(usr_symbol(G)).toString()),codeGen=!1,DEBUG&&console.log("\tvariable "+G+" depends on: "),aa+=" variable "+G+" depends on: ",W=[],ha=[],r=[],recursiveDependencies(G,W,[],ha,[],r),f=0,K=ha.length;f<K;f++)C=ha[f],DEBUG&&console.log("\t\t--\x3e cycle through "+C);for(g=0,L=W.length;g<L;g++)C=W[g],DEBUG&&console.log("\t\t"+C),aa+=C+", ";for(aa+="; ",h=0,M=r.length;h<M;h++)C=r[h],aa+=" "+C+", ";for(DEBUG&&console.log("\tcode generation:"+G+" is: "+get_binding(usr_symbol(G)).toString()),push(get_binding(usr_symbol(G))),Y=[],Z=[],k=0,N=W.length;k<N;k++)u=W[k],"'"===u[0]&&(s=u.substring(1),S=usr_symbol(s),Q=usr_symbol("AVOID_BINDING_TO_EXTERNAL_SCOPE_VALUE"+s),Y.push(S),Z.push(Q),push(S),push(Q),subst(),DEBUG&&console.log("after substitution: "+stack[tos-1]));try{simplifyForCodeGeneration()}catch(y){v=y,PRINTOUTRESULT&&console.log(v),errorMessage=v+"",init()}for(D=l=0,X=Y.length;0<=X?l<X:l>X;D=0<=X?++l:--l)push(Z[D]),push(Y[D]),subst();if(clearRenamedVariablesToAvoidBindingToExternalScope(),""===errorMessage){if(da=pop(),fa=[],collectUserSymbols(da,fa),"","",codeGen=!0,A=da.toString(),codeGen=!1,R=printMode,printMode=PRINTMODE_LATEX,n=da.toString(),printMode=R,-1!==ha.indexOf(G))B+="// "+G+" is part of a cyclic dependency, no code generated.",V+="#"+G+" is part of a cyclic dependency, no code generated.";else if(fa=fa.filter(function(a){return-1===predefinedSymbolsInGlobalScope_doNotTrackInDependencies.indexOf(a+"")}),0!==fa.length){for(T="(",m=0,O=fa.length;m<O;m++)C=fa[m],C.printname!==G&&(T+=C.printname+", ");T=T.replace(/, $/gm,""),T+=")",B+=G+" = function "+T+" { return ( "+A+" ); }",V+=G+T+" = "+n}else B+=G+" = "+A+";",V+=G+" = "+n;B+="\n",V+="\n",DEBUG&&console.log("\t\t"+B)}}}return B=B.replace(/\n$/gm,""),V=V.replace(/\n$/gm,""),symbolsDependencies={},symbolsHavingReassignments=[],patternHasBeenFound=!1,symbolsInExpressionsWithoutAssignments=[],DEBUG&&console.log("testable string: "+aa),TIMING_DEBUGS&&console.log("findDependenciesInScript time for: "+_+" : "+((new Date).getTime()-ba)+"ms"),ENABLE_CACHING&&"clearall"!==_&&""===errorMessage&&(z=freeze(),ca=[z[0],z[1],z[2],z[3],z[4],z[5],(new Date).getTime()-ba,aa,$[0],B,V,$[1],errorMessage,t],CACHE_DEBUGS&&console.log("setting cached_findDependenciesInScript on key: "+o),cached_findDependenciesInScript.set(o,ca)),[aa,$[0],B,V,$[1],errorMessage,t]},recursiveDependencies=function(a,b,c,d,e,f){var g,h,i,j,k,l,m,n;if(c.push(a),null!=symbolsDependencies[e[e.length-1]]&&-1!==symbolsDependencies[e[e.length-1]].indexOf("'"+a))return DEBUG&&console.log("can't keep following the chain of "+a+" because it's actually a variable bound to a parameter"),-1===b.indexOf("'"+a)&&-1===b.indexOf(a)&&b.push(a),b;if(e.push(a),null==symbolsDependencies[a])return-1===b.indexOf(a)&&b.push(a),b;for(n=symbolsDependencies[a],g=0,l=n.length;g<l;g++)if(j=n[g],-1!==e.indexOf(j)){for(DEBUG&&console.log("\tfound cycle:"),i="",h=0,m=e.length;h<m;h++)k=e[h],-1===d.indexOf(k)&&d.push(k),DEBUG&&console.log(k+" --\x3e "),i+=k+" --\x3e ";DEBUG&&console.log(" ... then "+j+" again"),i+=" ... then "+j+" again",f.push(i),-1===d.indexOf(j)&&d.push(j)}else recursiveDependencies(j,b,c,d,e,f),e.pop();return b},inited=!1;latexErrorSign="\\rlap{\\large\\color{red}\\bigtriangleup}{\\ \\ \\tiny\\color{red}!}",turnErrorMessageToLatex=function(a){return a=a.replace(/\n/g,""),a=a.replace(/_/g,"} \\_ \\text{"),a=a.replace(new RegExp(String.fromCharCode(transpose_unicode),"g"),"}{}^{T}\\text{"),a=a.replace(new RegExp(String.fromCharCode(dotprod_unicode),"g"),"}\\cdot \\text{"),a=a.replace("Stop:","}  \\quad \\text{Stop:"),a=a.replace("->","}  \\rightarrow \\text{"),a=a.replace("?","}\\enspace "+latexErrorSign+" \\enspace  \\text{"),a="$$\\text{"+a.replace(/\n/g,"")+"}$$"},normaliseDots=function(a){return a=a.replace(new RegExp(String.fromCharCode(8901),"g"),String.fromCharCode(dotprod_unicode)),a=a.replace(new RegExp(String.fromCharCode(8226),"g"),String.fromCharCode(dotprod_unicode)),a=a.replace(new RegExp(String.fromCharCode(12539),"g"),String.fromCharCode(dotprod_unicode)),a=a.replace(new RegExp(String.fromCharCode(55296),"g"),String.fromCharCode(dotprod_unicode)),a=a.replace(new RegExp(String.fromCharCode(65381),"g"),String.fromCharCode(dotprod_unicode))},CACHE_DEBUGS=!1,CACHE_HITSMISS_DEBUGS=!1,TIMING_DEBUGS=!1,cacheMissPenalty=0,run=function(a,b){var c,d,e,f,g,h,i,l,m,o,p,q,r,s,t,u,v,w;if(null==b&&(b=!1),t=(new Date).getTime(),a=normaliseDots(a),ENABLE_CACHING&&"clearall"!==a){if(h=getStateHash(),e=h+" stringToBeRun: "+a,CACHE_DEBUGS&&console.log("cached_runs key: "+e),null!=(q=cached_runs.get(e)))return CACHE_HITSMISS_DEBUGS&&console.log("cached_runs hit on: "+a),unfreeze(q),TIMING_DEBUGS&&(w=(new Date).getTime()-t,console.log("run time: "+w+"ms, saved "+(q[q.length-2]-w)+"ms due to cache hit")),q[q.length-1];CACHE_HITSMISS_DEBUGS&&console.log("cached_runs miss on: "+a),TIMING_DEBUGS&&(cacheMissPenalty=(new Date).getTime()-t)}if("selftest"===a)return void selftest();for(inited||(inited=!0,init()),0,p=0,o=0,d="",c="";;){try{errorMessage="",check_stack(),p=scan(a.substring(o)),p1=pop(),check_stack()}catch(j){i=j,PRINTOUTRESULT&&console.log(i),d+=i.message,b&&(s=turnErrorMessageToLatex(i.message),c+=s),reset_after_error();break}if(0===p)break;o+=p,push(p1),l=!1;try{stringsEmittedByUserPrintouts="",top_level_eval(),p2=pop(),check_stack(),isstr(p2)&&(DEBUG&&console.log(p2.str),DEBUG&&console.log("\n")),p2===symbol(NIL)?(g=stringsEmittedByUserPrintouts,b&&(f="$$"+stringsEmittedByUserPrintouts+"$$")):(g=print_expr(p2),g+="\n",b&&(f="$$"+collectLatexStringFromReturnValue(p2)+"$$",DEBUG&&console.log("collectedLatexResult: "+f))),d+=g,b&&(c+=f),PRINTOUTRESULT&&(DEBUG&&console.log("printline"),DEBUG&&console.log(g)),PRINTOUTRESULT&&(DEBUG&&console.log("display:"),print2dascii(p2)),b&&(c+="\n")}catch(k){i=k,l=!0,g=i.message,b&&(f=turnErrorMessageToLatex(i.message)),PRINTOUTRESULT&&console.log(g),d+=g,""!==g&&(d+="\n"),b&&(c+=f,c+="\n"),resetCache(),init()}}return"\n"===d[d.length-1]&&(d=d.substring(0,d.length-1)),b&&"\n"===c[c.length-1]&&(c=c.substring(0,c.length-1)),b?(DEBUG&&console.log("allReturnedLatexStrings: "+c),r=[d,c]):r=d,ENABLE_CACHING&&"clearall"!==a&&!l&&(m=freeze(),v=[m[0],m[1],m[2],m[3],m[4],m[5],(new Date).getTime()-t,r],CACHE_DEBUGS&&console.log("setting cached_runs on key: "+e),cached_runs.set(e,v)),TIMING_DEBUGS&&(u="run time on: "+a+" : "+((new Date).getTime()-t)+"ms",ENABLE_CACHING&&"clearall"!==a&&(u+=", of which cache miss penalty: "+cacheMissPenalty+"ms"),console.log(u)),d="",c="",r},check_stack=function(){if(0!==tos&&stop("stack error"),frame!==TOS&&stop("frame error"),0!==chainOfUserSymbolsNotFunctionsBeingEvaluated.length&&stop("symbols evaluation still ongoing?"),0!==evaluatingAsFloats&&stop("numeric evaluation still ongoing?"),0!==evaluatingPolar)return stop("evaluation of polar still ongoing?")},top_level_eval=function(){return DEBUG&&console.log("#### top level eval"),save(),trigmode=0,p1=symbol(AUTOEXPAND),expanding=iszero(get_binding(p1))?0:1,p1=pop(),push(p1),Eval(),(p2=pop())===symbol(NIL)?(push(p2),void restore()):(set_binding(symbol(LAST),p2),iszero(get_binding(symbol(BAKE)))||(push(p2),bake(),p2=pop()),p1!==symbol(SYMBOL_I)&&p1!==symbol(SYMBOL_J)||!isimaginaryunit(p2)?isimaginaryunit(get_binding(symbol(SYMBOL_J)))?(push(p2),push(imaginaryunit),push_symbol(SYMBOL_J),subst(),p2=pop()):isimaginaryunit(get_binding(symbol(SYMBOL_I)))&&(push(p2),push(imaginaryunit),push_symbol(SYMBOL_I),subst(),p2=pop()):0,push(p2),restore())},check_esc_flag=function(){if(esc_flag)return stop("esc key")},clearAlgebraEnvironment=function(){return do_clearall()},computeDependenciesFromAlgebra=function(a){var b,c,d,e,f,g,i;if(DEBUG&&console.log("computeDependenciesFromAlgebra!!!"),a,e=!0,called_from_Algebra_block=!0,a=normaliseDots(a),!e){for(userSimplificationsInListForm=[],i="",b=0,f=userSimplificationsInListForm.length;b<f;b++)d=userSimplificationsInListForm[b],i+="silentpattern("+car(d)+","+car(cdr(d))+","+car(cdr(cdr(d)))+")\n";do_clearall(),a=i+a,DEBUG&&console.log("codeFromAlgebraBlock including patterns: "+a)}if(DEBUG){for(console.log("computeDependenciesFromAlgebra: patterns in the list --------------- "),c=0,g=userSimplificationsInListForm.length;c<g;c++)d=userSimplificationsInListForm[c],console.log(car(d)+","+cdr(d)+")");console.log("...end of list --------------- ")}return called_from_Algebra_block=!1,findDependenciesInScript(a,!0)[6]},computeResultsAndJavaScriptFromAlgebra=function(a){var b,c,d,e,f,g,h,i,j,l,m,n,o,q,r;if(a,g=!0,called_from_Algebra_block=!0,q=(new Date).getTime(),TIMING_DEBUGS&&console.log(" --------- computeResultsAndJavaScriptFromAlgebra input: "+a+" at: "+new Date),a=normaliseDots(a),o=a,DEBUG){for(console.log("computeResultsAndJavaScriptFromAlgebra: patterns in the list --------------- "),b=0,i=userSimplificationsInListForm.length;b<i;b++)f=userSimplificationsInListForm[b],console.log(car(f)+","+cdr(f)+")");console.log("...end of list --------------- ")}if(!g){for(userSimplificationsInListForm=[],r="",c=0,j=userSimplificationsInListForm.length;c<j;c++)f=userSimplificationsInListForm[c],r+="silentpattern("+car(f)+","+car(cdr(f))+","+car(cdr(cdr(f)))+")\n";do_clearall(),a=r+a,DEBUG&&console.log("codeFromAlgebraBlock including patterns: "+a)}return m=findDependenciesInScript(a),m[0],n=m[1],d=m[2],l=m[3],h=m[4],errorMessage=m[5],e=m[6],called_from_Algebra_block=!1,""===l&&""===errorMessage||(n+="\n"+l,""!==errorMessage&&(n+="\n"+errorMessage),n=n.replace(/\n/g,"\n\n"),h+="\n$$"+l+"$$",""!==errorMessage&&(h+=turnErrorMessageToLatex(errorMessage)),h=h.replace(/\n/g,"\n\n")),h=h.replace(/\n*/,""),h=h.replace(/\$\$\$\$\n*/g,""),d=d.replace(/Math\./g,""),d=d.replace(/\n/g,"\n\n"),TIMING_DEBUGS&&console.log("computeResultsAndJavaScriptFromAlgebra time (total time from notebook and back) for: "+o+" : "+((new Date).getTime()-q)+"ms"),{code:d,result:h,latexResult:h,dependencyInfo:e}},enableCaching=function(){return ENABLE_CACHING=!0},disableCaching=function(){return ENABLE_CACHING=!1},("undefined"!=typeof exports&&null!==exports?exports:this).run=run,("undefined"!=typeof exports&&null!==exports?exports:this).findDependenciesInScript=findDependenciesInScript,("undefined"!=typeof exports&&null!==exports?exports:this).computeDependenciesFromAlgebra=computeDependenciesFromAlgebra,("undefined"!=typeof exports&&null!==exports?exports:this).computeResultsAndJavaScriptFromAlgebra=computeResultsAndJavaScriptFromAlgebra,("undefined"!=typeof exports&&null!==exports?exports:this).clearAlgebraEnvironment=clearAlgebraEnvironment,("undefined"!=typeof exports&&null!==exports?exports:this).enableCaching=enableCaching,("undefined"!=typeof exports&&null!==exports?exports:this).disableCaching=disableCaching,tos=0,nil_symbols=0,push=function(a){return a.isZero,a===symbol(NIL)&&(nil_symbols++,DEBUG&&console.log("pushing symbol(NIL) #"+nil_symbols)),tos>=frame&&stop("stack overflow"),stack[tos++]=a},pop=function(){var a;return 0===tos&&stop("stack underflow"),stack[tos-1],a=stack[--tos],stack[tos]=null,a},push_frame=function(a){var b,c,d,e;for(c=0,frame-=a,frame<tos&&stop("frame overflow, circular reference?"),e=[],c=b=0,d=a;0<=d?b<d:b>d;c=0<=d?++b:--b)e.push(stack[frame+c]=symbol(NIL));return e},pop_frame=function(a){if((frame+=a)>TOS)return stop("frame underflow")},save=function(){return frame-=10,frame<tos&&stop("frame overflow, circular reference?"),stack[frame+0]=p0,stack[frame+1]=p1,stack[frame+2]=p2,stack[frame+3]=p3,stack[frame+4]=p4,stack[frame+5]=p5,stack[frame+6]=p6,stack[frame+7]=p7,stack[frame+8]=p8,stack[frame+9]=p9},restore=function(){return frame>TOS-10&&stop("frame underflow"),p0=stack[frame+0],p1=stack[frame+1],p2=stack[frame+2],p3=stack[frame+3],p4=stack[frame+4],p5=stack[frame+5],p6=stack[frame+6],p7=stack[frame+7],p8=stack[frame+8],p9=stack[frame+9],frame+=10},swap=function(){var a,b;return a=pop(),b=pop(),push(a),push(b)},dupl=function(){var a;return a=pop(),push(a),push(a)},$.dupl=dupl,$.swap=swap,$.restore=restore,$.save=save,$.push=push,$.pop=pop,Eval_symbolsinfo=function(){var a;return a=symbolsinfo(),""!==a?new_string(a):push_symbol(NIL)},symbolsinfo=function(){var a,b,c,d,e,f,g;for(f="",c=a=d=NIL+1,e=symtab.length;d<=e?a<e:a>e;c=d<=e?++a:--a)if(""!==symtab[c].printname)g=symtab[c]+"",b=(binding[c]+"").substring(0,4),f+="symbol: "+g+" size: "+countsize(binding[c])+" value: "+b+"...\n";else if(!1===isSymbolReclaimable[c])break;return f},std_symbol=function(a,b,c){var d;return d=symtab[b],d.printname=a,d.latexPrint=null!=c?c:a},usr_symbol=function(a){var b,c,d;for(c=0,c=b=0,d=NSYM;(0<=d?b<d:b>d)&&""!==symtab[c].printname;c=0<=d?++b:--b)if(a===symtab[c].printname)return symtab[c];return c===NSYM&&stop("symbol table overflow"),symtab[c]=new U,symtab[c].k=SYM,symtab[c].printname=a,binding[c]=symtab[c],isSymbolReclaimable[c]=!1,symtab[c]},get_printname=function(a){return a.k!==SYM&&stop("symbol error"),a.printname},set_binding=function(a,b){var c;return a.k!==SYM&&stop("symbol error"),c=symtab.indexOf(a),-1!==symtab.indexOf(a,c+1)&&console.log("ops, more than one element!"),DEBUG&&console.log("lookup >> set_binding lookup "+c),isSymbolReclaimable[c]=!1,binding[c]=b},get_binding=function(a){var b;return a.k!==SYM&&stop("symbol error"),b=symtab.indexOf(a),-1!==symtab.indexOf(a,b+1)&&console.log("ops, more than one element!"),DEBUG&&console.log("lookup >> get_binding lookup "+b),binding[b]},is_usr_symbol=function(a){var b;return a.k===SYM&&((b=symnum(a))>PI&&b!==SYMBOL_I&&b!==SYMBOL_IDENTITY_MATRIX)},lookupsTotal=0,symnum=function(a){var b;return lookupsTotal++,a.k!==SYM&&stop("symbol error"),b=symtab.indexOf(a),-1!==symtab.indexOf(a,b+1)&&console.log("ops, more than one element!"),DEBUG&&console.log("lookup >> symnum lookup "+b+" lookup # "+lookupsTotal),b},push_symbol=function(a){return push(symtab[a])},clear_symbols=function(){var a,b,c,d,e;for(e=[],b=a=c=NIL+1,d=NSYM;c<=d?a<d:a>d;b=c<=d?++a:--a)if(""!==symtab[b].printname)symtab[b]=new U,symtab[b].k=SYM,binding[b]=symtab[b],e.push(isSymbolReclaimable[b]=!1);else if(!1===isSymbolReclaimable[b])break;return e},collectUserSymbols=function(a,b){var c,d,e;if(null==b&&(b=[]),is_usr_symbol(a)&&-1===b.indexOf(a))return void b.push(a);if(istensor(a))for(d=c=0,e=a.tensor.nelem;0<=e?c<e:c>e;d=0<=e?++c:--c)collectUserSymbols(a.tensor.elem[d],b);else for(;iscons(a);)collectUserSymbols(car(a),b),a=cdr(a)},$.get_binding=get_binding,$.set_binding=set_binding,$.usr_symbol=usr_symbol,$.symbolsinfo=symbolsinfo,$.collectUserSymbols=collectUserSymbols,inited||(inited=!0,init()),$.init=init,parse_internal=function(a){return"string"==typeof a?scan(a):"number"==typeof a?a%1==0?push_integer(a):push_double(a):a instanceof U?push(a):(console.warn("unknown argument type",a),push(symbol(NIL)))},parse=function(a){var b,c;try{parse_internal(a),b=pop(),check_stack()}catch(d){throw c=d,reset_after_error(),c}return b},exec=function(){var a,b,c,d,f,g,h,i;for(h=arguments[0],c=2<=arguments.length?slice.call(arguments,1):[],f=get_binding(usr_symbol(h)),check_stack(),push(f),a=0,g=c.length;a<g;a++)b=c[a],parse_internal(b);list(1+c.length),p1=pop(),push(p1);try{fixed_top_level_eval(),i=pop(),check_stack()}catch(e){throw d=e,reset_after_error(),d}return i},fixed_top_level_eval=function(){return save(),trigmode=0,p1=symbol(AUTOEXPAND),expanding=iszero(get_binding(p1))?0:1,p1=pop(),push(p1),Eval(),(p2=pop())===symbol(NIL)?(push(p2),void restore()):(iszero(get_binding(symbol(BAKE)))||(push(p2),bake(),p2=pop()),push(p2),restore())},$.exec=exec,$.parse=parse,function(){var a,b,c,d,e;for(b=["abs","add","adj","and","approxratio","arccos","arccosh","arcsin","arcsinh","arctan","arctanh","arg","atomize","besselj","bessely","binding","binomial","ceiling","check","choose","circexp","clear","clearall","clearpatterns","clock","coeff","cofactor","condense","conj","contract","cos","cosh","decomp","defint","deg","denominator","det","derivative","dim","dirac","divisors","do","dot","draw","dsolve","eigen","eigenval","eigenvec","erf","erfc","eval","exp","expand","expcos","expsin","factor","factorial","factorpoly","filter","float","floor","for","Gamma","gcd","hermite","hilbert","imag","component","inner","integral","inv","invg","isinteger","isprime","laguerre","lcm","leading","legendre","log","mod","multiply","not","nroots","number","numerator","operator","or","outer","pattern","patternsinfo","polar","power","prime","print","print2dascii","printfull","printlatex","printlist","printplain","product","quote","quotient","rank","rationalize","real","rect","roots","equals","shape","sgn","silentpattern","simplify","sin","sinh","sqrt","stop","subst","sum","symbolsinfo","tan","tanh","taylor","test","testeq","testge","testgt","testle","testlt","transpose","unit","zero"],e=[],a=0,d=b.length;a<d;a++)c=b[a],e.push($[c]=exec.bind(this,c))}(),DoubleLinkedList=function(){function a(){this.headNode=this.tailNode=null}return a.prototype.remove=function(a){return a.pre?a.pre.next=a.next:this.headNode=a.next,a.next?a.next.pre=a.pre:this.tailNode=a.pre},a.prototype.insertBeginning=function(a){return this.headNode?(a.next=this.headNode,this.headNode.pre=a,this.headNode=a):this.headNode=this.tailNode=a},a.prototype.moveToHead=function(a){return this.remove(a),this.insertBeginning(a)},a.prototype.clear=function(){return this.headNode=this.tailNode=null},a}(),LRUCache=function(){function a(a,b){this.capacity=null!=a?a:10,this.maxAge=null!=b?b:6e4,this._linkList=new DoubleLinkedList,this.reset(),this.hitCount=this.missCount=0}return a.prototype.resetHitMissCount=function(){return this.hitCount=this.missCount=0},a.prototype.keys=function(){return Object.keys(this._hash)},a.prototype.values=function(){var a;return a=this.keys().map(function(a){return function(b){return a.get(b)}}(this)),a.filter(function(a){return void 0!==a})},a.prototype.remove=function(a){var b;if(null!=this._hash[a])return b=this._hash[a],this._linkList.remove(b),delete this._hash[a],b.data.onDispose&&b.data.onDispose.call(this,b.data.key,b.data.value),this.size--},a.prototype.reset=function(){return this._hash={},this.size=0,this.resetHitMissCount(),this._linkList.clear()},a.prototype.set=function(a,b,c){var d,e;if(e=this._hash[a])return e.data.value=b,e.data.onDispose=c,this._refreshNode(e);this.size===this.capacity&&this.remove(this._linkList.tailNode.data.key),d=function(a,b,c){return{data:a,pre:b,next:c}},e=d({key:a,value:b,onDispose:c}),e.data.lastVisitTime=Date.now(),this._linkList.insertBeginning(e),this._hash[a]=e,this.size++},a.prototype.get=function(a){var b;return(b=this._hash[a])?this._isExpiredNode(b)?(this.remove(a),void this.missCount++):(this._refreshNode(b),this.hitCount++,b.data.value):void this.missCount++},a.prototype._refreshNode=function(a){return a.data.lastVisitTime=Date.now(),this._linkList.moveToHead(a)},a.prototype._isExpiredNode=function(a){return Date.now()-a.data.lastVisitTime>this.maxAge},a.prototype.has=function(a){return null!=this._hash[a]},a}(),cached_runs=new LRUCache(100,22896e6),cached_findDependenciesInScript=new LRUCache(100,22896e6),freeze=function(){var a,b,d,e,f,g;for(e=[],b=[],d=[],"",f=a=0,g=symtab.length;0<=g?a<g:a>g;f=0<=g?++a:--a)!1===isSymbolReclaimable[f]&&(e.push(symtab[f]),b.push(binding[f]));return d=userSimplificationsInListForm.slice(0),[e,b,d,zero,one,imaginaryunit,getStateHash()]},unfreeze=function(a){var b,c,d,e,f,g;for(e=a[0],c=a[1],d=a[2],zero=a[3],one=a[4],imaginaryunit=a[5],f=b=0,g=e.length;0<=g?b<g:b>g;f=0<=g?++b:--b)symtab[f]=e[f],binding[f]=c[f];return userSimplificationsInListForm=d.slice(0)},compareState=function(a){return getStateHash()===a},resetCache=function(){if(null!=cached_runs&&(cached_runs.reset(),DEBUG&&console.log("resetting cached_runs")),null!=cached_findDependenciesInScript&&(cached_findDependenciesInScript.reset(),DEBUG))return console.log("resetting cached_findDependenciesInScript")},resetCacheHitMissCounts=function(){if(null!=cached_runs&&cached_runs.resetHitMissCount(),null!=cached_findDependenciesInScript)return cached_findDependenciesInScript.resetHitMissCount()},totalAllCachesHits=function(){return cached_runs.hitCount+cached_findDependenciesInScript.hitCount},totalAllCachesMisses=function(){return cached_runs.missCount+cached_findDependenciesInScript.missCount},getStateHash=function(){var a,b,c,d,e,f,g,h,i;for(d="",e=a=g=NIL+1,h=symtab.length;g<=h?a<h:a>h;e=g<=h?++a:--a)if(""!==symtab[e].printname)i=print_list(symtab[e]),c=print_list(binding[e]),d+=" //"+i+" : "+c;else if(!1===isSymbolReclaimable[e])break;for(b=0,f=userSimplificationsInListForm.length;b<f;b++)e=userSimplificationsInListForm[b],d+=" pattern: "+e;return DEBUG&&console.log("frozenHash: "+d),d}}).call(this);